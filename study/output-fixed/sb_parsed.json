[
    {
        "    Proj": "Chart-1",
        "   Class": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Possible null pointer dereference of ? in org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawDomainMarker(Graphics2D, CategoryPlot, CategoryAxis, CategoryMarker, Rectangle2D)",
        "  Method": "drawDomainMarker",
        "   Field": "",
        "   Lines": [
            [
                1129,
                1129,
                "SOURCE_LINE_DEREF"
            ],
            [
                1117,
                1117,
                "SOURCE_LINE_NULL_VALUE"
            ],
            [
                1122,
                1122,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "Chart-10",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Chart-11",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Chart-12",
        "   Class": "org.jfree.chart.plot.MultiplePiePlot",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "HE",
        "    Type": "HE_EQUALS_USE_HASHCODE",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "org.jfree.chart.plot.MultiplePiePlot defines equals and uses Object.hashCode()",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                562,
                588,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-13",
        "   Class": "org.jfree.chart.block.BorderArrangement",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "HE",
        "    Type": "HE_EQUALS_USE_HASHCODE",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "org.jfree.chart.block.BorderArrangement defines equals and uses Object.hashCode()",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                510,
                532,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-13",
        "   Class": "org.jfree.chart.block.BorderArrangement",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Possible null pointer dereference of ? in org.jfree.chart.block.BorderArrangement.arrange(BlockContainer, Graphics2D, RectangleConstraint)",
        "  Method": "arrange",
        "   Field": "",
        "   Lines": [
            [
                170,
                170,
                "SOURCE_LINE_DEREF"
            ],
            [
                133,
                133,
                "SOURCE_LINE_NULL_VALUE"
            ],
            [
                143,
                143,
                "SOURCE_LINE_KNOWN_NULL"
            ],
            [
                154,
                154,
                "SOURCE_LINE_KNOWN_NULL"
            ],
            [
                158,
                158,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.addDomainMarker(int, CategoryMarker, Layer, boolean) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "addDomainMarker",
        "   Field": "",
        "   Lines": [
            [
                1972,
                1972,
                null
            ],
            [
                1976,
                1976,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1981,
                1981,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1985,
                1985,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.addRangeMarker(int, Marker, Layer, boolean) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "addRangeMarker",
        "   Field": "",
        "   Lines": [
            [
                2243,
                2243,
                null
            ],
            [
                2247,
                2247,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                2252,
                2252,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                2256,
                2256,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.clearDomainMarkers(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "clearDomainMarkers",
        "   Field": "",
        "   Lines": [
            [
                2066,
                2066,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.clearRangeMarkers(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "clearRangeMarkers",
        "   Field": "",
        "   Lines": [
            [
                2339,
                2339,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.getDomainMarkers(int, Layer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getDomainMarkers",
        "   Field": "",
        "   Lines": [
            [
                2045,
                2045,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.getRangeMarkers(int, Layer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getRangeMarkers",
        "   Field": "",
        "   Lines": [
            [
                2318,
                2318,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis(int, int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "mapDatasetToDomainAxis",
        "   Field": "",
        "   Lines": [
            [
                1241,
                1241,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis(int, int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "mapDatasetToRangeAxis",
        "   Field": "",
        "   Lines": [
            [
                1274,
                1274,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.removeDomainMarker(int, Marker, Layer, boolean) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "removeDomainMarker",
        "   Field": "",
        "   Lines": [
            [
                2159,
                2159,
                null
            ],
            [
                2163,
                2163,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.removeRangeMarker(int, Marker, Layer, boolean) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "removeRangeMarker",
        "   Field": "",
        "   Lines": [
            [
                2444,
                2444,
                null
            ],
            [
                2448,
                2448,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "HE",
        "    Type": "HE_EQUALS_USE_HASHCODE",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "org.jfree.chart.plot.CategoryPlot defines equals and uses Object.hashCode()",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                3872,
                3994,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MS",
        "    Type": "MS_SHOULD_BE_FINAL",
        "Priority": "1",
        "    Rank": "16",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.localizationResources isn't final but should be",
        "  Method": "",
        "   Field": "localizationResources",
        "   Lines": [
            [
                286,
                286,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.addDomainMarker(int, Marker, Layer, boolean) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "addDomainMarker",
        "   Field": "",
        "   Lines": [
            [
                2197,
                2197,
                null
            ],
            [
                2201,
                2201,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                2206,
                2206,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                2210,
                2210,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.addRangeMarker(int, Marker, Layer, boolean) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "addRangeMarker",
        "   Field": "",
        "   Lines": [
            [
                2398,
                2398,
                null
            ],
            [
                2402,
                2402,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                2407,
                2407,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                2411,
                2411,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.clearDomainMarkers(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "clearDomainMarkers",
        "   Field": "",
        "   Lines": [
            [
                2125,
                2125,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.clearRangeMarkers(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "clearRangeMarkers",
        "   Field": "",
        "   Lines": [
            [
                2428,
                2428,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.getDataRange(ValueAxis) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getDataRange",
        "   Field": "",
        "   Lines": [
            [
                3988,
                3988,
                null
            ],
            [
                3996,
                3996,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis(Integer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getDatasetsMappedToDomainAxis",
        "   Field": "",
        "   Lines": [
            [
                3881,
                3881,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis(Integer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getDatasetsMappedToRangeAxis",
        "   Field": "",
        "   Lines": [
            [
                3911,
                3911,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.getDomainAxisForDataset(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getDomainAxisForDataset",
        "   Field": "",
        "   Lines": [
            [
                3401,
                3401,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.getDomainMarkers(int, Layer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getDomainMarkers",
        "   Field": "",
        "   Lines": [
            [
                3666,
                3666,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.getRangeAxisForDataset(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getRangeAxisForDataset",
        "   Field": "",
        "   Lines": [
            [
                3428,
                3428,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.getRangeMarkers(int, Layer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getRangeMarkers",
        "   Field": "",
        "   Lines": [
            [
                3692,
                3692,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis(int, int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "mapDatasetToDomainAxis",
        "   Field": "",
        "   Lines": [
            [
                1354,
                1354,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis(int, int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "mapDatasetToRangeAxis",
        "   Field": "",
        "   Lines": [
            [
                1370,
                1370,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.removeDomainMarker(int, Marker, Layer, boolean) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "removeDomainMarker",
        "   Field": "",
        "   Lines": [
            [
                2286,
                2286,
                null
            ],
            [
                2290,
                2290,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.removeRangeMarker(int, Marker, Layer, boolean) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "removeRangeMarker",
        "   Field": "",
        "   Lines": [
            [
                2525,
                2525,
                null
            ],
            [
                2529,
                2529,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "HE",
        "    Type": "HE_EQUALS_USE_HASHCODE",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "org.jfree.chart.plot.XYPlot defines equals and uses Object.hashCode()",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                4713,
                4885,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-14",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MS",
        "    Type": "MS_SHOULD_BE_FINAL",
        "Priority": "1",
        "    Rank": "16",
        "     Msg": "org.jfree.chart.plot.XYPlot.localizationResources isn't final but should be",
        "  Method": "",
        "   Field": "localizationResources",
        "   Lines": [
            [
                303,
                303,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-15",
        "   Class": "org.jfree.chart.plot.PiePlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.PiePlot.getSectionKey(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getSectionKey",
        "   Field": "",
        "   Lines": [
            [
                880,
                880,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-15",
        "   Class": "org.jfree.chart.plot.PiePlot",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "HE",
        "    Type": "HE_EQUALS_USE_HASHCODE",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "org.jfree.chart.plot.PiePlot defines equals and uses Object.hashCode()",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                2803,
                2956,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-15",
        "   Class": "org.jfree.chart.plot.PiePlot",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MS",
        "    Type": "MS_SHOULD_BE_FINAL",
        "Priority": "1",
        "    Rank": "16",
        "     Msg": "org.jfree.chart.plot.PiePlot.localizationResources isn't final but should be",
        "  Method": "",
        "   Field": "localizationResources",
        "   Lines": [
            [
                457,
                457,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-16",
        "   Class": "org.jfree.data.category.DefaultIntervalCategoryDataset",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.jfree.data.category.DefaultIntervalCategoryDataset(Comparable[], Comparable[], Number[][], Number[][]) may expose internal representation by storing an externally mutable object into DefaultIntervalCategoryDataset.categoryKeys",
        "  Method": "<init>",
        "   Field": "categoryKeys",
        "   Lines": [
            [
                197,
                197,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-16",
        "   Class": "org.jfree.data.category.DefaultIntervalCategoryDataset",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.jfree.data.category.DefaultIntervalCategoryDataset(Comparable[], Comparable[], Number[][], Number[][]) may expose internal representation by storing an externally mutable object into DefaultIntervalCategoryDataset.endData",
        "  Method": "<init>",
        "   Field": "endData",
        "   Lines": [
            [
                148,
                148,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-16",
        "   Class": "org.jfree.data.category.DefaultIntervalCategoryDataset",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.jfree.data.category.DefaultIntervalCategoryDataset(Comparable[], Comparable[], Number[][], Number[][]) may expose internal representation by storing an externally mutable object into DefaultIntervalCategoryDataset.seriesKeys",
        "  Method": "<init>",
        "   Field": "seriesKeys",
        "   Lines": [
            [
                174,
                174,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-16",
        "   Class": "org.jfree.data.category.DefaultIntervalCategoryDataset",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.jfree.data.category.DefaultIntervalCategoryDataset(Comparable[], Comparable[], Number[][], Number[][]) may expose internal representation by storing an externally mutable object into DefaultIntervalCategoryDataset.startData",
        "  Method": "<init>",
        "   Field": "startData",
        "   Lines": [
            [
                147,
                147,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-16",
        "   Class": "org.jfree.data.category.DefaultIntervalCategoryDataset",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.data.category.DefaultIntervalCategoryDataset.setCategoryKeys(Comparable[]) may expose internal representation by storing an externally mutable object into DefaultIntervalCategoryDataset.categoryKeys",
        "  Method": "setCategoryKeys",
        "   Field": "categoryKeys",
        "   Lines": [
            [
                349,
                349,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-16",
        "   Class": "org.jfree.data.category.DefaultIntervalCategoryDataset",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.data.category.DefaultIntervalCategoryDataset.setSeriesKeys(Comparable[]) may expose internal representation by storing an externally mutable object into DefaultIntervalCategoryDataset.seriesKeys",
        "  Method": "setSeriesKeys",
        "   Field": "seriesKeys",
        "   Lines": [
            [
                284,
                284,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-16",
        "   Class": "org.jfree.data.category.DefaultIntervalCategoryDataset",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "HE",
        "    Type": "HE_EQUALS_USE_HASHCODE",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "org.jfree.data.category.DefaultIntervalCategoryDataset defines equals and uses Object.hashCode()",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                713,
                734,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-17",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Chart-18",
        "   Class": "org.jfree.data.DefaultKeyedValues",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.data.DefaultKeyedValues.rebuildIndex() invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "rebuildIndex",
        "   Field": "",
        "   Lines": [
            [
                302,
                302,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-18",
        "   Class": "org.jfree.data.DefaultKeyedValues",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.data.DefaultKeyedValues.setValue(Comparable, Number) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "setValue",
        "   Field": "",
        "   Lines": [
            [
                240,
                240,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-19",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.addDomainMarker(int, CategoryMarker, Layer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "addDomainMarker",
        "   Field": "",
        "   Lines": [
            [
                1936,
                1936,
                null
            ],
            [
                1940,
                1940,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1945,
                1945,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1949,
                1949,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Chart-19",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.addRangeMarker(int, Marker, Layer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "addRangeMarker",
        "   Field": "",
        "   Lines": [
            [
                2095,
                2095,
                null
            ],
            [
                2099,
                2099,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                2104,
                2104,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                2108,
                2108,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Chart-19",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.clearDomainMarkers(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "clearDomainMarkers",
        "   Field": "",
        "   Lines": [
            [
                2028,
                2028,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-19",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.clearRangeMarkers(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "clearRangeMarkers",
        "   Field": "",
        "   Lines": [
            [
                2189,
                2189,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-19",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.getDomainMarkers(int, Layer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getDomainMarkers",
        "   Field": "",
        "   Lines": [
            [
                2007,
                2007,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-19",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.getRangeMarkers(int, Layer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getRangeMarkers",
        "   Field": "",
        "   Lines": [
            [
                2168,
                2168,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-19",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis(int, int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "mapDatasetToDomainAxis",
        "   Field": "",
        "   Lines": [
            [
                1233,
                1233,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-19",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis(int, int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "mapDatasetToRangeAxis",
        "   Field": "",
        "   Lines": [
            [
                1266,
                1266,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-19",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "HE",
        "    Type": "HE_EQUALS_USE_HASHCODE",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "org.jfree.chart.plot.CategoryPlot defines equals and uses Object.hashCode()",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                3562,
                3684,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-19",
        "   Class": "org.jfree.chart.plot.CategoryPlot",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MS",
        "    Type": "MS_SHOULD_BE_FINAL",
        "Priority": "1",
        "    Rank": "16",
        "     Msg": "org.jfree.chart.plot.CategoryPlot.localizationResources isn't final but should be",
        "  Method": "",
        "   Field": "localizationResources",
        "   Lines": [
            [
                277,
                277,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-2",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Chart-20",
        "   Class": "org.jfree.chart.plot.ValueMarker",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "HE",
        "    Type": "HE_EQUALS_USE_HASHCODE",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "org.jfree.chart.plot.ValueMarker defines equals and uses Object.hashCode()",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                141,
                154,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-21",
        "   Class": "org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "HE",
        "    Type": "HE_EQUALS_USE_HASHCODE",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset defines equals and uses Object.hashCode()",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                791,
                799,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-22",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Chart-23",
        "   Class": "org.jfree.chart.renderer.category.MinMaxCategoryRenderer",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "HE",
        "    Type": "HE_EQUALS_NO_HASHCODE",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "org.jfree.chart.renderer.category.MinMaxCategoryRenderer defines equals but not hashCode",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                436,
                452,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-24",
        "   Class": "org.jfree.chart.renderer.GrayPaintScale",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "HE",
        "    Type": "HE_EQUALS_USE_HASHCODE",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "org.jfree.chart.renderer.GrayPaintScale defines equals and uses Object.hashCode()",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                145,
                158,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-25",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Chart-26",
        "   Class": "org.jfree.chart.axis.Axis",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "HE",
        "    Type": "HE_EQUALS_USE_HASHCODE",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "org.jfree.chart.axis.Axis defines equals and uses Object.hashCode()",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                1262,
                1334,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-3",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.addDomainMarker(int, Marker, Layer, boolean) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "addDomainMarker",
        "   Field": "",
        "   Lines": [
            [
                2590,
                2590,
                null
            ],
            [
                2594,
                2594,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                2599,
                2599,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                2603,
                2603,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.addRangeMarker(int, Marker, Layer, boolean) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "addRangeMarker",
        "   Field": "",
        "   Lines": [
            [
                2791,
                2791,
                null
            ],
            [
                2795,
                2795,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                2800,
                2800,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                2804,
                2804,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.clearDomainMarkers(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "clearDomainMarkers",
        "   Field": "",
        "   Lines": [
            [
                2518,
                2518,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.clearRangeMarkers(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "clearRangeMarkers",
        "   Field": "",
        "   Lines": [
            [
                2821,
                2821,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.getDataRange(ValueAxis) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getDataRange",
        "   Field": "",
        "   Lines": [
            [
                4436,
                4436,
                null
            ],
            [
                4454,
                4454,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis(Integer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getDatasetsMappedToDomainAxis",
        "   Field": "",
        "   Lines": [
            [
                4328,
                4328,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis(Integer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getDatasetsMappedToRangeAxis",
        "   Field": "",
        "   Lines": [
            [
                4358,
                4358,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.getDomainAxisForDataset(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getDomainAxisForDataset",
        "   Field": "",
        "   Lines": [
            [
                3815,
                3815,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.getDomainMarkers(int, Layer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getDomainMarkers",
        "   Field": "",
        "   Lines": [
            [
                4113,
                4113,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.getRangeAxisForDataset(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getRangeAxisForDataset",
        "   Field": "",
        "   Lines": [
            [
                3842,
                3842,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.getRangeMarkers(int, Layer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getRangeMarkers",
        "   Field": "",
        "   Lines": [
            [
                4139,
                4139,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes(int, List) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "mapDatasetToDomainAxes",
        "   Field": "",
        "   Lines": [
            [
                1483,
                1483,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis(int, int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "mapDatasetToDomainAxis",
        "   Field": "",
        "   Lines": [
            [
                1464,
                1464,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes(int, List) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "mapDatasetToRangeAxes",
        "   Field": "",
        "   Lines": [
            [
                1519,
                1519,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis(int, int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "mapDatasetToRangeAxis",
        "   Field": "",
        "   Lines": [
            [
                1500,
                1500,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.removeDomainMarker(int, Marker, Layer, boolean) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "removeDomainMarker",
        "   Field": "",
        "   Lines": [
            [
                2679,
                2679,
                null
            ],
            [
                2683,
                2683,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.jfree.chart.plot.XYPlot.removeRangeMarker(int, Marker, Layer, boolean) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "removeRangeMarker",
        "   Field": "",
        "   Lines": [
            [
                2918,
                2918,
                null
            ],
            [
                2922,
                2922,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "HE",
        "    Type": "HE_EQUALS_USE_HASHCODE",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "org.jfree.chart.plot.XYPlot defines equals and uses Object.hashCode()",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                5312,
                5511,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-4",
        "   Class": "org.jfree.chart.plot.XYPlot",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MS",
        "    Type": "MS_SHOULD_BE_FINAL",
        "Priority": "1",
        "    Rank": "16",
        "     Msg": "org.jfree.chart.plot.XYPlot.localizationResources isn't final but should be",
        "  Method": "",
        "   Field": "localizationResources",
        "   Lines": [
            [
                340,
                340,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-5",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Chart-6",
        "   Class": "org.jfree.chart.util.ShapeList",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "Eq",
        "    Type": "EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "org.jfree.chart.util.ShapeList overrides equals in AbstractObjectList and may not be symmetric",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                105,
                118,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-7",
        "   Class": "org.jfree.data.time.TimePeriodValues",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "CN",
        "    Type": "CN_IDIOM_NO_SUPER_CALL",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "org.jfree.data.time.TimePeriodValues.clone() does not call super.clone()",
        "  Method": "clone",
        "   Field": "",
        "   Lines": [
            [
                480,
                481,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-8",
        "   Class": "org.jfree.data.time.Week",
        "     Cat": "STYLE",
        "  Abbrev": "UC",
        "    Type": "UC_USELESS_CONDITION",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "Useless condition: it's known that arg0 <= 53 ('5') at this point",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                129,
                129,
                "SOURCE_UNREACHABLE_CODE"
            ],
            [
                128,
                128,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-8",
        "   Class": "org.jfree.data.time.Week",
        "     Cat": "STYLE",
        "  Abbrev": "UC",
        "    Type": "UC_USELESS_CONDITION",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "Useless condition: it's known that arg0 <= 53 ('5') at this point",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                145,
                145,
                "SOURCE_UNREACHABLE_CODE"
            ],
            [
                144,
                144,
                null
            ]
        ]
    },
    {
        "    Proj": "Chart-9",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-1",
        "   Class": "com.google.javascript.jscomp.RemoveUnusedVars",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.RemoveUnusedVars.traverseNode(Node, Node, Scope) where default case is missing",
        "  Method": "traverseNode",
        "   Field": "",
        "   Lines": [
            [
                195,
                295,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-10",
        "   Class": "com.google.javascript.jscomp.NodeUtil",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Possible null pointer dereference of ? in com.google.javascript.jscomp.NodeUtil.getAddingRoot(Node)",
        "  Method": "getAddingRoot",
        "   Field": "",
        "   Lines": [
            [
                2264,
                2264,
                "SOURCE_LINE_DEREF"
            ],
            [
                2250,
                2250,
                "SOURCE_LINE_NULL_VALUE"
            ],
            [
                2252,
                2252,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "Closure-10",
        "   Class": "com.google.javascript.jscomp.NodeUtil",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field vars in com.google.javascript.jscomp.NodeUtil.getVarsDeclaredInBranch(Node)",
        "  Method": "getVarsDeclaredInBranch",
        "   Field": "vars",
        "   Lines": [
            [
                2484,
                2484,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-100",
        "   Class": "com.google.javascript.jscomp.CheckGlobalThis",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to $L5 in com.google.javascript.jscomp.CheckGlobalThis.shouldTraverse(NodeTraversal, Node, Node)",
        "  Method": "shouldTraverse",
        "   Field": "",
        "   Lines": [
            [
                110,
                110,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-101",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-102",
        "   Class": "com.google.javascript.jscomp.Normalize",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.Normalize.extractForInitializer(Node, Node, Node) where default case is missing",
        "  Method": "extractForInitializer",
        "   Field": "",
        "   Lines": [
            [
                318,
                338,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-102",
        "   Class": "com.google.javascript.jscomp.Normalize",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.Normalize.visit(NodeTraversal, Node, Node) where default case is missing",
        "  Method": "visit",
        "   Field": "",
        "   Lines": [
            [
                235,
                242,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-103",
        "   Class": "com.google.javascript.jscomp.ControlFlowAnalysis",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.ControlFlowAnalysis.shouldTraverse(NodeTraversal, Node, Node) where default case is missing",
        "  Method": "shouldTraverse",
        "   Field": "",
        "   Lines": [
            [
                247,
                283,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-103",
        "   Class": "com.google.javascript.jscomp.DisambiguateProperties",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to $L3 in com.google.javascript.jscomp.DisambiguateProperties.process(Node, Node)",
        "  Method": "process",
        "   Field": "",
        "   Lines": [
            [
                284,
                284,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-104",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-105",
        "   Class": "com.google.javascript.jscomp.FoldConstants",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.FoldConstants.makeForwardSlashBracketSafe(Node) where default case is missing",
        "  Method": "makeForwardSlashBracketSafe",
        "   Field": "",
        "   Lines": [
            [
                1717,
                1724,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-105",
        "   Class": "com.google.javascript.jscomp.FoldConstants",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.FoldConstants.tryMinimizeCondition(NodeTraversal, Node, Node) where default case is missing",
        "  Method": "tryMinimizeCondition",
        "   Field": "",
        "   Lines": [
            [
                1868,
                1895,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-105",
        "   Class": "com.google.javascript.jscomp.FoldConstants",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.FoldConstants.visit(NodeTraversal, Node, Node) where default case is missing",
        "  Method": "visit",
        "   Field": "",
        "   Lines": [
            [
                106,
                126,
                null
            ],
            [
                161,
                211,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Closure-106",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-107",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-108",
        "   Class": "com.google.javascript.jscomp.ScopedAliases",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field aliasVar in com.google.javascript.jscomp.ScopedAliases.hotSwapScript(Node, Node)",
        "  Method": "hotSwapScript",
        "   Field": "aliasVar",
        "   Lines": [
            [
                155,
                155,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-109",
        "   Class": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Dead store to $L1 in com.google.javascript.jscomp.parsing.JsDocInfoParser.parseResultType(JsDocToken)",
        "  Method": "parseResultType",
        "   Field": "",
        "   Lines": [
            [
                2162,
                2162,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-109",
        "   Class": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to $L4 in com.google.javascript.jscomp.parsing.JsDocInfoParser.parseAnnotation(JsDocToken, List)",
        "  Method": "parseAnnotation",
        "   Field": "",
        "   Lines": [
            [
                597,
                597,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-109",
        "   Class": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "IP",
        "    Type": "IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN",
        "Priority": "1",
        "    Rank": "6",
        "     Msg": "The parameter $L1 to com.google.javascript.jscomp.parsing.JsDocInfoParser.parseResultType(JsDocToken) is dead upon entry but overwritten",
        "  Method": "parseResultType",
        "   Field": "",
        "   Lines": [
            [
                2162,
                2162,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-109",
        "   Class": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "SBSC",
        "    Type": "SBSC_USE_STRINGBUFFER_CONCATENATION",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseTypeName(JsDocToken) concatenates strings using + in a loop",
        "  Method": "parseTypeName",
        "   Field": "",
        "   Lines": [
            [
                1964,
                1964,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-109",
        "   Class": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.parsing.JsDocInfoParser.parseAnnotation(JsDocToken, List) where default case is missing",
        "  Method": "parseAnnotation",
        "   Field": "",
        "   Lines": [
            [
                978,
                1064,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-11",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Possible null pointer dereference of ? in com.google.javascript.jscomp.TypeCheck.visitAssign(NodeTraversal, Node)",
        "  Method": "visitAssign",
        "   Field": "",
        "   Lines": [
            [
                886,
                886,
                "SOURCE_LINE_DEREF"
            ],
            [
                871,
                871,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "Closure-11",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeCheck.checkNoTypeCheckSection(Node, boolean) where default case is missing",
        "  Method": "checkNoTypeCheckSection",
        "   Field": "",
        "   Lines": [
            [
                396,
                410,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-11",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeCheck.shouldTraverse(NodeTraversal, Node, Node) where default case is missing",
        "  Method": "shouldTraverse",
        "   Field": "",
        "   Lines": [
            [
                426,
                438,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-110",
        "   Class": "com.google.javascript.jscomp.ScopedAliases",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field aliasVar in com.google.javascript.jscomp.ScopedAliases.hotSwapScript(Node, Node)",
        "  Method": "hotSwapScript",
        "   Field": "aliasVar",
        "   Lines": [
            [
                155,
                155,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-110",
        "   Class": "com.google.javascript.rhino.Node",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field nodeA in com.google.javascript.rhino.Node.checkTreeEquals(Node)",
        "  Method": "checkTreeEquals",
        "   Field": "nodeA",
        "   Lines": [
            [
                1437,
                1437,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-110",
        "   Class": "com.google.javascript.rhino.Node",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field nodeB in com.google.javascript.rhino.Node.checkTreeEquals(Node)",
        "  Method": "checkTreeEquals",
        "   Field": "nodeB",
        "   Lines": [
            [
                1438,
                1438,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-111",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-112",
        "   Class": "com.google.javascript.jscomp.TypeInference",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeInference.branchedFlowThrough(Node, FlowScope) where default case is missing",
        "  Method": "branchedFlowThrough",
        "   Field": "",
        "   Lines": [
            [
                211,
                295,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-112",
        "   Class": "com.google.javascript.jscomp.TypeInference",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeInference.traverse(Node, FlowScope) where default case is missing",
        "  Method": "traverse",
        "   Field": "",
        "   Lines": [
            [
                308,
                456,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-112",
        "   Class": "com.google.javascript.jscomp.TypeInference",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeInference.updateScopeForTypeChange(FlowScope, Node, JSType, JSType) where default case is missing",
        "  Method": "updateScopeForTypeChange",
        "   Field": "",
        "   Lines": [
            [
                524,
                561,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-113",
        "   Class": "com.google.javascript.jscomp.ProcessClosurePrimitives",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to $L7 in com.google.javascript.jscomp.ProcessClosurePrimitives.processDefineCall(NodeTraversal, Node, Node)",
        "  Method": "processDefineCall",
        "   Field": "",
        "   Lines": [
            [
                372,
                372,
                null
            ],
            [
                373,
                373,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Closure-113",
        "   Class": "com.google.javascript.jscomp.ProcessClosurePrimitives",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.ProcessClosurePrimitives.visit(NodeTraversal, Node, Node) where default case is missing",
        "  Method": "visit",
        "   Field": "",
        "   Lines": [
            [
                203,
                286,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-114",
        "   Class": "com.google.javascript.jscomp.NameAnalyzer",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field prototypeNames in com.google.javascript.jscomp.NameAnalyzer.countOf(NameAnalyzer$TriState, NameAnalyzer$TriState)",
        "  Method": "countOf",
        "   Field": "prototypeNames",
        "   Lines": [
            [
                1657,
                1657,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-114",
        "   Class": "com.google.javascript.jscomp.NameAnalyzer",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field prototypeNames in com.google.javascript.jscomp.NameAnalyzer.getHtmlReport()",
        "  Method": "getHtmlReport",
        "   Field": "prototypeNames",
        "   Lines": [
            [
                1238,
                1238,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-114",
        "   Class": "com.google.javascript.jscomp.NameAnalyzer",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field names in com.google.javascript.jscomp.NameAnalyzer.recordAlias(String, String)",
        "  Method": "recordAlias",
        "   Field": "names",
        "   Lines": [
            [
                1158,
                1158,
                null
            ],
            [
                1164,
                1164,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1159,
                1159,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1167,
                1167,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Closure-114",
        "   Class": "com.google.javascript.jscomp.NameAnalyzer",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field names in com.google.javascript.jscomp.NameAnalyzer.referenceAliases()",
        "  Method": "referenceAliases",
        "   Field": "names",
        "   Lines": [
            [
                1358,
                1358,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-115",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-116",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-117",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-118",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-119",
        "   Class": "com.google.javascript.jscomp.GlobalNamespace",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field node in com.google.javascript.jscomp.GlobalNamespace.scanNewNodes(List)",
        "  Method": "scanNewNodes",
        "   Field": "node",
        "   Lines": [
            [
                199,
                199,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-12",
        "   Class": "com.google.javascript.jscomp.MaybeReachingVariableUse",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field mayUseMap in com.google.javascript.jscomp.MaybeReachingVariableUse.addToUseIfLocal(String, Node, MaybeReachingVariableUse$ReachingUses)",
        "  Method": "addToUseIfLocal",
        "   Field": "mayUseMap",
        "   Lines": [
            [
                267,
                267,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-12",
        "   Class": "com.google.javascript.jscomp.MaybeReachingVariableUse",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field mayUseMap in com.google.javascript.jscomp.MaybeReachingVariableUse.getUses(String, Node)",
        "  Method": "getUses",
        "   Field": "mayUseMap",
        "   Lines": [
            [
                300,
                300,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-12",
        "   Class": "com.google.javascript.jscomp.MaybeReachingVariableUse",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field mayUseMap in com.google.javascript.jscomp.MaybeReachingVariableUse.removeFromUseIfLocal(String, MaybeReachingVariableUse$ReachingUses)",
        "  Method": "removeFromUseIfLocal",
        "   Field": "mayUseMap",
        "   Lines": [
            [
                282,
                282,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-120",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-121",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-122",
        "   Class": "com.google.javascript.jscomp.parsing.IRFactory",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.parsing.IRFactory.validateTypeAnnotations(JSDocInfo, AstNode) where default case is missing",
        "  Method": "validateTypeAnnotations",
        "   Field": "",
        "   Lines": [
            [
                298,
                345,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-123",
        "   Class": "com.google.javascript.jscomp.CodeGenerator",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.CodeGenerator.jsString(String, boolean) where default case is missing",
        "  Method": "jsString",
        "   Field": "",
        "   Lines": [
            [
                1014,
                1016,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-124",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-125",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Possible null pointer dereference of ? in com.google.javascript.jscomp.TypeCheck.visitAssign(NodeTraversal, Node)",
        "  Method": "visitAssign",
        "   Field": "",
        "   Lines": [
            [
                963,
                963,
                "SOURCE_LINE_DEREF"
            ],
            [
                942,
                942,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "Closure-125",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "REC",
        "    Type": "REC_CATCH_EXCEPTION",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Exception is caught when Exception is not thrown in new com.google.javascript.jscomp.TypeCheck(AbstractCompiler, ReverseAbstractInterpreter, JSTypeRegistry, Scope, MemoizedScopeCreator, CheckLevel)",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                347,
                347,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-125",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "REC",
        "    Type": "REC_CATCH_EXCEPTION",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Exception is caught when Exception is not thrown in com.google.javascript.jscomp.TypeCheck.getClosestPropertySuggestion(JSType, String)",
        "  Method": "getClosestPropertySuggestion",
        "   Field": "",
        "   Lines": [
            [
                1524,
                1524,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-125",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_FALLTHROUGH",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeCheck.visit(NodeTraversal, Node, Node) where one case falls through to the next case",
        "  Method": "visit",
        "   Field": "",
        "   Lines": [
            [
                763,
                777,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-125",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeCheck.checkNoTypeCheckSection(Node, boolean) where default case is missing",
        "  Method": "checkNoTypeCheckSection",
        "   Field": "",
        "   Lines": [
            [
                432,
                446,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-125",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeCheck.shouldTraverse(NodeTraversal, Node, Node) where default case is missing",
        "  Method": "shouldTraverse",
        "   Field": "",
        "   Lines": [
            [
                462,
                474,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-126",
        "   Class": "com.google.javascript.jscomp.MinimizeExitPoints",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to $L6 in com.google.javascript.jscomp.MinimizeExitPoints.tryMinimizeIfBlockExits(Node, Node, Node, int, String)",
        "  Method": "tryMinimizeIfBlockExits",
        "   Field": "",
        "   Lines": [
            [
                226,
                226,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-126",
        "   Class": "com.google.javascript.jscomp.MinimizeExitPoints",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.MinimizeExitPoints.visit(NodeTraversal, Node, Node) where default case is missing",
        "  Method": "visit",
        "   Field": "",
        "   Lines": [
            [
                49,
                73,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-127",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-128",
        "   Class": "com.google.javascript.jscomp.CodeGenerator",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.CodeGenerator.jsString(String, boolean) where default case is missing",
        "  Method": "jsString",
        "   Field": "",
        "   Lines": [
            [
                998,
                1000,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-129",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-13",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-130",
        "   Class": "com.google.javascript.jscomp.CollapseProperties",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.CollapseProperties.updateObjLitOrFunctionDeclaration(GlobalNamespace$Name, String, boolean) where default case is missing",
        "  Method": "updateObjLitOrFunctionDeclaration",
        "   Field": "",
        "   Lines": [
            [
                636,
                645,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-131",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-132",
        "   Class": "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.makeForwardSlashBracketSafe(Node) where default case is missing",
        "  Method": "makeForwardSlashBracketSafe",
        "   Field": "",
        "   Lines": [
            [
                1692,
                1696,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-132",
        "   Class": "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.tryReduceReturn(Node) where default case is missing",
        "  Method": "tryReduceReturn",
        "   Field": "",
        "   Lines": [
            [
                422,
                434,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-133",
        "   Class": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Dead store to $L1 in com.google.javascript.jscomp.parsing.JsDocInfoParser.parseResultType(JsDocToken)",
        "  Method": "parseResultType",
        "   Field": "",
        "   Lines": [
            [
                2057,
                2057,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-133",
        "   Class": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "IP",
        "    Type": "IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN",
        "Priority": "1",
        "    Rank": "6",
        "     Msg": "The parameter $L1 to com.google.javascript.jscomp.parsing.JsDocInfoParser.parseResultType(JsDocToken) is dead upon entry but overwritten",
        "  Method": "parseResultType",
        "   Field": "",
        "   Lines": [
            [
                2057,
                2057,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-133",
        "   Class": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "SBSC",
        "    Type": "SBSC_USE_STRINGBUFFER_CONCATENATION",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseTypeName(JsDocToken) concatenates strings using + in a loop",
        "  Method": "parseTypeName",
        "   Field": "",
        "   Lines": [
            [
                1859,
                1859,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-133",
        "   Class": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.parsing.JsDocInfoParser.parse() where default case is missing",
        "  Method": "parse",
        "   Field": "",
        "   Lines": [
            [
                906,
                984,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-14",
        "   Class": "com.google.javascript.jscomp.ControlFlowAnalysis",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.ControlFlowAnalysis.shouldTraverse(NodeTraversal, Node, Node) where default case is missing",
        "  Method": "shouldTraverse",
        "   Field": "",
        "   Lines": [
            [
                251,
                287,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-15",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-16",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-17",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-18",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-19",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-2",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Possible null pointer dereference of ? in com.google.javascript.jscomp.TypeCheck.visitAssign(NodeTraversal, Node)",
        "  Method": "visitAssign",
        "   Field": "",
        "   Lines": [
            [
                942,
                942,
                "SOURCE_LINE_DEREF"
            ],
            [
                921,
                921,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "Closure-2",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_FALLTHROUGH",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeCheck.visit(NodeTraversal, Node, Node) where one case falls through to the next case",
        "  Method": "visit",
        "   Field": "",
        "   Lines": [
            [
                741,
                755,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-2",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeCheck.checkNoTypeCheckSection(Node, boolean) where default case is missing",
        "  Method": "checkNoTypeCheckSection",
        "   Field": "",
        "   Lines": [
            [
                414,
                428,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-2",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeCheck.shouldTraverse(NodeTraversal, Node, Node) where default case is missing",
        "  Method": "shouldTraverse",
        "   Field": "",
        "   Lines": [
            [
                444,
                456,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-20",
        "   Class": "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.makeForwardSlashBracketSafe(Node) where default case is missing",
        "  Method": "makeForwardSlashBracketSafe",
        "   Field": "",
        "   Lines": [
            [
                1687,
                1691,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-20",
        "   Class": "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.tryReduceReturn(Node) where default case is missing",
        "  Method": "tryReduceReturn",
        "   Field": "",
        "   Lines": [
            [
                419,
                431,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-21",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-22",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-23",
        "   Class": "com.google.javascript.jscomp.PeepholeFoldConstants",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to $L4 in com.google.javascript.jscomp.PeepholeFoldConstants.tryFoldArrayAccess(Node, Node, Node)",
        "  Method": "tryFoldArrayAccess",
        "   Field": "",
        "   Lines": [
            [
                1423,
                1423,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-23",
        "   Class": "com.google.javascript.jscomp.PeepholeFoldConstants",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in com.google.javascript.jscomp.PeepholeFoldConstants.performArithmeticOp(int, Node, Node)",
        "  Method": "performArithmeticOp",
        "   Field": "",
        "   Lines": [
            [
                770,
                770,
                null
            ],
            [
                770,
                770,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Closure-23",
        "   Class": "com.google.javascript.jscomp.PeepholeFoldConstants",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "NP",
        "    Type": "NP_BOOLEAN_RETURN_NULL",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "com.google.javascript.jscomp.PeepholeFoldConstants.compareAsNumbers(int, Node, Node) has Boolean return type and returns explicit null",
        "  Method": "compareAsNumbers",
        "   Field": "",
        "   Lines": [
            [
                1188,
                1188,
                null
            ],
            [
                1192,
                1192,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1217,
                1217,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Closure-23",
        "   Class": "com.google.javascript.jscomp.PeepholeFoldConstants",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.PeepholeFoldConstants.tryFoldComparison(Node, Node, Node) where default case is missing",
        "  Method": "tryFoldComparison",
        "   Field": "",
        "   Lines": [
            [
                1031,
                1040,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-23",
        "   Class": "com.google.javascript.jscomp.PeepholeFoldConstants",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.PeepholeFoldConstants.tryFoldTypeof(Node) where default case is missing",
        "  Method": "tryFoldTypeof",
        "   Field": "",
        "   Lines": [
            [
                292,
                318,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-23",
        "   Class": "com.google.javascript.jscomp.PeepholeFoldConstants",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.PeepholeFoldConstants.tryReduceOperandsForOp(Node) where default case is missing",
        "  Method": "tryReduceOperandsForOp",
        "   Field": "",
        "   Lines": [
            [
                193,
                227,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-24",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-25",
        "   Class": "com.google.javascript.jscomp.TypeInference",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeInference.branchedFlowThrough(Node, FlowScope) where default case is missing",
        "  Method": "branchedFlowThrough",
        "   Field": "",
        "   Lines": [
            [
                156,
                239,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-25",
        "   Class": "com.google.javascript.jscomp.TypeInference",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeInference.traverse(Node, FlowScope) where default case is missing",
        "  Method": "traverse",
        "   Field": "",
        "   Lines": [
            [
                252,
                393,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-25",
        "   Class": "com.google.javascript.jscomp.TypeInference",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeInference.updateScopeForTypeChange(FlowScope, Node, JSType, JSType) where default case is missing",
        "  Method": "updateScopeForTypeChange",
        "   Field": "",
        "   Lines": [
            [
                468,
                505,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-26",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-27",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-28",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-29",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-3",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-30",
        "   Class": "com.google.javascript.jscomp.MustBeReachingVariableDef",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field depends in com.google.javascript.jscomp.MustBeReachingVariableDef.addToDefIfLocal(String, Node, Node, MustBeReachingVariableDef$MustDef)",
        "  Method": "addToDefIfLocal",
        "   Field": "depends",
        "   Lines": [
            [
                342,
                342,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-30",
        "   Class": "com.google.javascript.jscomp.MustBeReachingVariableDef",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field reachingDef in com.google.javascript.jscomp.MustBeReachingVariableDef.addToDefIfLocal(String, Node, Node, MustBeReachingVariableDef$MustDef)",
        "  Method": "addToDefIfLocal",
        "   Field": "reachingDef",
        "   Lines": [
            [
                337,
                337,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-30",
        "   Class": "com.google.javascript.jscomp.MustBeReachingVariableDef",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field depends in com.google.javascript.jscomp.MustBeReachingVariableDef.dependsOnOuterScopeVars(String, Node)",
        "  Method": "dependsOnOuterScopeVars",
        "   Field": "depends",
        "   Lines": [
            [
                439,
                439,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-30",
        "   Class": "com.google.javascript.jscomp.MustBeReachingVariableDef",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field reachingDef in com.google.javascript.jscomp.MustBeReachingVariableDef.dependsOnOuterScopeVars(String, Node)",
        "  Method": "dependsOnOuterScopeVars",
        "   Field": "reachingDef",
        "   Lines": [
            [
                434,
                434,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-30",
        "   Class": "com.google.javascript.jscomp.MustBeReachingVariableDef",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field depends in com.google.javascript.jscomp.MustBeReachingVariableDef.escapeParameters(MustBeReachingVariableDef$MustDef)",
        "  Method": "escapeParameters",
        "   Field": "depends",
        "   Lines": [
            [
                376,
                376,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-30",
        "   Class": "com.google.javascript.jscomp.MustBeReachingVariableDef",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field reachingDef in com.google.javascript.jscomp.MustBeReachingVariableDef.escapeParameters(MustBeReachingVariableDef$MustDef)",
        "  Method": "escapeParameters",
        "   Field": "reachingDef",
        "   Lines": [
            [
                366,
                366,
                null
            ],
            [
                371,
                371,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Closure-30",
        "   Class": "com.google.javascript.jscomp.MustBeReachingVariableDef",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field reachingDef in com.google.javascript.jscomp.MustBeReachingVariableDef.getDef(String, Node)",
        "  Method": "getDef",
        "   Field": "reachingDef",
        "   Lines": [
            [
                422,
                422,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-31",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-32",
        "   Class": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Dead store to $L1 in com.google.javascript.jscomp.parsing.JsDocInfoParser.parseResultType(JsDocToken)",
        "  Method": "parseResultType",
        "   Field": "",
        "   Lines": [
            [
                1975,
                1975,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-32",
        "   Class": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "IP",
        "    Type": "IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN",
        "Priority": "1",
        "    Rank": "6",
        "     Msg": "The parameter $L1 to com.google.javascript.jscomp.parsing.JsDocInfoParser.parseResultType(JsDocToken) is dead upon entry but overwritten",
        "  Method": "parseResultType",
        "   Field": "",
        "   Lines": [
            [
                1975,
                1975,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-32",
        "   Class": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "SBSC",
        "    Type": "SBSC_USE_STRINGBUFFER_CONCATENATION",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseTypeName(JsDocToken) concatenates strings using + in a loop",
        "  Method": "parseTypeName",
        "   Field": "",
        "   Lines": [
            [
                1777,
                1777,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-32",
        "   Class": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.parsing.JsDocInfoParser.parse() where default case is missing",
        "  Method": "parse",
        "   Field": "",
        "   Lines": [
            [
                849,
                899,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-33",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-34",
        "   Class": "com.google.javascript.jscomp.CodeGenerator",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.CodeGenerator.jsString(String, boolean) where default case is missing",
        "  Method": "jsString",
        "   Field": "",
        "   Lines": [
            [
                970,
                972,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-35",
        "   Class": "com.google.javascript.jscomp.TypeInference",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeInference.branchedFlowThrough(Node, FlowScope) where default case is missing",
        "  Method": "branchedFlowThrough",
        "   Field": "",
        "   Lines": [
            [
                154,
                237,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-35",
        "   Class": "com.google.javascript.jscomp.TypeInference",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeInference.traverse(Node, FlowScope) where default case is missing",
        "  Method": "traverse",
        "   Field": "",
        "   Lines": [
            [
                250,
                391,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-35",
        "   Class": "com.google.javascript.jscomp.TypeInference",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeInference.updateScopeForTypeChange(FlowScope, Node, JSType, JSType) where default case is missing",
        "  Method": "updateScopeForTypeChange",
        "   Field": "",
        "   Lines": [
            [
                466,
                503,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-36",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-37",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-38",
        "   Class": "com.google.javascript.jscomp.CodeConsumer",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in com.google.javascript.jscomp.CodeConsumer.addNumber(double)",
        "  Method": "addNumber",
        "   Field": "",
        "   Lines": [
            [
                254,
                254,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-38",
        "   Class": "com.google.javascript.jscomp.CodeConsumer",
        "     Cat": "STYLE",
        "  Abbrev": "ICAST",
        "    Type": "ICAST_IDIV_CAST_TO_DOUBLE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Integral division result cast to double or float in com.google.javascript.jscomp.CodeConsumer.addNumber(double)",
        "  Method": "addNumber",
        "   Field": "",
        "   Lines": [
            [
                254,
                254,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-38",
        "   Class": "com.google.javascript.jscomp.CodeConsumer",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "UrF",
        "    Type": "URF_UNREAD_FIELD",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "Unread field: com.google.javascript.jscomp.CodeConsumer.sawFunction",
        "  Method": "",
        "   Field": "sawFunction",
        "   Lines": [
            [
                32,
                32,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-39",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-4",
        "   Class": "com.google.javascript.rhino.jstype.NamedType",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "Se",
        "    Type": "SE_BAD_FIELD",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Class com.google.javascript.rhino.jstype.NamedType defines non-transient non-serializable instance field propertyContinuations",
        "  Method": "",
        "   Field": "propertyContinuations",
        "   Lines": []
    },
    {
        "    Proj": "Closure-4",
        "   Class": "com.google.javascript.rhino.jstype.NamedType",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "Se",
        "    Type": "SE_BAD_FIELD",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Class com.google.javascript.rhino.jstype.NamedType defines non-transient non-serializable instance field validator",
        "  Method": "",
        "   Field": "validator",
        "   Lines": []
    },
    {
        "    Proj": "Closure-40",
        "   Class": "com.google.javascript.jscomp.NameAnalyzer",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field prototypeNames in com.google.javascript.jscomp.NameAnalyzer.countOf(NameAnalyzer$TriState, NameAnalyzer$TriState)",
        "  Method": "countOf",
        "   Field": "prototypeNames",
        "   Lines": [
            [
                1574,
                1574,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-40",
        "   Class": "com.google.javascript.jscomp.NameAnalyzer",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field prototypeNames in com.google.javascript.jscomp.NameAnalyzer.getHtmlReport()",
        "  Method": "getHtmlReport",
        "   Field": "prototypeNames",
        "   Lines": [
            [
                1154,
                1154,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-40",
        "   Class": "com.google.javascript.jscomp.NameAnalyzer",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field names in com.google.javascript.jscomp.NameAnalyzer.recordAlias(String, String)",
        "  Method": "recordAlias",
        "   Field": "names",
        "   Lines": [
            [
                1074,
                1074,
                null
            ],
            [
                1080,
                1080,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1075,
                1075,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1083,
                1083,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Closure-40",
        "   Class": "com.google.javascript.jscomp.NameAnalyzer",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field names in com.google.javascript.jscomp.NameAnalyzer.referenceAliases()",
        "  Method": "referenceAliases",
        "   Field": "names",
        "   Lines": [
            [
                1274,
                1274,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-41",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-42",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-43",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-44",
        "   Class": "com.google.javascript.jscomp.CodeConsumer",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in com.google.javascript.jscomp.CodeConsumer.addNumber(double)",
        "  Method": "addNumber",
        "   Field": "",
        "   Lines": [
            [
                253,
                253,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-44",
        "   Class": "com.google.javascript.jscomp.CodeConsumer",
        "     Cat": "STYLE",
        "  Abbrev": "ICAST",
        "    Type": "ICAST_IDIV_CAST_TO_DOUBLE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Integral division result cast to double or float in com.google.javascript.jscomp.CodeConsumer.addNumber(double)",
        "  Method": "addNumber",
        "   Field": "",
        "   Lines": [
            [
                253,
                253,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-44",
        "   Class": "com.google.javascript.jscomp.CodeConsumer",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "UrF",
        "    Type": "URF_UNREAD_FIELD",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "Unread field: com.google.javascript.jscomp.CodeConsumer.sawFunction",
        "  Method": "",
        "   Field": "sawFunction",
        "   Lines": [
            [
                32,
                32,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-45",
        "   Class": "com.google.javascript.jscomp.RemoveUnusedVars",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.RemoveUnusedVars.traverseNode(Node, Node, Scope) where default case is missing",
        "  Method": "traverseNode",
        "   Field": "",
        "   Lines": [
            [
                195,
                286,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-46",
        "   Class": "com.google.javascript.rhino.jstype.RecordType",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "WMI",
        "    Type": "WMI_WRONG_MAP_ITERATOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new com.google.javascript.rhino.jstype.RecordType(JSTypeRegistry, Map) makes inefficient use of keySet iterator instead of entrySet iterator",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                83,
                83,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-47",
        "   Class": "com.google.debugging.sourcemap.SourceMapConsumerV3",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "INT",
        "    Type": "INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE",
        "Priority": "2",
        "    Rank": "7",
        "     Msg": "Bad comparison of nonnegative value with 0 in com.google.debugging.sourcemap.SourceMapConsumerV3.getMappingForLine(int, int)",
        "  Method": "getMappingForLine",
        "   Field": "",
        "   Lines": [
            [
                215,
                215,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-47",
        "   Class": "com.google.javascript.jscomp.SourceMap",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field prefix in com.google.javascript.jscomp.SourceMap.fixupSourceLocation(String)",
        "  Method": "fixupSourceLocation",
        "   Field": "prefix",
        "   Lines": [
            [
                168,
                168,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-48",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-49",
        "   Class": "com.google.javascript.jscomp.MakeDeclaredNamesUnique",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.MakeDeclaredNamesUnique.shouldTraverse(NodeTraversal, Node, Node) where default case is missing",
        "  Method": "shouldTraverse",
        "   Field": "",
        "   Lines": [
            [
                108,
                150,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-49",
        "   Class": "com.google.javascript.jscomp.MakeDeclaredNamesUnique",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.MakeDeclaredNamesUnique.visit(NodeTraversal, Node, Node) where default case is missing",
        "  Method": "visit",
        "   Field": "",
        "   Lines": [
            [
                160,
                189,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-5",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-50",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-51",
        "   Class": "com.google.javascript.jscomp.CodeConsumer",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in com.google.javascript.jscomp.CodeConsumer.addNumber(double)",
        "  Method": "addNumber",
        "   Field": "",
        "   Lines": [
            [
                246,
                246,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-51",
        "   Class": "com.google.javascript.jscomp.CodeConsumer",
        "     Cat": "STYLE",
        "  Abbrev": "ICAST",
        "    Type": "ICAST_IDIV_CAST_TO_DOUBLE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Integral division result cast to double or float in com.google.javascript.jscomp.CodeConsumer.addNumber(double)",
        "  Method": "addNumber",
        "   Field": "",
        "   Lines": [
            [
                246,
                246,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-51",
        "   Class": "com.google.javascript.jscomp.CodeConsumer",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "UrF",
        "    Type": "URF_UNREAD_FIELD",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "Unread field: com.google.javascript.jscomp.CodeConsumer.sawFunction",
        "  Method": "",
        "   Field": "sawFunction",
        "   Lines": [
            [
                32,
                32,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-52",
        "   Class": "com.google.javascript.jscomp.CodeGenerator",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.CodeGenerator.jsString(String) where default case is missing",
        "  Method": "jsString",
        "   Field": "",
        "   Lines": [
            [
                961,
                963,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-53",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-54",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-55",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-56",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-57",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-58",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-59",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-6",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-60",
        "   Class": "com.google.javascript.jscomp.NodeUtil",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Possible null pointer dereference of ? in com.google.javascript.jscomp.NodeUtil.getAddingRoot(Node)",
        "  Method": "getAddingRoot",
        "   Field": "",
        "   Lines": [
            [
                2291,
                2291,
                "SOURCE_LINE_DEREF"
            ],
            [
                2277,
                2277,
                "SOURCE_LINE_NULL_VALUE"
            ],
            [
                2279,
                2279,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "Closure-60",
        "   Class": "com.google.javascript.jscomp.NodeUtil",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field vars in com.google.javascript.jscomp.NodeUtil.getVarsDeclaredInBranch(Node)",
        "  Method": "getVarsDeclaredInBranch",
        "   Field": "vars",
        "   Lines": [
            [
                2512,
                2512,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-61",
        "   Class": "com.google.javascript.jscomp.NodeUtil",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Possible null pointer dereference of ? in com.google.javascript.jscomp.NodeUtil.getAddingRoot(Node)",
        "  Method": "getAddingRoot",
        "   Field": "",
        "   Lines": [
            [
                2281,
                2281,
                "SOURCE_LINE_DEREF"
            ],
            [
                2267,
                2267,
                "SOURCE_LINE_NULL_VALUE"
            ],
            [
                2269,
                2269,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "Closure-61",
        "   Class": "com.google.javascript.jscomp.NodeUtil",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field vars in com.google.javascript.jscomp.NodeUtil.getVarsDeclaredInBranch(Node)",
        "  Method": "getVarsDeclaredInBranch",
        "   Field": "vars",
        "   Lines": [
            [
                2502,
                2502,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-62",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-63",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-64",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-65",
        "   Class": "com.google.javascript.jscomp.CodeGenerator",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.CodeGenerator.jsString(String) where default case is missing",
        "  Method": "jsString",
        "   Field": "",
        "   Lines": [
            [
                961,
                963,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-66",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to $L4 in com.google.javascript.jscomp.TypeCheck.shouldTraverse(NodeTraversal, Node, Node)",
        "  Method": "shouldTraverse",
        "   Field": "",
        "   Lines": [
            [
                429,
                429,
                null
            ],
            [
                431,
                431,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Closure-66",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeCheck.checkNoTypeCheckSection(Node, boolean) where default case is missing",
        "  Method": "checkNoTypeCheckSection",
        "   Field": "",
        "   Lines": [
            [
                397,
                411,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-66",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeCheck.shouldTraverse(NodeTraversal, Node, Node) where default case is missing",
        "  Method": "shouldTraverse",
        "   Field": "",
        "   Lines": [
            [
                426,
                440,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-67",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-68",
        "   Class": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Dead store to $L1 in com.google.javascript.jscomp.parsing.JsDocInfoParser.parseResultType(JsDocToken)",
        "  Method": "parseResultType",
        "   Field": "",
        "   Lines": [
            [
                1927,
                1927,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-68",
        "   Class": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "IP",
        "    Type": "IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN",
        "Priority": "1",
        "    Rank": "6",
        "     Msg": "The parameter $L1 to com.google.javascript.jscomp.parsing.JsDocInfoParser.parseResultType(JsDocToken) is dead upon entry but overwritten",
        "  Method": "parseResultType",
        "   Field": "",
        "   Lines": [
            [
                1927,
                1927,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-68",
        "   Class": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "SBSC",
        "    Type": "SBSC_USE_STRINGBUFFER_CONCATENATION",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseTypeName(JsDocToken) concatenates strings using + in a loop",
        "  Method": "parseTypeName",
        "   Field": "",
        "   Lines": [
            [
                1729,
                1729,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-68",
        "   Class": "com.google.javascript.jscomp.parsing.JsDocInfoParser",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.parsing.JsDocInfoParser.parse() where default case is missing",
        "  Method": "parse",
        "   Field": "",
        "   Lines": [
            [
                813,
                863,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-69",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to $L4 in com.google.javascript.jscomp.TypeCheck.shouldTraverse(NodeTraversal, Node, Node)",
        "  Method": "shouldTraverse",
        "   Field": "",
        "   Lines": [
            [
                429,
                429,
                null
            ],
            [
                431,
                431,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Closure-69",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeCheck.checkNoTypeCheckSection(Node, boolean) where default case is missing",
        "  Method": "checkNoTypeCheckSection",
        "   Field": "",
        "   Lines": [
            [
                397,
                411,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-69",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeCheck.shouldTraverse(NodeTraversal, Node, Node) where default case is missing",
        "  Method": "shouldTraverse",
        "   Field": "",
        "   Lines": [
            [
                426,
                440,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-7",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-70",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-71",
        "   Class": "com.google.javascript.jscomp.CheckAccessControls",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.CheckAccessControls.visit(NodeTraversal, Node, Node) where default case is missing",
        "  Method": "visit",
        "   Field": "",
        "   Lines": [
            [
                215,
                226,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-72",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-73",
        "   Class": "com.google.javascript.jscomp.CodeGenerator",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.CodeGenerator.jsString(String, CharsetEncoder) where default case is missing",
        "  Method": "jsString",
        "   Field": "",
        "   Lines": [
            [
                944,
                946,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-74",
        "   Class": "com.google.javascript.jscomp.PeepholeFoldConstants",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in com.google.javascript.jscomp.PeepholeFoldConstants.performArithmeticOp(int, Node, Node)",
        "  Method": "performArithmeticOp",
        "   Field": "",
        "   Lines": [
            [
                737,
                737,
                null
            ],
            [
                739,
                739,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Closure-74",
        "   Class": "com.google.javascript.jscomp.PeepholeFoldConstants",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "NP",
        "    Type": "NP_BOOLEAN_RETURN_NULL",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "com.google.javascript.jscomp.PeepholeFoldConstants.compareAsNumbers(int, Node, Node) has Boolean return type and returns explicit null",
        "  Method": "compareAsNumbers",
        "   Field": "",
        "   Lines": [
            [
                1095,
                1095,
                null
            ],
            [
                1099,
                1099,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1124,
                1124,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Closure-74",
        "   Class": "com.google.javascript.jscomp.PeepholeFoldConstants",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.PeepholeFoldConstants.tryFoldTypeof(Node) where default case is missing",
        "  Method": "tryFoldTypeof",
        "   Field": "",
        "   Lines": [
            [
                283,
                309,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-74",
        "   Class": "com.google.javascript.jscomp.PeepholeFoldConstants",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.PeepholeFoldConstants.tryReduceOperandsForOp(Node) where default case is missing",
        "  Method": "tryReduceOperandsForOp",
        "   Field": "",
        "   Lines": [
            [
                177,
                211,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-75",
        "   Class": "com.google.javascript.jscomp.NodeUtil",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Possible null pointer dereference of ? in com.google.javascript.jscomp.NodeUtil.getAddingRoot(Node)",
        "  Method": "getAddingRoot",
        "   Field": "",
        "   Lines": [
            [
                2252,
                2252,
                "SOURCE_LINE_DEREF"
            ],
            [
                2238,
                2238,
                "SOURCE_LINE_NULL_VALUE"
            ],
            [
                2240,
                2240,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "Closure-75",
        "   Class": "com.google.javascript.jscomp.NodeUtil",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field vars in com.google.javascript.jscomp.NodeUtil.getVarsDeclaredInBranch(Node)",
        "  Method": "getVarsDeclaredInBranch",
        "   Field": "vars",
        "   Lines": [
            [
                2473,
                2473,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-76",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-77",
        "   Class": "com.google.javascript.jscomp.CodeGenerator",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.CodeGenerator.jsString(String, CharsetEncoder) where default case is missing",
        "  Method": "jsString",
        "   Field": "",
        "   Lines": [
            [
                912,
                914,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-78",
        "   Class": "com.google.javascript.jscomp.PeepholeFoldConstants",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in com.google.javascript.jscomp.PeepholeFoldConstants.performArithmeticOp(int, Node, Node)",
        "  Method": "performArithmeticOp",
        "   Field": "",
        "   Lines": [
            [
                737,
                737,
                null
            ],
            [
                739,
                739,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Closure-78",
        "   Class": "com.google.javascript.jscomp.PeepholeFoldConstants",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "NP",
        "    Type": "NP_BOOLEAN_RETURN_NULL",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "com.google.javascript.jscomp.PeepholeFoldConstants.compareAsNumbers(int, Node, Node) has Boolean return type and returns explicit null",
        "  Method": "compareAsNumbers",
        "   Field": "",
        "   Lines": [
            [
                1078,
                1078,
                null
            ],
            [
                1082,
                1082,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1107,
                1107,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Closure-78",
        "   Class": "com.google.javascript.jscomp.PeepholeFoldConstants",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.PeepholeFoldConstants.tryFoldTypeof(Node) where default case is missing",
        "  Method": "tryFoldTypeof",
        "   Field": "",
        "   Lines": [
            [
                283,
                309,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-78",
        "   Class": "com.google.javascript.jscomp.PeepholeFoldConstants",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.PeepholeFoldConstants.tryReduceOperandsForOp(Node) where default case is missing",
        "  Method": "tryReduceOperandsForOp",
        "   Field": "",
        "   Lines": [
            [
                177,
                211,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-79",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-8",
        "   Class": "com.google.javascript.jscomp.CollapseVariableDeclarations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field parent in com.google.javascript.jscomp.CollapseVariableDeclarations.applyCollapses()",
        "  Method": "applyCollapses",
        "   Field": "parent",
        "   Lines": [
            [
                218,
                218,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-80",
        "   Class": "com.google.javascript.jscomp.NodeUtil",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Possible null pointer dereference of ? in com.google.javascript.jscomp.NodeUtil.getAddingRoot(Node)",
        "  Method": "getAddingRoot",
        "   Field": "",
        "   Lines": [
            [
                2239,
                2239,
                "SOURCE_LINE_DEREF"
            ],
            [
                2225,
                2225,
                "SOURCE_LINE_NULL_VALUE"
            ],
            [
                2227,
                2227,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "Closure-80",
        "   Class": "com.google.javascript.jscomp.NodeUtil",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field vars in com.google.javascript.jscomp.NodeUtil.getVarsDeclaredInBranch(Node)",
        "  Method": "getVarsDeclaredInBranch",
        "   Field": "vars",
        "   Lines": [
            [
                2460,
                2460,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-81",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-82",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-83",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-84",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-85",
        "   Class": "com.google.javascript.jscomp.UnreachableCodeElimination",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.UnreachableCodeElimination.removeDeadExprStatementSafely(Node) where default case is missing",
        "  Method": "removeDeadExprStatementSafely",
        "   Field": "",
        "   Lines": [
            [
                201,
                219,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-86",
        "   Class": "com.google.javascript.jscomp.NodeUtil",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Possible null pointer dereference of ? in com.google.javascript.jscomp.NodeUtil.getAddingRoot(Node)",
        "  Method": "getAddingRoot",
        "   Field": "",
        "   Lines": [
            [
                1797,
                1797,
                "SOURCE_LINE_DEREF"
            ],
            [
                1783,
                1783,
                "SOURCE_LINE_NULL_VALUE"
            ],
            [
                1785,
                1785,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "Closure-86",
        "   Class": "com.google.javascript.jscomp.NodeUtil",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field vars in com.google.javascript.jscomp.NodeUtil.getVarsDeclaredInBranch(Node)",
        "  Method": "getVarsDeclaredInBranch",
        "   Field": "vars",
        "   Lines": [
            [
                2018,
                2018,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-87",
        "   Class": "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.makeForwardSlashBracketSafe(Node) where default case is missing",
        "  Method": "makeForwardSlashBracketSafe",
        "   Field": "",
        "   Lines": [
            [
                1061,
                1068,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-88",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-89",
        "   Class": "com.google.javascript.jscomp.CollapseProperties",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to $L8 in com.google.javascript.jscomp.CollapseProperties.updateSimpleDeclaration(String, GlobalNamespace$Name, GlobalNamespace$Ref)",
        "  Method": "updateSimpleDeclaration",
        "   Field": "",
        "   Lines": [
            [
                482,
                482,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-89",
        "   Class": "com.google.javascript.jscomp.CollapseProperties",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field scope in com.google.javascript.jscomp.CollapseProperties.inlineAliasIfPossible(GlobalNamespace$Ref, GlobalNamespace)",
        "  Method": "inlineAliasIfPossible",
        "   Field": "scope",
        "   Lines": [
            [
                200,
                200,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-89",
        "   Class": "com.google.javascript.jscomp.CollapseProperties",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field scope in com.google.javascript.jscomp.CollapseProperties.inlineAliases(GlobalNamespace)",
        "  Method": "inlineAliases",
        "   Field": "scope",
        "   Lines": [
            [
                170,
                170,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-89",
        "   Class": "com.google.javascript.jscomp.CollapseProperties",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.CollapseProperties.updateObjLitOrFunctionDeclaration(GlobalNamespace$Name, String) where default case is missing",
        "  Method": "updateObjLitOrFunctionDeclaration",
        "   Field": "",
        "   Lines": [
            [
                556,
                564,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-9",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-90",
        "   Class": "com.google.javascript.jscomp.FunctionTypeBuilder",
        "     Cat": "STYLE",
        "  Abbrev": "BC",
        "    Type": "BC_VACUOUS_INSTANCEOF",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "instanceof will always return true for all non-null values in com.google.javascript.jscomp.FunctionTypeBuilder.inferInheritance(JSDocInfo), since all com.google.javascript.rhino.jstype.FunctionType are instances of com.google.javascript.rhino.jstype.FunctionType",
        "  Method": "inferInheritance",
        "   Field": "",
        "   Lines": [
            [
                374,
                374,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-91",
        "   Class": "com.google.javascript.jscomp.CheckGlobalThis",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to $L5 in com.google.javascript.jscomp.CheckGlobalThis.shouldTraverse(NodeTraversal, Node, Node)",
        "  Method": "shouldTraverse",
        "   Field": "",
        "   Lines": [
            [
                128,
                128,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-92",
        "   Class": "com.google.javascript.jscomp.ProcessClosurePrimitives",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.ProcessClosurePrimitives.visit(NodeTraversal, Node, Node) where default case is missing",
        "  Method": "visit",
        "   Field": "",
        "   Lines": [
            [
                146,
                225,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-93",
        "   Class": "com.google.javascript.jscomp.ProcessClosurePrimitives",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.ProcessClosurePrimitives.visit(NodeTraversal, Node, Node) where default case is missing",
        "  Method": "visit",
        "   Field": "",
        "   Lines": [
            [
                146,
                225,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-94",
        "   Class": "com.google.javascript.jscomp.NodeUtil",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Possible null pointer dereference of ? in com.google.javascript.jscomp.NodeUtil.getAddingRoot(Node)",
        "  Method": "getAddingRoot",
        "   Field": "",
        "   Lines": [
            [
                1672,
                1672,
                "SOURCE_LINE_DEREF"
            ],
            [
                1658,
                1658,
                "SOURCE_LINE_NULL_VALUE"
            ],
            [
                1660,
                1660,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "Closure-94",
        "   Class": "com.google.javascript.jscomp.NodeUtil",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field vars in com.google.javascript.jscomp.NodeUtil.getVarsDeclaredInBranch(Node)",
        "  Method": "getVarsDeclaredInBranch",
        "   Field": "vars",
        "   Lines": [
            [
                1874,
                1874,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-95",
        "   Class": "com.google.javascript.jscomp.TypedScopeCreator",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypedScopeCreator.attachLiteralTypes(Node) where default case is missing",
        "  Method": "attachLiteralTypes",
        "   Field": "",
        "   Lines": [
            [
                312,
                344,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-96",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to $L4 in com.google.javascript.jscomp.TypeCheck.shouldTraverse(NodeTraversal, Node, Node)",
        "  Method": "shouldTraverse",
        "   Field": "",
        "   Lines": [
            [
                413,
                413,
                null
            ],
            [
                415,
                415,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Closure-96",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to $L3 in com.google.javascript.jscomp.TypeCheck.visitFunction(NodeTraversal, Node)",
        "  Method": "visitFunction",
        "   Field": "",
        "   Lines": [
            [
                1319,
                1319,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-96",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeCheck.checkNoTypeCheckSection(Node, boolean) where default case is missing",
        "  Method": "checkNoTypeCheckSection",
        "   Field": "",
        "   Lines": [
            [
                381,
                395,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-96",
        "   Class": "com.google.javascript.jscomp.TypeCheck",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.TypeCheck.shouldTraverse(NodeTraversal, Node, Node) where default case is missing",
        "  Method": "shouldTraverse",
        "   Field": "",
        "   Lines": [
            [
                410,
                424,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-97",
        "   Class": "com.google.javascript.jscomp.PeepholeFoldConstants",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in com.google.javascript.jscomp.PeepholeFoldConstants.tryFoldTypeof(Node) where default case is missing",
        "  Method": "tryFoldTypeof",
        "   Field": "",
        "   Lines": [
            [
                166,
                189,
                null
            ]
        ]
    },
    {
        "    Proj": "Closure-98",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Closure-99",
        "   Class": "com.google.javascript.jscomp.CheckGlobalThis",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to $L5 in com.google.javascript.jscomp.CheckGlobalThis.shouldTraverse(NodeTraversal, Node, Node)",
        "  Method": "shouldTraverse",
        "   Field": "",
        "   Lines": [
            [
                114,
                114,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-1",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "RpC",
        "    Type": "RpC_REPEATED_CONDITIONAL_TEST",
        "Priority": "1",
        "    Rank": "6",
        "     Msg": "Repeated conditional test in org.apache.commons.lang3.math.NumberUtils.createBigInteger(String)",
        "  Method": "createBigInteger",
        "   Field": "",
        "   Lines": [
            [
                734,
                734,
                null
            ],
            [
                734,
                734,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-1",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_FALLTHROUGH",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Switch statement found in org.apache.commons.lang3.math.NumberUtils.createNumber(String) where one case falls through to the next case",
        "  Method": "createNumber",
        "   Field": "",
        "   Lines": [
            [
                552,
                559,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-1",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang3.math.NumberUtils.createNumber(String) where default case is missing",
        "  Method": "createNumber",
        "   Field": "",
        "   Lines": [
            [
                527,
                568,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-10",
        "   Class": "org.apache.commons.lang3.time.FastDateParser",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang3.time.FastDateParser.escapeRegex(StringBuilder, String, boolean) where default case is missing",
        "  Method": "escapeRegex",
        "   Field": "",
        "   Lines": [
            [
                306,
                329,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-10",
        "   Class": "org.apache.commons.lang3.time.FastDateParser",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang3.time.FastDateParser.getStrategy(String) where default case is missing",
        "  Method": "getStrategy",
        "   Field": "",
        "   Lines": [
            [
                535,
                578,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-11",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-12",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-13",
        "   Class": "org.apache.commons.lang3.SerializationUtils",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "DE",
        "    Type": "DE_MIGHT_IGNORE",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "org.apache.commons.lang3.SerializationUtils.deserialize(InputStream) might ignore java.io.IOException",
        "  Method": "deserialize",
        "   Field": "",
        "   Lines": [
            [
                203,
                203,
                null
            ],
            [
                203,
                203,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-14",
        "   Class": "org.apache.commons.lang3.StringUtils",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_DEFAULT_ENCODING",
        "Priority": "1",
        "    Rank": "19",
        "     Msg": "Found reliance on default encoding in org.apache.commons.lang3.StringUtils.toString(byte[], String): new String(byte[])",
        "  Method": "toString",
        "   Field": "",
        "   Lines": [
            [
                6588,
                6588,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-15",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-16",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_FALLTHROUGH",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Switch statement found in org.apache.commons.lang3.math.NumberUtils.createNumber(String) where one case falls through to the next case",
        "  Method": "createNumber",
        "   Field": "",
        "   Lines": [
            [
                524,
                531,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-16",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang3.math.NumberUtils.createNumber(String) where default case is missing",
        "  Method": "createNumber",
        "   Field": "",
        "   Lines": [
            [
                499,
                540,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-17",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-18",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-19",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-2",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-20",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-21",
        "   Class": "org.apache.commons.lang3.time.DateUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_FALLTHROUGH",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Switch statement found in org.apache.commons.lang3.time.DateUtils.getFragment(Calendar, int, int) where one case falls through to the next case",
        "  Method": "getFragment",
        "   Field": "",
        "   Lines": [
            [
                1695,
                1698,
                null
            ],
            [
                1698,
                1701,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1701,
                1704,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Lang-21",
        "   Class": "org.apache.commons.lang3.time.DateUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang3.time.DateUtils.getFragment(Calendar, int, int) where default case is missing",
        "  Method": "getFragment",
        "   Field": "",
        "   Lines": [
            [
                1678,
                1683,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-21",
        "   Class": "org.apache.commons.lang3.time.DateUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang3.time.DateUtils.iterator(Calendar, int) where default case is missing",
        "  Method": "iterator",
        "   Field": "",
        "   Lines": [
            [
                1167,
                1181,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-21",
        "   Class": "org.apache.commons.lang3.time.DateUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang3.time.DateUtils.modify(Calendar, int, int) where default case is missing",
        "  Method": "modify",
        "   Field": "",
        "   Lines": [
            [
                1032,
                1058,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-22",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-23",
        "   Class": "org.apache.commons.lang3.text.ExtendedMessageFormat",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(String, ParsePosition) where default case is missing",
        "  Method": "parseFormatDescription",
        "   Field": "",
        "   Lines": [
            [
                379,
                390,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-23",
        "   Class": "org.apache.commons.lang3.text.ExtendedMessageFormat",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "UR",
        "    Type": "UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR",
        "Priority": "2",
        "    Rank": "10",
        "     Msg": "registry isn't initialized in org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(String) when invoked from constructor for superclass",
        "  Method": "applyPattern",
        "   Field": "registry",
        "   Lines": [
            [
                128,
                128,
                "SOURCE_LINE_FIELD_SET_TOO_LATE_AT"
            ],
            [
                147,
                147,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-24",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang3.math.NumberUtils.<static initializer for NumberUtils>() invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "<clinit>",
        "   Field": "",
        "   Lines": [
            [
                47,
                47,
                null
            ],
            [
                49,
                49,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                51,
                51,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Lang-24",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang3.math.NumberUtils.<static initializer for NumberUtils>() invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead",
        "  Method": "<clinit>",
        "   Field": "",
        "   Lines": [
            [
                41,
                41,
                null
            ],
            [
                43,
                43,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                45,
                45,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Lang-24",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang3.math.NumberUtils.<static initializer for NumberUtils>() invokes inefficient new Short(short) constructor; use Short.valueOf(short) instead",
        "  Method": "<clinit>",
        "   Field": "",
        "   Lines": [
            [
                53,
                53,
                null
            ],
            [
                55,
                55,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                57,
                57,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Lang-24",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_FALLTHROUGH",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Switch statement found in org.apache.commons.lang3.math.NumberUtils.createNumber(String) where one case falls through to the next case",
        "  Method": "createNumber",
        "   Field": "",
        "   Lines": [
            [
                532,
                539,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-24",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang3.math.NumberUtils.createNumber(String) where default case is missing",
        "  Method": "createNumber",
        "   Field": "",
        "   Lines": [
            [
                507,
                548,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-25",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-26",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-27",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang3.math.NumberUtils.<static initializer for NumberUtils>() invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "<clinit>",
        "   Field": "",
        "   Lines": [
            [
                47,
                47,
                null
            ],
            [
                49,
                49,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                51,
                51,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Lang-27",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang3.math.NumberUtils.<static initializer for NumberUtils>() invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead",
        "  Method": "<clinit>",
        "   Field": "",
        "   Lines": [
            [
                41,
                41,
                null
            ],
            [
                43,
                43,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                45,
                45,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Lang-27",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang3.math.NumberUtils.<static initializer for NumberUtils>() invokes inefficient new Short(short) constructor; use Short.valueOf(short) instead",
        "  Method": "<clinit>",
        "   Field": "",
        "   Lines": [
            [
                53,
                53,
                null
            ],
            [
                55,
                55,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                57,
                57,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Lang-27",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_FALLTHROUGH",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Switch statement found in org.apache.commons.lang3.math.NumberUtils.createNumber(String) where one case falls through to the next case",
        "  Method": "createNumber",
        "   Field": "",
        "   Lines": [
            [
                532,
                539,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-27",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang3.math.NumberUtils.createNumber(String) where default case is missing",
        "  Method": "createNumber",
        "   Field": "",
        "   Lines": [
            [
                507,
                548,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-28",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-29",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-3",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "RpC",
        "    Type": "RpC_REPEATED_CONDITIONAL_TEST",
        "Priority": "1",
        "    Rank": "6",
        "     Msg": "Repeated conditional test in org.apache.commons.lang3.math.NumberUtils.createBigInteger(String)",
        "  Method": "createBigInteger",
        "   Field": "",
        "   Lines": [
            [
                725,
                725,
                null
            ],
            [
                725,
                725,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-3",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_FALLTHROUGH",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Switch statement found in org.apache.commons.lang3.math.NumberUtils.createNumber(String) where one case falls through to the next case",
        "  Method": "createNumber",
        "   Field": "",
        "   Lines": [
            [
                543,
                550,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-3",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang3.math.NumberUtils.createNumber(String) where default case is missing",
        "  Method": "createNumber",
        "   Field": "",
        "   Lines": [
            [
                518,
                559,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-30",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-31",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-32",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-33",
        "   Class": "org.apache.commons.lang3.ClassUtils",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "WMI",
        "    Type": "WMI_WRONG_MAP_ITERATOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang3.ClassUtils.<static initializer for ClassUtils>() makes inefficient use of keySet iterator instead of entrySet iterator",
        "  Method": "<clinit>",
        "   Field": "primitiveWrapperMap",
        "   Lines": [
            [
                92,
                92,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-34",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-35",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-36",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang3.math.NumberUtils.<static initializer for NumberUtils>() invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "<clinit>",
        "   Field": "",
        "   Lines": [
            [
                47,
                47,
                null
            ],
            [
                49,
                49,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                51,
                51,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Lang-36",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang3.math.NumberUtils.<static initializer for NumberUtils>() invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead",
        "  Method": "<clinit>",
        "   Field": "",
        "   Lines": [
            [
                41,
                41,
                null
            ],
            [
                43,
                43,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                45,
                45,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Lang-36",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang3.math.NumberUtils.<static initializer for NumberUtils>() invokes inefficient new Short(short) constructor; use Short.valueOf(short) instead",
        "  Method": "<clinit>",
        "   Field": "",
        "   Lines": [
            [
                53,
                53,
                null
            ],
            [
                55,
                55,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                57,
                57,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Lang-36",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_FALLTHROUGH",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Switch statement found in org.apache.commons.lang3.math.NumberUtils.createNumber(String) where one case falls through to the next case",
        "  Method": "createNumber",
        "   Field": "",
        "   Lines": [
            [
                525,
                532,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-36",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang3.math.NumberUtils.createNumber(String) where default case is missing",
        "  Method": "createNumber",
        "   Field": "",
        "   Lines": [
            [
                500,
                541,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-37",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-38",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-39",
        "   Class": "org.apache.commons.lang3.StringUtils",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "ES",
        "    Type": "ES_COMPARING_PARAMETER_STRING_WITH_EQ",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "Comparison of String parameter using == or != in org.apache.commons.lang3.StringUtils.indexOfDifference(String, String) ",
        "  Method": "indexOfDifference",
        "   Field": "",
        "   Lines": [
            [
                5364,
                5364,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-4",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-40",
        "   Class": "org.apache.commons.lang.StringUtils",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "ES",
        "    Type": "ES_COMPARING_PARAMETER_STRING_WITH_EQ",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "Comparison of String parameter using == or != in org.apache.commons.lang.StringUtils.indexOfDifference(String, String) ",
        "  Method": "indexOfDifference",
        "   Field": "",
        "   Lines": [
            [
                5298,
                5298,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-41",
        "   Class": "org.apache.commons.lang.ClassUtils",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "WMI",
        "    Type": "WMI_WRONG_MAP_ITERATOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang.ClassUtils.<static initializer for ClassUtils>() makes inefficient use of keySet iterator instead of entrySet iterator",
        "  Method": "<clinit>",
        "   Field": "primitiveWrapperMap",
        "   Lines": [
            [
                92,
                92,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-42",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-43",
        "   Class": "org.apache.commons.lang.text.ExtendedMessageFormat",
        "     Cat": "STYLE",
        "  Abbrev": "Eq",
        "    Type": "EQ_DOESNT_OVERRIDE_EQUALS",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "org.apache.commons.lang.text.ExtendedMessageFormat doesn't override java.text.MessageFormat.equals(Object)",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                1,
                1,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-43",
        "   Class": "org.apache.commons.lang.text.ExtendedMessageFormat",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang.text.ExtendedMessageFormat.parseFormatDescription(String, ParsePosition) where default case is missing",
        "  Method": "parseFormatDescription",
        "   Field": "",
        "   Lines": [
            [
                318,
                329,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-43",
        "   Class": "org.apache.commons.lang.text.ExtendedMessageFormat",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "UR",
        "    Type": "UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR",
        "Priority": "2",
        "    Rank": "10",
        "     Msg": "registry isn't initialized in org.apache.commons.lang.text.ExtendedMessageFormat.applyPattern(String) when invoked from constructor for superclass",
        "  Method": "applyPattern",
        "   Field": "registry",
        "   Lines": [
            [
                126,
                126,
                "SOURCE_LINE_FIELD_SET_TOO_LATE_AT"
            ],
            [
                143,
                143,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-44",
        "   Class": "org.apache.commons.lang.NumberUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_FALLTHROUGH",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Switch statement found in org.apache.commons.lang.NumberUtils.createNumber(String) where one case falls through to the next case",
        "  Method": "createNumber",
        "   Field": "",
        "   Lines": [
            [
                218,
                225,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-44",
        "   Class": "org.apache.commons.lang.NumberUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang.NumberUtils.createNumber(String) where default case is missing",
        "  Method": "createNumber",
        "   Field": "",
        "   Lines": [
            [
                193,
                234,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-45",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-46",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-47",
        "   Class": "org.apache.commons.lang.text.StrBuilder",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "CN",
        "    Type": "CN_IDIOM",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Class org.apache.commons.lang.text.StrBuilder implements Cloneable but does not define or use clone method",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                98,
                2557,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-48",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-49",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-5",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-50",
        "   Class": "org.apache.commons.lang.time.FastDateFormat",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang.time.FastDateFormat.getDateInstance(int, TimeZone, Locale) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getDateInstance",
        "   Field": "",
        "   Lines": [
            [
                280,
                280,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-50",
        "   Class": "org.apache.commons.lang.time.FastDateFormat",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang.time.FastDateFormat.getDateTimeInstance(int, int, TimeZone, Locale) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getDateTimeInstance",
        "   Field": "",
        "   Lines": [
            [
                459,
                459,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-50",
        "   Class": "org.apache.commons.lang.time.FastDateFormat",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang.time.FastDateFormat.getTimeInstance(int, TimeZone, Locale) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getTimeInstance",
        "   Field": "",
        "   Lines": [
            [
                365,
                365,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-51",
        "   Class": "org.apache.commons.lang.BooleanUtils",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "ES",
        "    Type": "ES_COMPARING_PARAMETER_STRING_WITH_EQ",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "Comparison of String parameter using == or != in org.apache.commons.lang.BooleanUtils.toBoolean(String) ",
        "  Method": "toBoolean",
        "   Field": "",
        "   Lines": [
            [
                656,
                656,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-51",
        "   Class": "org.apache.commons.lang.BooleanUtils",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "NP",
        "    Type": "NP_BOOLEAN_RETURN_NULL",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "org.apache.commons.lang.BooleanUtils.negate(Boolean) has Boolean return type and returns explicit null",
        "  Method": "negate",
        "   Field": "",
        "   Lines": [
            [
                65,
                65,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-51",
        "   Class": "org.apache.commons.lang.BooleanUtils",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "NP",
        "    Type": "NP_BOOLEAN_RETURN_NULL",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "org.apache.commons.lang.BooleanUtils.toBooleanObject(int, int, int, int) has Boolean return type and returns explicit null",
        "  Method": "toBooleanObject",
        "   Field": "",
        "   Lines": [
            [
                353,
                353,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-51",
        "   Class": "org.apache.commons.lang.BooleanUtils",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "NP",
        "    Type": "NP_BOOLEAN_RETURN_NULL",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "org.apache.commons.lang.BooleanUtils.toBooleanObject(Integer) has Boolean return type and returns explicit null",
        "  Method": "toBooleanObject",
        "   Field": "",
        "   Lines": [
            [
                265,
                265,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-51",
        "   Class": "org.apache.commons.lang.BooleanUtils",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "NP",
        "    Type": "NP_BOOLEAN_RETURN_NULL",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "org.apache.commons.lang.BooleanUtils.toBooleanObject(Integer, Integer, Integer, Integer) has Boolean return type and returns explicit null",
        "  Method": "toBooleanObject",
        "   Field": "",
        "   Lines": [
            [
                385,
                385,
                null
            ],
            [
                392,
                392,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Lang-51",
        "   Class": "org.apache.commons.lang.BooleanUtils",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "NP",
        "    Type": "NP_BOOLEAN_RETURN_NULL",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "org.apache.commons.lang.BooleanUtils.toBooleanObject(String) has Boolean return type and returns explicit null",
        "  Method": "toBooleanObject",
        "   Field": "",
        "   Lines": [
            [
                577,
                577,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-51",
        "   Class": "org.apache.commons.lang.BooleanUtils",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "NP",
        "    Type": "NP_BOOLEAN_RETURN_NULL",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "org.apache.commons.lang.BooleanUtils.toBooleanObject(String, String, String, String) has Boolean return type and returns explicit null",
        "  Method": "toBooleanObject",
        "   Field": "",
        "   Lines": [
            [
                609,
                609,
                null
            ],
            [
                616,
                616,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Lang-52",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-53",
        "   Class": "org.apache.commons.lang.time.DateUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang.time.DateUtils.iterator(Calendar, int) where default case is missing",
        "  Method": "iterator",
        "   Field": "",
        "   Lines": [
            [
                834,
                848,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-53",
        "   Class": "org.apache.commons.lang.time.DateUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang.time.DateUtils.modify(Calendar, int, boolean) where default case is missing",
        "  Method": "modify",
        "   Field": "",
        "   Lines": [
            [
                699,
                725,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-54",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-55",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-56",
        "   Class": "org.apache.commons.lang.time.FastDateFormat",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang.time.FastDateFormat.getDateInstance(int, TimeZone, Locale) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getDateInstance",
        "   Field": "",
        "   Lines": [
            [
                281,
                281,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-56",
        "   Class": "org.apache.commons.lang.time.FastDateFormat",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang.time.FastDateFormat.getDateTimeInstance(int, int, TimeZone, Locale) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getDateTimeInstance",
        "   Field": "",
        "   Lines": [
            [
                461,
                461,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-56",
        "   Class": "org.apache.commons.lang.time.FastDateFormat",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang.time.FastDateFormat.getTimeInstance(int, TimeZone, Locale) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "getTimeInstance",
        "   Field": "",
        "   Lines": [
            [
                367,
                367,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-57",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-58",
        "   Class": "org.apache.commons.lang.math.NumberUtils",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang.math.NumberUtils.<static initializer for NumberUtils>() invokes inefficient new Byte(byte) constructor; use Byte.valueOf(byte) instead",
        "  Method": "<clinit>",
        "   Field": "",
        "   Lines": [
            [
                59,
                59,
                null
            ],
            [
                61,
                61,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                63,
                63,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Lang-58",
        "   Class": "org.apache.commons.lang.math.NumberUtils",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang.math.NumberUtils.<static initializer for NumberUtils>() invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "<clinit>",
        "   Field": "",
        "   Lines": [
            [
                47,
                47,
                null
            ],
            [
                49,
                49,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                51,
                51,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Lang-58",
        "   Class": "org.apache.commons.lang.math.NumberUtils",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang.math.NumberUtils.<static initializer for NumberUtils>() invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead",
        "  Method": "<clinit>",
        "   Field": "",
        "   Lines": [
            [
                41,
                41,
                null
            ],
            [
                43,
                43,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                45,
                45,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Lang-58",
        "   Class": "org.apache.commons.lang.math.NumberUtils",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.lang.math.NumberUtils.<static initializer for NumberUtils>() invokes inefficient new Short(short) constructor; use Short.valueOf(short) instead",
        "  Method": "<clinit>",
        "   Field": "",
        "   Lines": [
            [
                53,
                53,
                null
            ],
            [
                55,
                55,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                57,
                57,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Lang-58",
        "   Class": "org.apache.commons.lang.math.NumberUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_FALLTHROUGH",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Switch statement found in org.apache.commons.lang.math.NumberUtils.createNumber(String) where one case falls through to the next case",
        "  Method": "createNumber",
        "   Field": "",
        "   Lines": [
            [
                474,
                481,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-58",
        "   Class": "org.apache.commons.lang.math.NumberUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang.math.NumberUtils.createNumber(String) where default case is missing",
        "  Method": "createNumber",
        "   Field": "",
        "   Lines": [
            [
                449,
                490,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-59",
        "   Class": "org.apache.commons.lang.text.StrBuilder",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "CN",
        "    Type": "CN_IDIOM",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Class org.apache.commons.lang.text.StrBuilder implements Cloneable but does not define or use clone method",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                98,
                2203,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-6",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-60",
        "   Class": "org.apache.commons.lang.text.StrBuilder",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "CN",
        "    Type": "CN_IDIOM",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Class org.apache.commons.lang.text.StrBuilder implements Cloneable but does not define or use clone method",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                98,
                2203,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-61",
        "   Class": "org.apache.commons.lang.text.StrBuilder",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "CN",
        "    Type": "CN_IDIOM",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Class org.apache.commons.lang.text.StrBuilder implements Cloneable but does not define or use clone method",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                98,
                2203,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-62",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-63",
        "   Class": "org.apache.commons.lang.time.DurationFormatUtils",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "ES",
        "    Type": "ES_COMPARING_STRINGS_WITH_EQ",
        "Priority": "2",
        "    Rank": "11",
        "     Msg": "Comparison of String objects using == or != in org.apache.commons.lang.time.DurationFormatUtils.format(DurationFormatUtils$Token[], int, int, int, int, int, int, int, boolean) ",
        "  Method": "format",
        "   Field": "H",
        "   Lines": [
            [
                397,
                397,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-63",
        "   Class": "org.apache.commons.lang.time.DurationFormatUtils",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "ES",
        "    Type": "ES_COMPARING_STRINGS_WITH_EQ",
        "Priority": "2",
        "    Rank": "11",
        "     Msg": "Comparison of String objects using == or != in org.apache.commons.lang.time.DurationFormatUtils.format(DurationFormatUtils$Token[], int, int, int, int, int, int, int, boolean) ",
        "  Method": "format",
        "   Field": "M",
        "   Lines": [
            [
                389,
                389,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-63",
        "   Class": "org.apache.commons.lang.time.DurationFormatUtils",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "ES",
        "    Type": "ES_COMPARING_STRINGS_WITH_EQ",
        "Priority": "2",
        "    Rank": "11",
        "     Msg": "Comparison of String objects using == or != in org.apache.commons.lang.time.DurationFormatUtils.format(DurationFormatUtils$Token[], int, int, int, int, int, int, int, boolean) ",
        "  Method": "format",
        "   Field": "S",
        "   Lines": [
            [
                409,
                409,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-63",
        "   Class": "org.apache.commons.lang.time.DurationFormatUtils",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "ES",
        "    Type": "ES_COMPARING_STRINGS_WITH_EQ",
        "Priority": "2",
        "    Rank": "11",
        "     Msg": "Comparison of String objects using == or != in org.apache.commons.lang.time.DurationFormatUtils.format(DurationFormatUtils$Token[], int, int, int, int, int, int, int, boolean) ",
        "  Method": "format",
        "   Field": "d",
        "   Lines": [
            [
                393,
                393,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-63",
        "   Class": "org.apache.commons.lang.time.DurationFormatUtils",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "ES",
        "    Type": "ES_COMPARING_STRINGS_WITH_EQ",
        "Priority": "2",
        "    Rank": "11",
        "     Msg": "Comparison of String objects using == or != in org.apache.commons.lang.time.DurationFormatUtils.format(DurationFormatUtils$Token[], int, int, int, int, int, int, int, boolean) ",
        "  Method": "format",
        "   Field": "m",
        "   Lines": [
            [
                401,
                401,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-63",
        "   Class": "org.apache.commons.lang.time.DurationFormatUtils",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "ES",
        "    Type": "ES_COMPARING_STRINGS_WITH_EQ",
        "Priority": "2",
        "    Rank": "11",
        "     Msg": "Comparison of String objects using == or != in org.apache.commons.lang.time.DurationFormatUtils.format(DurationFormatUtils$Token[], int, int, int, int, int, int, int, boolean) ",
        "  Method": "format",
        "   Field": "s",
        "   Lines": [
            [
                405,
                405,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-63",
        "   Class": "org.apache.commons.lang.time.DurationFormatUtils",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "ES",
        "    Type": "ES_COMPARING_STRINGS_WITH_EQ",
        "Priority": "2",
        "    Rank": "11",
        "     Msg": "Comparison of String objects using == or != in org.apache.commons.lang.time.DurationFormatUtils.format(DurationFormatUtils$Token[], int, int, int, int, int, int, int, boolean) ",
        "  Method": "format",
        "   Field": "y",
        "   Lines": [
            [
                385,
                385,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-63",
        "   Class": "org.apache.commons.lang.time.DurationFormatUtils",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "ES",
        "    Type": "ES_COMPARING_STRINGS_WITH_EQ",
        "Priority": "2",
        "    Rank": "11",
        "     Msg": "Comparison of String objects using == or != in org.apache.commons.lang.time.DurationFormatUtils.lexx(String) ",
        "  Method": "lexx",
        "   Field": "",
        "   Lines": [
            [
                485,
                485,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-64",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-65",
        "   Class": "org.apache.commons.lang.time.DateUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang.time.DateUtils.iterator(Calendar, int) where default case is missing",
        "  Method": "iterator",
        "   Field": "",
        "   Lines": [
            [
                833,
                847,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-65",
        "   Class": "org.apache.commons.lang.time.DateUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang.time.DateUtils.modify(Calendar, int, boolean) where default case is missing",
        "  Method": "modify",
        "   Field": "",
        "   Lines": [
            [
                698,
                724,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-7",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_FALLTHROUGH",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Switch statement found in org.apache.commons.lang3.math.NumberUtils.createNumber(String) where one case falls through to the next case",
        "  Method": "createNumber",
        "   Field": "",
        "   Lines": [
            [
                525,
                532,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-7",
        "   Class": "org.apache.commons.lang3.math.NumberUtils",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang3.math.NumberUtils.createNumber(String) where default case is missing",
        "  Method": "createNumber",
        "   Field": "",
        "   Lines": [
            [
                500,
                541,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-8",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Lang-9",
        "   Class": "org.apache.commons.lang3.time.FastDateParser",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang3.time.FastDateParser.escapeRegex(StringBuilder, String, boolean) where default case is missing",
        "  Method": "escapeRegex",
        "   Field": "",
        "   Lines": [
            [
                309,
                332,
                null
            ]
        ]
    },
    {
        "    Proj": "Lang-9",
        "   Class": "org.apache.commons.lang3.time.FastDateParser",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.commons.lang3.time.FastDateParser.getStrategy(String) where default case is missing",
        "  Method": "getStrategy",
        "   Field": "",
        "   Lines": [
            [
                538,
                581,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-1",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-10",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-100",
        "   Class": "org.apache.commons.math.estimation.AbstractEstimator",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.estimation.AbstractEstimator.guessParametersErrors(EstimationProblem) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "guessParametersErrors",
        "   Field": "",
        "   Lines": [
            [
                204,
                204,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-100",
        "   Class": "org.apache.commons.math.estimation.AbstractEstimator",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_NUMBER_CTOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost() invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
        "  Method": "updateResidualsAndCost",
        "   Field": "",
        "   Lines": [
            [
                100,
                100,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-101",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-102",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-103",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-104",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-105",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-106",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-11",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-12",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-13",
        "   Class": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
        "     Cat": "STYLE",
        "  Abbrev": "UrF",
        "    Type": "URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "Unread public/protected field: org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.weightedResidualJacobian",
        "  Method": "",
        "   Field": "weightedResidualJacobian",
        "   Lines": [
            [
                155,
                155,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-13",
        "   Class": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
        "     Cat": "STYLE",
        "  Abbrev": "UrF",
        "    Type": "URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "Unread public/protected field: org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.weightedResiduals",
        "  Method": "",
        "   Field": "weightedResiduals",
        "   Lines": [
            [
                213,
                213,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-14",
        "   Class": "org.apache.commons.math3.optim.nonlinear.vector.Weight",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to $L2 in new org.apache.commons.math3.optim.nonlinear.vector.Weight(double[])",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                42,
                42,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-15",
        "   Class": "org.apache.commons.math3.util.FastMath",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to $L25 in org.apache.commons.math3.util.FastMath.atan(double, double, boolean)",
        "  Method": "atan",
        "   Field": "",
        "   Lines": [
            [
                2561,
                2561,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-16",
        "   Class": "org.apache.commons.math3.util.FastMath",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to $L25 in org.apache.commons.math3.util.FastMath.atan(double, double, boolean)",
        "  Method": "atan",
        "   Field": "",
        "   Lines": [
            [
                2559,
                2559,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-17",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-18",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-19",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-2",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-20",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-21",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-22",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-23",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-24",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-25",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-26",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-27",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-28",
        "   Class": "org.apache.commons.math3.optimization.linear.SimplexSolver",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "RC",
        "    Type": "RC_REF_COMPARISON",
        "Priority": "1",
        "    Rank": "1",
        "     Msg": "Suspicious comparison of Integer references in org.apache.commons.math3.optimization.linear.SimplexSolver.getPivotRow(SimplexTableau, int)",
        "  Method": "getPivotRow",
        "   Field": "",
        "   Lines": [
            [
                145,
                145,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-28",
        "   Class": "org.apache.commons.math3.optimization.linear.SimplexSolver",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "RC",
        "    Type": "RC_REF_COMPARISON",
        "Priority": "1",
        "    Rank": "1",
        "     Msg": "Suspicious comparison of Integer references in org.apache.commons.math3.optimization.linear.SimplexSolver.getPivotRow(SimplexTableau, int)",
        "  Method": "getPivotRow",
        "   Field": "",
        "   Lines": [
            [
                146,
                146,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-29",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-3",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-30",
        "   Class": "org.apache.commons.math3.stat.inference.MannWhitneyUTest",
        "     Cat": "STYLE",
        "  Abbrev": "ICAST",
        "    Type": "ICAST_IDIV_CAST_TO_DOUBLE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Integral division result cast to double or float in org.apache.commons.math3.stat.inference.MannWhitneyUTest.mannWhitneyU(double[], double[])",
        "  Method": "mannWhitneyU",
        "   Field": "",
        "   Lines": [
            [
                148,
                148,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-31",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-32",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-33",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-34",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-35",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-36",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-37",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-38",
        "   Class": "org.apache.commons.math.optimization.direct.BOBYQAOptimizer",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in org.apache.commons.math.optimization.direct.BOBYQAOptimizer.altmov(int, double)",
        "  Method": "altmov",
        "   Field": "",
        "   Lines": [
            [
                1460,
                1460,
                null
            ],
            [
                1487,
                1487,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Math-38",
        "   Class": "org.apache.commons.math.optimization.direct.BOBYQAOptimizer",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_FALLTHROUGH",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Switch statement found in org.apache.commons.math.optimization.direct.BOBYQAOptimizer.bobyqb(double[], double[]) where one case falls through to the next case",
        "  Method": "bobyqb",
        "   Field": "",
        "   Lines": [
            [
                545,
                555,
                null
            ],
            [
                1115,
                1118,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Math-38",
        "   Class": "org.apache.commons.math.optimization.direct.BOBYQAOptimizer",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_FALLTHROUGH",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Switch statement found in org.apache.commons.math.optimization.direct.BOBYQAOptimizer.trsbox(double, ArrayRealVector, ArrayRealVector, ArrayRealVector, ArrayRealVector, ArrayRealVector) where one case falls through to the next case",
        "  Method": "trsbox",
        "   Field": "",
        "   Lines": [
            [
                1881,
                1884,
                null
            ],
            [
                2026,
                2034,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Math-39",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-4",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-40",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-41",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-42",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-43",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-44",
        "   Class": "org.apache.commons.math.ode.AbstractIntegrator",
        "     Cat": "STYLE",
        "  Abbrev": "UrF",
        "    Type": "URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "Unread public/protected field: org.apache.commons.math.ode.AbstractIntegrator.resetOccurred",
        "  Method": "",
        "   Field": "resetOccurred",
        "   Lines": [
            [
                344,
                344,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-45",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-46",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-47",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-48",
        "   Class": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in org.apache.commons.math.analysis.solvers.BaseSecantSolver.doSolve()",
        "  Method": "doSolve",
        "   Field": "",
        "   Lines": [
            [
                189,
                189,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-49",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-5",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-50",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-51",
        "   Class": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in org.apache.commons.math.analysis.solvers.BaseSecantSolver.doSolve()",
        "  Method": "doSolve",
        "   Field": "",
        "   Lines": [
            [
                186,
                186,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-52",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-53",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-54",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-55",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-56",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-57",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-58",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-59",
        "   Class": "org.apache.commons.math.util.FastMath",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "CNT",
        "    Type": "CNT_ROUGH_CONSTANT_VALUE",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "Rough value of Math.PI/2 found: 1.570796251296997",
        "  Method": "cos",
        "   Field": "",
        "   Lines": [
            [
                2537,
                2537,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-59",
        "   Class": "org.apache.commons.math.util.FastMath",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "CNT",
        "    Type": "CNT_ROUGH_CONSTANT_VALUE",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "Rough value of Math.PI/2 found: 1.570796251296997",
        "  Method": "sin",
        "   Field": "",
        "   Lines": [
            [
                2452,
                2452,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-59",
        "   Class": "org.apache.commons.math.util.FastMath",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "CNT",
        "    Type": "CNT_ROUGH_CONSTANT_VALUE",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "Rough value of Math.PI/2 found: 1.570796251296997",
        "  Method": "tan",
        "   Field": "",
        "   Lines": [
            [
                2632,
                2632,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-6",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-60",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-61",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-62",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-63",
        "   Class": "org.apache.commons.math.util.MathUtils",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in org.apache.commons.math.util.MathUtils.roundUnscaled(double, double, int)",
        "  Method": "roundUnscaled",
        "   Field": "",
        "   Lines": [
            [
                1319,
                1319,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-64",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-65",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-66",
        "   Class": "org.apache.commons.math.optimization.univariate.BrentOptimizer",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in org.apache.commons.math.optimization.univariate.BrentOptimizer.localMin(boolean, double, double, double, double, double)",
        "  Method": "localMin",
        "   Field": "",
        "   Lines": [
            [
                214,
                214,
                null
            ],
            [
                220,
                220,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                220,
                220,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Math-67",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-68",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-69",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-7",
        "   Class": "org.apache.commons.math3.ode.AbstractIntegrator",
        "     Cat": "STYLE",
        "  Abbrev": "UrF",
        "    Type": "URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "Unread public/protected field: org.apache.commons.math3.ode.AbstractIntegrator.resetOccurred",
        "  Method": "",
        "   Field": "resetOccurred",
        "   Lines": [
            [
                371,
                371,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-70",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-71",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-72",
        "   Class": "org.apache.commons.math.analysis.solvers.BrentSolver",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in org.apache.commons.math.analysis.solvers.BrentSolver.solve(UnivariateRealFunction, double, double, double, double, double, double)",
        "  Method": "solve",
        "   Field": "",
        "   Lines": [
            [
                269,
                269,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-73",
        "   Class": "org.apache.commons.math.analysis.solvers.BrentSolver",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in org.apache.commons.math.analysis.solvers.BrentSolver.solve(UnivariateRealFunction, double, double, double, double, double, double)",
        "  Method": "solve",
        "   Field": "",
        "   Lines": [
            [
                269,
                269,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-74",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-75",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-76",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-77",
        "   Class": "org.apache.commons.math.linear.ArrayRealVector",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.ArrayRealVector.getDataRef() may expose internal representation by returning ArrayRealVector.data",
        "  Method": "getDataRef",
        "   Field": "data",
        "   Lines": [
            [
                654,
                654,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-78",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-79",
        "   Class": "org.apache.commons.math.util.MathUtils",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in org.apache.commons.math.util.MathUtils.roundUnscaled(double, double, int)",
        "  Method": "roundUnscaled",
        "   Field": "",
        "   Lines": [
            [
                1177,
                1177,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-8",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-80",
        "   Class": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(int, int, int)",
        "  Method": "computeShiftIncrement",
        "   Field": "",
        "   Lines": [
            [
                1449,
                1449,
                null
            ],
            [
                1449,
                1449,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1455,
                1455,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1455,
                1455,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1479,
                1479,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1527,
                1527,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1587,
                1587,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1587,
                1587,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1623,
                1623,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1633,
                1633,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Math-81",
        "   Class": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(int, int, int)",
        "  Method": "computeShiftIncrement",
        "   Field": "",
        "   Lines": [
            [
                1449,
                1449,
                null
            ],
            [
                1449,
                1449,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1455,
                1455,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1455,
                1455,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1479,
                1479,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1527,
                1527,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1587,
                1587,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1587,
                1587,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1623,
                1623,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                1633,
                1633,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Math-82",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-83",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-84",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-85",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-86",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-87",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-88",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-89",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-9",
        "   Class": "org.apache.commons.math3.geometry.euclidean.threed.Line",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "CNT",
        "    Type": "CNT_ROUGH_CONSTANT_VALUE",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Rough value of Math.PI found: 3.141592653489793",
        "  Method": "isSimilarTo",
        "   Field": "",
        "   Lines": [
            [
                148,
                148,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-90",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-91",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-92",
        "   Class": "org.apache.commons.math.util.MathUtils",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in org.apache.commons.math.util.MathUtils.roundUnscaled(double, double, int)",
        "  Method": "roundUnscaled",
        "   Field": "",
        "   Lines": [
            [
                979,
                979,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-93",
        "   Class": "org.apache.commons.math.util.MathUtils",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in org.apache.commons.math.util.MathUtils.roundUnscaled(double, double, int)",
        "  Method": "roundUnscaled",
        "   Field": "",
        "   Lines": [
            [
                902,
                902,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-94",
        "   Class": "org.apache.commons.math.util.MathUtils",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in org.apache.commons.math.util.MathUtils.roundUnscaled(double, double, int)",
        "  Method": "roundUnscaled",
        "   Field": "",
        "   Lines": [
            [
                888,
                888,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-95",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-96",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Math-97",
        "   Class": "org.apache.commons.math.analysis.BrentSolver",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in org.apache.commons.math.analysis.BrentSolver.solve(double, double, double, double, double, double)",
        "  Method": "solve",
        "   Field": "",
        "   Lines": [
            [
                229,
                229,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-98",
        "   Class": "org.apache.commons.math.linear.BigMatrixImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.BigMatrixImpl.getDataRef() may expose internal representation by returning BigMatrixImpl.data",
        "  Method": "getDataRef",
        "   Field": "data",
        "   Lines": [
            [
                508,
                508,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-98",
        "   Class": "org.apache.commons.math.linear.BigMatrixImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.commons.math.linear.BigMatrixImpl(BigDecimal[][], boolean) may expose internal representation by storing an externally mutable object into BigMatrixImpl.data",
        "  Method": "<init>",
        "   Field": "data",
        "   Lines": [
            [
                158,
                158,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-98",
        "   Class": "org.apache.commons.math.linear.RealMatrixImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.RealMatrixImpl.getDataRef() may expose internal representation by returning RealMatrixImpl.data",
        "  Method": "getDataRef",
        "   Field": "data",
        "   Lines": [
            [
                417,
                417,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-98",
        "   Class": "org.apache.commons.math.linear.RealMatrixImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.commons.math.linear.RealMatrixImpl(double[][], boolean) may expose internal representation by storing an externally mutable object into RealMatrixImpl.data",
        "  Method": "<init>",
        "   Field": "data",
        "   Lines": [
            [
                150,
                150,
                null
            ]
        ]
    },
    {
        "    Proj": "Math-99",
        "   Class": "org.apache.commons.math.util.MathUtils",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Test for floating point equality in org.apache.commons.math.util.MathUtils.roundUnscaled(double, double, int)",
        "  Method": "roundUnscaled",
        "   Field": "",
        "   Lines": [
            [
                1046,
                1046,
                null
            ]
        ]
    },
    {
        "    Proj": "Mockito-1",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-10",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-11",
        "   Class": "org.mockito.internal.creation.DelegatingMethod",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "Eq",
        "    Type": "EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "org.mockito.internal.creation.DelegatingMethod.equals(Object) checks for operand being a reflect.Method ",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                62,
                62,
                null
            ]
        ]
    },
    {
        "    Proj": "Mockito-12",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-13",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-14",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-15",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-16",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-17",
        "   Class": "org.mockito.internal.creation.MockSettingsImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.mockito.internal.creation.MockSettingsImpl.getExtraInterfaces() may expose internal representation by returning MockSettingsImpl.extraInterfaces",
        "  Method": "getExtraInterfaces",
        "   Field": "extraInterfaces",
        "   Lines": [
            [
                48,
                48,
                null
            ]
        ]
    },
    {
        "    Proj": "Mockito-18",
        "   Class": "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "Se",
        "    Type": "SE_BAD_FIELD",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "Class org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues defines non-transient non-serializable instance field mockUtil",
        "  Method": "",
        "   Field": "mockUtil",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-19",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-2",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-20",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-21",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-22",
        "   Class": "org.mockito.internal.matchers.Equality",
        "     Cat": "STYLE",
        "  Abbrev": "RCN",
        "    Type": "RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "Redundant nullcheck of $L1, which is known to be non-null in org.mockito.internal.matchers.Equality.areEqual(Object, Object)",
        "  Method": "areEqual",
        "   Field": "",
        "   Lines": [
            [
                16,
                16,
                "SOURCE_REDUNDANT_NULL_CHECK"
            ]
        ]
    },
    {
        "    Proj": "Mockito-23",
        "   Class": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "IS",
        "    Type": "IS2_INCONSISTENT_SYNC",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Inconsistent synchronization of org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.delegate; locked 66% of time",
        "  Method": "",
        "   Field": "delegate",
        "   Lines": [
            [
                55,
                55,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                68,
                68,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                69,
                69,
                "SOURCE_LINE_SYNC_ACCESS"
            ]
        ]
    },
    {
        "    Proj": "Mockito-23",
        "   Class": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "IS",
        "    Type": "IS2_INCONSISTENT_SYNC",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Inconsistent synchronization of org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.mockitoCore; locked 50% of time",
        "  Method": "",
        "   Field": "mockitoCore",
        "   Lines": [
            [
                99,
                99,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                54,
                54,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                62,
                62,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                63,
                63,
                "SOURCE_LINE_SYNC_ACCESS"
            ]
        ]
    },
    {
        "    Proj": "Mockito-24",
        "   Class": "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "Se",
        "    Type": "SE_BAD_FIELD",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "Class org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues defines non-transient non-serializable instance field mockUtil",
        "  Method": "",
        "   Field": "mockUtil",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-25",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-26",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-27",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-28",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-29",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-3",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-30",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-31",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-32",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-33",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-34",
        "   Class": "org.mockito.internal.invocation.InvocationMatcher",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "Se",
        "    Type": "SE_BAD_FIELD",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Class org.mockito.internal.invocation.InvocationMatcher defines non-transient non-serializable instance field matchers",
        "  Method": "",
        "   Field": "matchers",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-35",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-36",
        "   Class": "org.mockito.internal.invocation.Invocation",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.mockito.internal.invocation.Invocation.getArguments() may expose internal representation by returning Invocation.arguments",
        "  Method": "getArguments",
        "   Field": "arguments",
        "   Lines": [
            [
                86,
                86,
                null
            ]
        ]
    },
    {
        "    Proj": "Mockito-36",
        "   Class": "org.mockito.internal.invocation.Invocation",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.mockito.internal.invocation.Invocation.getRawArguments() may expose internal representation by returning Invocation.rawArguments",
        "  Method": "getRawArguments",
        "   Field": "rawArguments",
        "   Lines": [
            [
                199,
                199,
                null
            ]
        ]
    },
    {
        "    Proj": "Mockito-36",
        "   Class": "org.mockito.internal.invocation.Invocation",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.mockito.internal.invocation.Invocation(Object, MockitoMethod, Object[], int, RealMethod) may expose internal representation by storing an externally mutable object into Invocation.rawArguments",
        "  Method": "<init>",
        "   Field": "rawArguments",
        "   Lines": [
            [
                50,
                50,
                null
            ]
        ]
    },
    {
        "    Proj": "Mockito-37",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-38",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-4",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-5",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-6",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-7",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-8",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Mockito-9",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-1",
        "   Class": "org.joda.time.Partial",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.joda.time.Partial(DateTimeFieldType[], int[], Chronology) may expose internal representation by storing an externally mutable object into Partial.iTypes",
        "  Method": "<init>",
        "   Field": "iTypes",
        "   Lines": [
            [
                203,
                203,
                null
            ]
        ]
    },
    {
        "    Proj": "Time-1",
        "   Class": "org.joda.time.Partial",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.joda.time.Partial(DateTimeFieldType[], int[], Chronology) may expose internal representation by storing an externally mutable object into Partial.iValues",
        "  Method": "<init>",
        "   Field": "iValues",
        "   Lines": [
            [
                204,
                204,
                null
            ]
        ]
    },
    {
        "    Proj": "Time-10",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-11",
        "   Class": "org.joda.time.tz.ZoneInfoCompiler",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_DEFAULT_ENCODING",
        "Priority": "1",
        "    Rank": "19",
        "     Msg": "Found reliance on default encoding in org.joda.time.tz.ZoneInfoCompiler.compile(File, File[]): new java.io.FileReader(File)",
        "  Method": "compile",
        "   Field": "",
        "   Lines": [
            [
                370,
                370,
                null
            ]
        ]
    },
    {
        "    Proj": "Time-11",
        "   Class": "org.joda.time.tz.ZoneInfoCompiler",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "RV",
        "    Type": "RV_RETURN_VALUE_IGNORED_BAD_PRACTICE",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Exceptional return value of java.io.File.mkdirs() ignored in org.joda.time.tz.ZoneInfoCompiler.compile(File, File[])",
        "  Method": "compile",
        "   Field": "",
        "   Lines": [
            [
                404,
                404,
                null
            ],
            [
                446,
                446,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "Time-12",
        "   Class": "org.joda.time.LocalDateTime",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "HE",
        "    Type": "HE_EQUALS_NO_HASHCODE",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "org.joda.time.LocalDateTime defines equals but not hashCode",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                669,
                678,
                null
            ]
        ]
    },
    {
        "    Proj": "Time-13",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-14",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-15",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-16",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-17",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-18",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-19",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-2",
        "   Class": "org.joda.time.Partial",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.joda.time.Partial(DateTimeFieldType[], int[], Chronology) may expose internal representation by storing an externally mutable object into Partial.iTypes",
        "  Method": "<init>",
        "   Field": "iTypes",
        "   Lines": [
            [
                203,
                203,
                null
            ]
        ]
    },
    {
        "    Proj": "Time-2",
        "   Class": "org.joda.time.Partial",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.joda.time.Partial(DateTimeFieldType[], int[], Chronology) may expose internal representation by storing an externally mutable object into Partial.iValues",
        "  Method": "<init>",
        "   Field": "iValues",
        "   Lines": [
            [
                204,
                204,
                null
            ]
        ]
    },
    {
        "    Proj": "Time-20",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-21",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-22",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-23",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-24",
        "   Class": "org.joda.time.format.DateTimeParserBucket",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field iField in org.joda.time.format.DateTimeParserBucket.computeMillis(boolean, String)",
        "  Method": "computeMillis",
        "   Field": "iField",
        "   Lines": [
            [
                343,
                343,
                null
            ]
        ]
    },
    {
        "    Proj": "Time-24",
        "   Class": "org.joda.time.format.DateTimeParserBucket",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "RV",
        "    Type": "RV_NEGATING_RESULT_OF_COMPARETO",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "org.joda.time.format.DateTimeParserBucket.compareReverse(DurationField, DurationField) negates the return value of org.joda.time.DurationField.compareTo(Object)",
        "  Method": "compareReverse",
        "   Field": "",
        "   Lines": [
            [
                508,
                508,
                null
            ]
        ]
    },
    {
        "    Proj": "Time-25",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-26",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-27",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-3",
        "   Class": "org.joda.time.MutableDateTime",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "Se",
        "    Type": "SE_BAD_FIELD",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Class org.joda.time.MutableDateTime defines non-transient non-serializable instance field iRoundingField",
        "  Method": "",
        "   Field": "iRoundingField",
        "   Lines": []
    },
    {
        "    Proj": "Time-3",
        "   Class": "org.joda.time.MutableDateTime",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.joda.time.MutableDateTime.setMillis(long) where default case is missing",
        "  Method": "setMillis",
        "   Field": "",
        "   Lines": [
            [
                454,
                470,
                null
            ]
        ]
    },
    {
        "    Proj": "Time-4",
        "   Class": "org.joda.time.Partial",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.joda.time.Partial(DateTimeFieldType[], int[], Chronology) may expose internal representation by storing an externally mutable object into Partial.iTypes",
        "  Method": "<init>",
        "   Field": "iTypes",
        "   Lines": [
            [
                203,
                203,
                null
            ]
        ]
    },
    {
        "    Proj": "Time-4",
        "   Class": "org.joda.time.Partial",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.joda.time.Partial(DateTimeFieldType[], int[], Chronology) may expose internal representation by storing an externally mutable object into Partial.iValues",
        "  Method": "<init>",
        "   Field": "iValues",
        "   Lines": [
            [
                204,
                204,
                null
            ]
        ]
    },
    {
        "    Proj": "Time-5",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-6",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-7",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-8",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    },
    {
        "    Proj": "Time-9",
        "   Class": "",
        "     Cat": "",
        "  Abbrev": "",
        "    Type": "NO_WARNING",
        "Priority": "",
        "    Rank": "",
        "     Msg": "",
        "  Method": "",
        "   Field": "",
        "   Lines": []
    }
]