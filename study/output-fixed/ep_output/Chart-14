/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4711: warning: [EqualsHashCode] Classes that override equals should also override hashCode.
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/EqualsHashCode)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:608: warning: [MissingOverride] getPlotType implements method in Plot; expected @Override
    public String getPlotType() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getPlotType() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:619: warning: [MissingOverride] getOrientation implements method in Zoomable; expected @Override
    public PlotOrientation getOrientation() {
                           ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public PlotOrientation getOrientation() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:635: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (orientation != this.orientation) {
                        ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!orientation.equals(this.orientation)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:1354: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        this.datasetToDomainAxisMap.put(new Integer(index), 
                                        ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.datasetToDomainAxisMap.put(Integer.valueOf(index),'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:1355: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                new Integer(axisIndex));
                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(axisIndex));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:1370: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        this.datasetToRangeAxisMap.put(new Integer(index), 
                                       ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.datasetToRangeAxisMap.put(Integer.valueOf(index),'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:1371: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                new Integer(axisIndex));
                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(axisIndex));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2125: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2196: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2198: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2201: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.foregroundDomainMarkers.put(new Integer(index), markers);
                                                 ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.foregroundDomainMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2205: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2207: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2210: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.backgroundDomainMarkers.put(new Integer(index), markers);
                                                 ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.backgroundDomainMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2285: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2286: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(
                                                                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'markers = (ArrayList) this.foregroundDomainMarkers.get(Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2290: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            markers = (ArrayList) this.backgroundDomainMarkers.get(new Integer(
                                                                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'markers = (ArrayList) this.backgroundDomainMarkers.get(Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2397: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2399: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2402: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.foregroundRangeMarkers.put(new Integer(index), markers);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.foregroundRangeMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2406: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(layer, Layer.BACKGROUND)) {' or 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2408: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2411: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.backgroundRangeMarkers.put(new Integer(index), markers);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.backgroundRangeMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2428: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2524: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2525: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(
                                                                  ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'markers = (ArrayList) this.foregroundRangeMarkers.get(Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2529: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            markers = (ArrayList) this.backgroundRangeMarkers.get(new Integer(
                                                                  ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'markers = (ArrayList) this.backgroundRangeMarkers.get(Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2670: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (this.orientation == PlotOrientation.HORIZONTAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2676: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (this.orientation == PlotOrientation.VERTICAL) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.orientation, PlotOrientation.VERTICAL)) {' or 'else if (this.orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2717: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (this.orientation == PlotOrientation.HORIZONTAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2723: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (this.orientation == PlotOrientation.VERTICAL) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.orientation, PlotOrientation.VERTICAL)) {' or 'else if (this.orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2756: warning: [MissingOverride] draw implements method in Plot; expected @Override
    public void draw(Graphics2D g2,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void draw(Graphics2D g2,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2807: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (orient == PlotOrientation.VERTICAL) {
                           ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orient, PlotOrientation.VERTICAL)) {' or 'if (orient.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2820: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (orient == PlotOrientation.VERTICAL) {
                           ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orient, PlotOrientation.VERTICAL)) {' or 'if (orient.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2882: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (order == DatasetRenderingOrder.FORWARD) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(order, DatasetRenderingOrder.FORWARD)) {' or 'if (order.equals(DatasetRenderingOrder.FORWARD)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2914: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (order == DatasetRenderingOrder.REVERSE) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(order, DatasetRenderingOrder.REVERSE)) {' or 'else if (order.equals(DatasetRenderingOrder.REVERSE)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2958: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (orient == PlotOrientation.VERTICAL) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orient, PlotOrientation.VERTICAL)) {' or 'if (orient.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2980: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (orient == PlotOrientation.VERTICAL) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orient, PlotOrientation.VERTICAL)) {' or 'if (orient.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3020: warning: [MissingOverride] drawBackground overrides method in Plot; expected @Override
    public void drawBackground(Graphics2D g2, Rectangle2D area) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void drawBackground(Graphics2D g2, Rectangle2D area) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3064: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (this.orientation == PlotOrientation.HORIZONTAL) {
                                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3080: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (this.orientation == PlotOrientation.HORIZONTAL) {
                                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3095: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (this.orientation == PlotOrientation.HORIZONTAL) {
                                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3110: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (this.orientation == PlotOrientation.HORIZONTAL) {
                                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3335: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (seriesOrder == SeriesRenderingOrder.REVERSE) {
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(seriesOrder, SeriesRenderingOrder.REVERSE)) {' or 'if (seriesOrder.equals(SeriesRenderingOrder.REVERSE)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3402: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                new Integer(index));
                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3429: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            = (Integer) this.datasetToRangeAxisMap.get(new Integer(index));
                                                       ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean '= (Integer) this.datasetToRangeAxisMap.get(Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3666: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3667: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3670: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(layer, Layer.BACKGROUND)) {' or 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3692: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3693: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3696: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(layer, Layer.BACKGROUND)) {' or 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3720: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (getOrientation() == PlotOrientation.HORIZONTAL) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(getOrientation(), PlotOrientation.HORIZONTAL)) {' or 'if (getOrientation().equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3753: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (orientation == PlotOrientation.VERTICAL) {
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.VERTICAL)) {' or 'if (orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3785: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (getOrientation() == PlotOrientation.HORIZONTAL) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(getOrientation(), PlotOrientation.HORIZONTAL)) {' or 'if (getOrientation().equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3819: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (orientation == PlotOrientation.HORIZONTAL) {
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.HORIZONTAL)) {' or 'if (orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3845: warning: [MissingOverride] handleClick overrides method in Plot; expected @Override
    public void handleClick(int x, int y, PlotRenderingInfo info) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void handleClick(int x, int y, PlotRenderingInfo info) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3882: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(i));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(i));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3912: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(i));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(i));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3978: warning: [MissingOverride] getDataRange implements method in ValueAxisPlot; expected @Override
    public Range getDataRange(ValueAxis axis) {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Range getDataRange(ValueAxis axis) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3989: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(domainIndex)));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(domainIndex)));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3997: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(rangeIndex)));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(rangeIndex)));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4038: warning: [MissingOverride] datasetChanged overrides method in Plot; expected @Override
    public void datasetChanged(DatasetChangeEvent event) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void datasetChanged(DatasetChangeEvent event) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4056: warning: [MissingOverride] rendererChanged implements method in RendererChangeListener; expected @Override
    public void rendererChanged(RendererChangeEvent event) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void rendererChanged(RendererChangeEvent event) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4462: warning: [MissingOverride] zoomDomainAxes implements method in Zoomable; expected @Override
    public void zoomDomainAxes(double factor, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomDomainAxes(double factor, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4480: warning: [MissingOverride] zoomDomainAxes implements method in Zoomable; expected @Override
    public void zoomDomainAxes(double factor, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomDomainAxes(double factor, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4491: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                    if (this.orientation == PlotOrientation.HORIZONTAL) {
                                         ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4519: warning: [MissingOverride] zoomDomainAxes implements method in Zoomable; expected @Override
    public void zoomDomainAxes(double lowerPercent, double upperPercent,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomDomainAxes(double lowerPercent, double upperPercent,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4538: warning: [MissingOverride] zoomRangeAxes implements method in Zoomable; expected @Override
    public void zoomRangeAxes(double factor, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomRangeAxes(double factor, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4557: warning: [MissingOverride] zoomRangeAxes implements method in Zoomable; expected @Override
    public void zoomRangeAxes(double factor, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomRangeAxes(double factor, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4568: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                    if (this.orientation == PlotOrientation.HORIZONTAL) {
                                         ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4592: warning: [MissingOverride] zoomRangeAxes implements method in Zoomable; expected @Override
    public void zoomRangeAxes(double lowerPercent, double upperPercent,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomRangeAxes(double lowerPercent, double upperPercent,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4610: warning: [MissingOverride] isDomainZoomable implements method in Zoomable; expected @Override
    public boolean isDomainZoomable() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isDomainZoomable() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4622: warning: [MissingOverride] isRangeZoomable implements method in Zoomable; expected @Override
    public boolean isRangeZoomable() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isRangeZoomable() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4673: warning: [MissingOverride] getLegendItems overrides method in Plot; expected @Override
    public LegendItemCollection getLegendItems() {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public LegendItemCollection getLegendItems() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4711: warning: [MissingOverride] equals overrides method in Plot; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4724: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.orientation != that.orientation) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.orientation, that.orientation)) {' or 'if (!this.orientation.equals(that.orientation)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4896: warning: [MissingOverride] clone overrides method in Plot; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/XYPlot.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
79 warnings
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3870: warning: [EqualsHashCode] Classes that override equals should also override hashCode.
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/EqualsHashCode)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:532: warning: [MissingOverride] getPlotType implements method in Plot; expected @Override
    public String getPlotType() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getPlotType() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:543: warning: [MissingOverride] getOrientation implements method in Zoomable; expected @Override
    public PlotOrientation getOrientation() {
                           ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public PlotOrientation getOrientation() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1241: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        this.datasetToDomainAxisMap.set(index, new Integer(axisIndex));  
                                               ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.datasetToDomainAxisMap.set(index, Integer.valueOf(axisIndex));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1274: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        this.datasetToRangeAxisMap.set(index, new Integer(axisIndex));
                                              ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.datasetToRangeAxisMap.set(index, Integer.valueOf(axisIndex));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1767: warning: [MissingOverride] getLegendItems overrides method in Plot; expected @Override
    public LegendItemCollection getLegendItems() {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public LegendItemCollection getLegendItems() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1801: warning: [MissingOverride] handleClick overrides method in Plot; expected @Override
    public void handleClick(int x, int y, PlotRenderingInfo info) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void handleClick(int x, int y, PlotRenderingInfo info) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1807: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (this.orientation == PlotOrientation.HORIZONTAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1810: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (this.orientation == PlotOrientation.VERTICAL) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.orientation, PlotOrientation.VERTICAL)) {' or 'else if (this.orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1832: warning: [MissingOverride] zoom overrides method in Plot; expected @Override
    public void zoom(double percent) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoom(double percent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1853: warning: [MissingOverride] datasetChanged overrides method in Plot; expected @Override
    public void datasetChanged(DatasetChangeEvent event) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void datasetChanged(DatasetChangeEvent event) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1878: warning: [MissingOverride] rendererChanged implements method in RendererChangeListener; expected @Override
    public void rendererChanged(RendererChangeEvent event) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void rendererChanged(RendererChangeEvent event) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1971: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1973: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1976: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.foregroundDomainMarkers.put(new Integer(index), markers);
                                                 ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.foregroundDomainMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1980: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1982: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1985: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.backgroundDomainMarkers.put(new Integer(index), markers);
                                                 ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.backgroundDomainMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2045: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2046: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2049: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(layer, Layer.BACKGROUND)) {' or 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2066: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2158: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2159: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(
                                                                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'markers = (ArrayList) this.foregroundDomainMarkers.get(Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2163: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            markers = (ArrayList) this.backgroundDomainMarkers.get(new Integer(
                                                                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'markers = (ArrayList) this.backgroundDomainMarkers.get(Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2242: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2244: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2247: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.foregroundRangeMarkers.put(new Integer(index), markers);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.foregroundRangeMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2251: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(layer, Layer.BACKGROUND)) {' or 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2253: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2256: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.backgroundRangeMarkers.put(new Integer(index), markers);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.backgroundRangeMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2318: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2319: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2322: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(layer, Layer.BACKGROUND)) {' or 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2339: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2443: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2444: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(
                                                                  ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'markers = (ArrayList) this.foregroundRangeMarkers.get(Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2448: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            markers = (ArrayList) this.backgroundRangeMarkers.get(new Integer(
                                                                  ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'markers = (ArrayList) this.backgroundRangeMarkers.get(Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2722: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (this.orientation == PlotOrientation.HORIZONTAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2728: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (this.orientation == PlotOrientation.VERTICAL) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.orientation, PlotOrientation.VERTICAL)) {' or 'else if (this.orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2777: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (this.orientation == PlotOrientation.HORIZONTAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2783: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (this.orientation == PlotOrientation.VERTICAL) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.orientation, PlotOrientation.VERTICAL)) {' or 'else if (this.orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2836: warning: [MissingOverride] draw implements method in Plot; expected @Override
    public void draw(Graphics2D g2, Rectangle2D area, 
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void draw(Graphics2D g2, Rectangle2D area,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2913: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (order == DatasetRenderingOrder.FORWARD) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(order, DatasetRenderingOrder.FORWARD)) {' or 'if (order.equals(DatasetRenderingOrder.FORWARD)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3018: warning: [MissingOverride] drawBackground overrides method in Plot; expected @Override
    public void drawBackground(Graphics2D g2, Rectangle2D area) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void drawBackground(Graphics2D g2, Rectangle2D area) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3148: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (this.columnRenderingOrder == SortOrder.ASCENDING) {
                                              ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.columnRenderingOrder, SortOrder.ASCENDING)) {' or 'if (this.columnRenderingOrder.equals(SortOrder.ASCENDING)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3150: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {
                                                   ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.rowRenderingOrder, SortOrder.ASCENDING)) {' or 'if (this.rowRenderingOrder.equals(SortOrder.ASCENDING)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3168: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {
                                                   ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.rowRenderingOrder, SortOrder.ASCENDING)) {' or 'if (this.rowRenderingOrder.equals(SortOrder.ASCENDING)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3359: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.orientation == PlotOrientation.HORIZONTAL) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3363: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (this.orientation == PlotOrientation.VERTICAL) {
                                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.orientation, PlotOrientation.VERTICAL)) {' or 'else if (this.orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3394: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (orientation == PlotOrientation.HORIZONTAL) {
                        ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.HORIZONTAL)) {' or 'if (orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3421: warning: [MissingOverride] getDataRange implements method in ValueAxisPlot; expected @Override
    public Range getDataRange(ValueAxis axis) {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Range getDataRange(ValueAxis axis) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3430: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (axis == getRangeAxis()) {
                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(axis, getRangeAxis())) {' or 'else if (axis.equals(getRangeAxis())) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3695: warning: [MissingOverride] isDomainZoomable implements method in Zoomable; expected @Override
    public boolean isDomainZoomable() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isDomainZoomable() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3706: warning: [MissingOverride] isRangeZoomable implements method in Zoomable; expected @Override
    public boolean isRangeZoomable() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isRangeZoomable() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3718: warning: [MissingOverride] zoomDomainAxes implements method in Zoomable; expected @Override
    public void zoomDomainAxes(double factor, PlotRenderingInfo state, 
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomDomainAxes(double factor, PlotRenderingInfo state,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3732: warning: [MissingOverride] zoomDomainAxes implements method in Zoomable; expected @Override
    public void zoomDomainAxes(double lowerPercent, double upperPercent, 
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomDomainAxes(double lowerPercent, double upperPercent,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3750: warning: [MissingOverride] zoomDomainAxes implements method in Zoomable; expected @Override
    public void zoomDomainAxes(double factor, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomDomainAxes(double factor, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3762: warning: [MissingOverride] zoomRangeAxes implements method in Zoomable; expected @Override
    public void zoomRangeAxes(double factor, PlotRenderingInfo state, 
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomRangeAxes(double factor, PlotRenderingInfo state,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3781: warning: [MissingOverride] zoomRangeAxes implements method in Zoomable; expected @Override
    public void zoomRangeAxes(double factor, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomRangeAxes(double factor, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3792: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                    if (this.orientation == PlotOrientation.HORIZONTAL) {
                                         ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3814: warning: [MissingOverride] zoomRangeAxes implements method in Zoomable; expected @Override
    public void zoomRangeAxes(double lowerPercent, double upperPercent, 
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomRangeAxes(double lowerPercent, double upperPercent,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3870: warning: [MissingOverride] equals overrides method in Plot; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3884: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.orientation != that.orientation) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.orientation, that.orientation)) {' or 'if (!this.orientation.equals(that.orientation)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3916: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.renderingOrder != that.renderingOrder) {
                                ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.renderingOrder, that.renderingOrder)) {' or 'if (!this.renderingOrder.equals(that.renderingOrder)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3919: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.columnRenderingOrder != that.columnRenderingOrder) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.columnRenderingOrder, that.columnRenderingOrder)) {' or 'if (!this.columnRenderingOrder.equals(that.columnRenderingOrder)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3922: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.rowRenderingOrder != that.rowRenderingOrder) {
                                   ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.rowRenderingOrder, that.rowRenderingOrder)) {' or 'if (!this.rowRenderingOrder.equals(that.rowRenderingOrder)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3928: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.domainGridlinePosition != that.domainGridlinePosition) {
                                        ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.domainGridlinePosition, that.domainGridlinePosition)) {' or 'if (!this.domainGridlinePosition.equals(that.domainGridlinePosition)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:4005: warning: [MissingOverride] clone overrides method in Plot; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
69 warnings
