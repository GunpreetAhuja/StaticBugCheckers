/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Closure-125/src/com/google/javascript/jscomp/TypeCheck.java:1729: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
      if (baseConstructor != getNativeType(OBJECT_FUNCTION_TYPE) &&
                          ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(baseConstructor, getNativeType(OBJECT_FUNCTION_TYPE)) &&' or 'if (!baseConstructor.equals(getNativeType(OBJECT_FUNCTION_TYPE)) &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Closure-125/src/com/google/javascript/jscomp/TypeCheck.java:1736: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (baseConstructor != getNativeType(OBJECT_FUNCTION_TYPE)) {
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(baseConstructor, getNativeType(OBJECT_FUNCTION_TYPE))) {' or 'if (!baseConstructor.equals(getNativeType(OBJECT_FUNCTION_TYPE))) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/f/Closure-125/src/com/google/javascript/jscomp/TypeCheck.java:1871: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            parameter != null && parameter.isVarArgs())) {
                              ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(parameter != null && parameter.isVarArgs()))) {'?
3 warnings
