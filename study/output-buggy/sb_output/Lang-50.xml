<?xml version="1.0" encoding="UTF-8"?>

<BugCollection version="3.1.0" sequence="0" timestamp="1542186250000" analysisTimestamp="1542186252989" release="">
  <Project projectName="">
    <Jar>/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java</Jar>
    <AuxClasspathEntry>/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/target/classes</AuxClasspathEntry>
  </Project>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="5a539545ee3b200961f88f7ef542d5ae" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.lang.time.FastDateFormat.getDateInstance(int, TimeZone, Locale) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.apache.commons.lang.time.FastDateFormat" primary="true">
      <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" start="110" end="1032" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java">
        <Message>At FastDateFormat.java:[lines 110-1032]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.lang.time.FastDateFormat</Message>
    </Class>
    <Method classname="org.apache.commons.lang.time.FastDateFormat" name="getDateInstance" signature="(ILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang/time/FastDateFormat;" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" start="280" end="305" startBytecode="0" endBytecode="258" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java"/>
      <Message>In method org.apache.commons.lang.time.FastDateFormat.getDateInstance(int, TimeZone, Locale)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="849" end="851" startBytecode="0" endBytecode="41" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL">
      <SourceLine classname="java.lang.Integer" start="830" end="832" startBytecode="0" endBytecode="72" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" primary="true" start="280" end="280" startBytecode="5" endBytecode="5" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java">
      <Message>At FastDateFormat.java:[line 280]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="b184840e6dbd71bed0308a8d75560170" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.lang.time.FastDateFormat.getDateTimeInstance(int, int, TimeZone, Locale) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.apache.commons.lang.time.FastDateFormat" primary="true">
      <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" start="110" end="1032" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java">
        <Message>At FastDateFormat.java:[lines 110-1032]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.lang.time.FastDateFormat</Message>
    </Class>
    <Method classname="org.apache.commons.lang.time.FastDateFormat" name="getDateTimeInstance" signature="(IILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang/time/FastDateFormat;" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" start="461" end="485" startBytecode="0" endBytecode="281" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java"/>
      <Message>In method org.apache.commons.lang.time.FastDateFormat.getDateTimeInstance(int, int, TimeZone, Locale)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="849" end="851" startBytecode="0" endBytecode="41" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL">
      <SourceLine classname="java.lang.Integer" start="830" end="832" startBytecode="0" endBytecode="72" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" primary="true" start="461" end="461" startBytecode="9" endBytecode="9" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java">
      <Message>At FastDateFormat.java:[line 461]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="2d9f0c5da143d3acec515fddbe4d51bc" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.lang.time.FastDateFormat.getTimeInstance(int, TimeZone, Locale) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.apache.commons.lang.time.FastDateFormat" primary="true">
      <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" start="110" end="1032" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java">
        <Message>At FastDateFormat.java:[lines 110-1032]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.lang.time.FastDateFormat</Message>
    </Class>
    <Method classname="org.apache.commons.lang.time.FastDateFormat" name="getTimeInstance" signature="(ILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang/time/FastDateFormat;" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" start="367" end="391" startBytecode="0" endBytecode="258" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java"/>
      <Message>In method org.apache.commons.lang.time.FastDateFormat.getTimeInstance(int, TimeZone, Locale)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="849" end="851" startBytecode="0" endBytecode="41" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL">
      <SourceLine classname="java.lang.Integer" start="830" end="832" startBytecode="0" endBytecode="72" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" primary="true" start="367" end="367" startBytecode="5" endBytecode="5" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java">
      <Message>At FastDateFormat.java:[line 367]</Message>
    </SourceLine>
  </BugInstance>
  <BugCategory category="PERFORMANCE">
    <Description>Performance</Description>
  </BugCategory>
  <BugPattern type="DM_NUMBER_CTOR" abbrev="Bx" category="PERFORMANCE">
    <ShortDescription>Method invokes inefficient Number constructor; use static valueOf instead</ShortDescription>
    <Details><![CDATA[
      
      <p>
      Using <code>new Integer(int)</code> is guaranteed to always result in a new object whereas
      <code>Integer.valueOf(int)</code> allows caching of values to be done by the compiler, class library, or JVM.
      Using of cached values avoids object allocation and the code will be faster.
      </p>
      <p>
      Values between -128 and 127 are guaranteed to have corresponding cached instances
      and using <code>valueOf</code> is approximately 3.5 times faster than using constructor.
      For values outside the constant range the performance of both styles is the same.
      </p>
      <p>
      Unless the class must be compatible with JVMs predating Java 1.5,
      use either autoboxing or the <code>valueOf()</code> method when creating instances of
      <code>Long</code>, <code>Integer</code>, <code>Short</code>, <code>Character</code>, and <code>Byte</code>.
      </p>
      
    ]]></Details>
  </BugPattern>
  <BugCode abbrev="Bx">
    <Description>Questionable Boxing of primitive value</Description>
  </BugCode>
  <Errors errors="0" missingClasses="0"></Errors>
  <FindBugsSummary timestamp="Wed, 14 Nov 2018 04:04:10 -0500" total_classes="18" referenced_classes="59" total_bugs="3" total_size="636" num_packages="1" java_version="1.8.0_121" vm_version="25.121-b13" cpu_seconds="10.06" clock_seconds="5.22" peak_mbytes="183.66" alloc_mbytes="1820.50" gc_seconds="0.05" priority_2="3">
    <FileStats path="org/apache/commons/lang/time/FastDateFormat.java" bugCount="3" size="636" bugHash="d1a2b9b6ac4cdb50d98896758a828ece"/>
    <PackageStats package="org.apache.commons.lang.time" total_bugs="3" total_types="18" total_size="636" priority_2="3">
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat" sourceFile="FastDateFormat.java" interface="false" size="329" bugs="3" priority_2="3"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$CharacterLiteral" sourceFile="FastDateFormat.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$NumberRule" sourceFile="FastDateFormat.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$PaddedNumberField" sourceFile="FastDateFormat.java" interface="false" size="29" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$Pair" sourceFile="FastDateFormat.java" interface="false" size="23" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$Rule" sourceFile="FastDateFormat.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$StringLiteral" sourceFile="FastDateFormat.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$TextField" sourceFile="FastDateFormat.java" interface="false" size="19" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$TimeZoneDisplayKey" sourceFile="FastDateFormat.java" interface="false" size="23" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$TimeZoneNameRule" sourceFile="FastDateFormat.java" interface="false" size="35" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$TimeZoneNumberRule" sourceFile="FastDateFormat.java" interface="false" size="28" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$TwelveHourField" sourceFile="FastDateFormat.java" interface="false" size="17" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$TwentyFourHourField" sourceFile="FastDateFormat.java" interface="false" size="17" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$TwoDigitMonthField" sourceFile="FastDateFormat.java" interface="false" size="16" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$TwoDigitNumberField" sourceFile="FastDateFormat.java" interface="false" size="17" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$TwoDigitYearField" sourceFile="FastDateFormat.java" interface="false" size="16" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$UnpaddedMonthField" sourceFile="FastDateFormat.java" interface="false" size="18" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$UnpaddedNumberField" sourceFile="FastDateFormat.java" interface="false" size="22" bugs="0"/>
    </PackageStats>
    <FindBugsProfile>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine" totalMilliseconds="625" invocations="505" avgMicrosecondsPerInvocation="1238" maxMicrosecondsPerInvocation="29366" standardDeviationMicrosecondsPerInvocation="2615"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine" totalMilliseconds="559" invocations="500" avgMicrosecondsPerInvocation="1118" maxMicrosecondsPerInvocation="52241" standardDeviationMicrosecondsPerInvocation="3501"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FieldItemSummary" totalMilliseconds="245" invocations="59" avgMicrosecondsPerInvocation="4156" maxMicrosecondsPerInvocation="71925" standardDeviationMicrosecondsPerInvocation="10299"/>
      <ClassProfile name="edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory" totalMilliseconds="216" invocations="202" avgMicrosecondsPerInvocation="1072" maxMicrosecondsPerInvocation="26912" standardDeviationMicrosecondsPerInvocation="2850"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindNoSideEffectMethods" totalMilliseconds="175" invocations="59" avgMicrosecondsPerInvocation="2970" maxMicrosecondsPerInvocation="31403" standardDeviationMicrosecondsPerInvocation="5894"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory" totalMilliseconds="152" invocations="44" avgMicrosecondsPerInvocation="3455" maxMicrosecondsPerInvocation="76911" standardDeviationMicrosecondsPerInvocation="12081"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory" totalMilliseconds="152" invocations="43" avgMicrosecondsPerInvocation="3534" maxMicrosecondsPerInvocation="74897" standardDeviationMicrosecondsPerInvocation="12095"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory" totalMilliseconds="139" invocations="43" avgMicrosecondsPerInvocation="3241" maxMicrosecondsPerInvocation="43148" standardDeviationMicrosecondsPerInvocation="8534"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory" totalMilliseconds="135" invocations="43" avgMicrosecondsPerInvocation="3145" maxMicrosecondsPerInvocation="70079" standardDeviationMicrosecondsPerInvocation="10803"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory" totalMilliseconds="127" invocations="43" avgMicrosecondsPerInvocation="2975" maxMicrosecondsPerInvocation="35122" standardDeviationMicrosecondsPerInvocation="6633"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory" totalMilliseconds="119" invocations="43" avgMicrosecondsPerInvocation="2776" maxMicrosecondsPerInvocation="98814" standardDeviationMicrosecondsPerInvocation="14864"/>
      <ClassProfile name="edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder" totalMilliseconds="117" invocations="43" avgMicrosecondsPerInvocation="2733" maxMicrosecondsPerInvocation="29615" standardDeviationMicrosecondsPerInvocation="6442"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers" totalMilliseconds="116" invocations="59" avgMicrosecondsPerInvocation="1970" maxMicrosecondsPerInvocation="38268" standardDeviationMicrosecondsPerInvocation="5746"/>
      <ClassProfile name="edu.umd.cs.findbugs.util.TopologicalSort" totalMilliseconds="114" invocations="460" avgMicrosecondsPerInvocation="249" maxMicrosecondsPerInvocation="18206" standardDeviationMicrosecondsPerInvocation="1100"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindOpenStream" totalMilliseconds="80" invocations="1" avgMicrosecondsPerInvocation="80734" maxMicrosecondsPerInvocation="80734" standardDeviationMicrosecondsPerInvocation="0"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.CalledMethods" totalMilliseconds="75" invocations="59" avgMicrosecondsPerInvocation="1279" maxMicrosecondsPerInvocation="33336" standardDeviationMicrosecondsPerInvocation="4475"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase" totalMilliseconds="72" invocations="59" avgMicrosecondsPerInvocation="1222" maxMicrosecondsPerInvocation="37749" standardDeviationMicrosecondsPerInvocation="4897"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindRefComparison" totalMilliseconds="69" invocations="1" avgMicrosecondsPerInvocation="69151" maxMicrosecondsPerInvocation="69151" standardDeviationMicrosecondsPerInvocation="0"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical" totalMilliseconds="67" invocations="59" avgMicrosecondsPerInvocation="1140" maxMicrosecondsPerInvocation="32522" standardDeviationMicrosecondsPerInvocation="4252"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine" totalMilliseconds="66" invocations="92" avgMicrosecondsPerInvocation="721" maxMicrosecondsPerInvocation="26054" standardDeviationMicrosecondsPerInvocation="2928"/>
    </FindBugsProfile>
  </FindBugsSummary>
  <ClassFeatures></ClassFeatures>
  <History></History>
</BugCollection>
