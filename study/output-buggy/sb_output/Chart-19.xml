<?xml version="1.0" encoding="UTF-8"?>

<BugCollection version="3.1.0" sequence="0" timestamp="1542185245000" analysisTimestamp="1542185248379" release="">
  <Project projectName="">
    <Jar>/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source</Jar>
    <AuxClasspathEntry>/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/build</AuxClasspathEntry>
    <AuxClasspathEntry>/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/lib/servlet.jar</AuxClasspathEntry>
  </Project>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="9466c5aafb0adc5a2019061d69686f4b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.jfree.chart.plot.CategoryPlot.addDomainMarker(int, CategoryMarker, Layer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.jfree.chart.plot.CategoryPlot" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="242" end="3805" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
        <Message>At CategoryPlot.java:[lines 242-3805]</Message>
      </SourceLine>
      <Message>In class org.jfree.chart.plot.CategoryPlot</Message>
    </Class>
    <Method classname="org.jfree.chart.plot.CategoryPlot" name="addDomainMarker" signature="(ILorg/jfree/chart/plot/CategoryMarker;Lorg/jfree/chart/util/Layer;)V" isStatic="false" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="1922" end="1949" startBytecode="0" endBytecode="316" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java"/>
      <Message>In method org.jfree.chart.plot.CategoryPlot.addDomainMarker(int, CategoryMarker, Layer)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="849" end="851" startBytecode="0" endBytecode="41" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL">
      <SourceLine classname="java.lang.Integer" start="830" end="832" startBytecode="0" endBytecode="72" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.jfree.chart.plot.CategoryPlot" primary="true" start="1930" end="1930" startBytecode="44" endBytecode="44" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
      <Message>At CategoryPlot.java:[line 1930]</Message>
    </SourceLine>
    <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="1934" end="1934" startBytecode="80" endBytecode="80" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at CategoryPlot.java:[line 1934]</Message>
    </SourceLine>
    <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="1939" end="1939" startBytecode="119" endBytecode="119" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at CategoryPlot.java:[line 1939]</Message>
    </SourceLine>
    <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="1943" end="1943" startBytecode="155" endBytecode="155" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at CategoryPlot.java:[line 1943]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="232c23c471705fb9c74a55b69699da88" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.jfree.chart.plot.CategoryPlot.addRangeMarker(int, Marker, Layer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.jfree.chart.plot.CategoryPlot" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="242" end="3805" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
        <Message>At CategoryPlot.java:[lines 242-3805]</Message>
      </SourceLine>
      <Message>In class org.jfree.chart.plot.CategoryPlot</Message>
    </Class>
    <Method classname="org.jfree.chart.plot.CategoryPlot" name="addRangeMarker" signature="(ILorg/jfree/chart/plot/Marker;Lorg/jfree/chart/util/Layer;)V" isStatic="false" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="2088" end="2108" startBytecode="0" endBytecode="270" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java"/>
      <Message>In method org.jfree.chart.plot.CategoryPlot.addRangeMarker(int, Marker, Layer)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="849" end="851" startBytecode="0" endBytecode="41" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL">
      <SourceLine classname="java.lang.Integer" start="830" end="832" startBytecode="0" endBytecode="72" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.jfree.chart.plot.CategoryPlot" primary="true" start="2089" end="2089" startBytecode="16" endBytecode="16" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
      <Message>At CategoryPlot.java:[line 2089]</Message>
    </SourceLine>
    <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="2093" end="2093" startBytecode="52" endBytecode="52" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at CategoryPlot.java:[line 2093]</Message>
    </SourceLine>
    <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="2098" end="2098" startBytecode="91" endBytecode="91" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at CategoryPlot.java:[line 2098]</Message>
    </SourceLine>
    <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="2102" end="2102" startBytecode="127" endBytecode="127" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at CategoryPlot.java:[line 2102]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="efc67db728696bd701249207012c986" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.jfree.chart.plot.CategoryPlot.clearDomainMarkers(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.jfree.chart.plot.CategoryPlot" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="242" end="3805" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
        <Message>At CategoryPlot.java:[lines 242-3805]</Message>
      </SourceLine>
      <Message>In class org.jfree.chart.plot.CategoryPlot</Message>
    </Class>
    <Method classname="org.jfree.chart.plot.CategoryPlot" name="clearDomainMarkers" signature="(I)V" isStatic="false" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="2022" end="2048" startBytecode="0" endBytecode="310" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java"/>
      <Message>In method org.jfree.chart.plot.CategoryPlot.clearDomainMarkers(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="849" end="851" startBytecode="0" endBytecode="41" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL">
      <SourceLine classname="java.lang.Integer" start="830" end="832" startBytecode="0" endBytecode="72" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.jfree.chart.plot.CategoryPlot" primary="true" start="2022" end="2022" startBytecode="5" endBytecode="5" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
      <Message>At CategoryPlot.java:[line 2022]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="14cfb256b2ea7db2e12c71fc4fc63fc3" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.jfree.chart.plot.CategoryPlot.clearRangeMarkers(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.jfree.chart.plot.CategoryPlot" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="242" end="3805" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
        <Message>At CategoryPlot.java:[lines 242-3805]</Message>
      </SourceLine>
      <Message>In class org.jfree.chart.plot.CategoryPlot</Message>
    </Class>
    <Method classname="org.jfree.chart.plot.CategoryPlot" name="clearRangeMarkers" signature="(I)V" isStatic="false" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="2183" end="2209" startBytecode="0" endBytecode="310" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java"/>
      <Message>In method org.jfree.chart.plot.CategoryPlot.clearRangeMarkers(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="849" end="851" startBytecode="0" endBytecode="41" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL">
      <SourceLine classname="java.lang.Integer" start="830" end="832" startBytecode="0" endBytecode="72" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.jfree.chart.plot.CategoryPlot" primary="true" start="2183" end="2183" startBytecode="5" endBytecode="5" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
      <Message>At CategoryPlot.java:[line 2183]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="f6f822bd1af77d9e7626612da8b038e9" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.jfree.chart.plot.CategoryPlot.getDomainMarkers(int, Layer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.jfree.chart.plot.CategoryPlot" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="242" end="3805" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
        <Message>At CategoryPlot.java:[lines 242-3805]</Message>
      </SourceLine>
      <Message>In class org.jfree.chart.plot.CategoryPlot</Message>
    </Class>
    <Method classname="org.jfree.chart.plot.CategoryPlot" name="getDomainMarkers" signature="(ILorg/jfree/chart/util/Layer;)Ljava/util/Collection;" isStatic="false" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="2000" end="2011" startBytecode="0" endBytecode="144" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java"/>
      <Message>In method org.jfree.chart.plot.CategoryPlot.getDomainMarkers(int, Layer)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="849" end="851" startBytecode="0" endBytecode="41" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL">
      <SourceLine classname="java.lang.Integer" start="830" end="832" startBytecode="0" endBytecode="72" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.jfree.chart.plot.CategoryPlot" primary="true" start="2001" end="2001" startBytecode="7" endBytecode="7" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
      <Message>At CategoryPlot.java:[line 2001]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="15e53c48cc39df44fb25a7eed2cf513d" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.jfree.chart.plot.CategoryPlot.getRangeMarkers(int, Layer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.jfree.chart.plot.CategoryPlot" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="242" end="3805" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
        <Message>At CategoryPlot.java:[lines 242-3805]</Message>
      </SourceLine>
      <Message>In class org.jfree.chart.plot.CategoryPlot</Message>
    </Class>
    <Method classname="org.jfree.chart.plot.CategoryPlot" name="getRangeMarkers" signature="(ILorg/jfree/chart/util/Layer;)Ljava/util/Collection;" isStatic="false" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="2161" end="2172" startBytecode="0" endBytecode="144" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java"/>
      <Message>In method org.jfree.chart.plot.CategoryPlot.getRangeMarkers(int, Layer)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="849" end="851" startBytecode="0" endBytecode="41" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL">
      <SourceLine classname="java.lang.Integer" start="830" end="832" startBytecode="0" endBytecode="72" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.jfree.chart.plot.CategoryPlot" primary="true" start="2162" end="2162" startBytecode="7" endBytecode="7" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
      <Message>At CategoryPlot.java:[line 2162]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="d3a1ffe2ef6e604583fa3b2f4636bcf8" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis(int, int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.jfree.chart.plot.CategoryPlot" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="242" end="3805" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
        <Message>At CategoryPlot.java:[lines 242-3805]</Message>
      </SourceLine>
      <Message>In class org.jfree.chart.plot.CategoryPlot</Message>
    </Class>
    <Method classname="org.jfree.chart.plot.CategoryPlot" name="mapDatasetToDomainAxis" signature="(II)V" isStatic="false" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="1227" end="1230" startBytecode="0" endBytecode="65" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java"/>
      <Message>In method org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis(int, int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="849" end="851" startBytecode="0" endBytecode="41" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL">
      <SourceLine classname="java.lang.Integer" start="830" end="832" startBytecode="0" endBytecode="72" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.jfree.chart.plot.CategoryPlot" primary="true" start="1227" end="1227" startBytecode="10" endBytecode="10" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
      <Message>At CategoryPlot.java:[line 1227]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="a6b06077390c45d8d21d8f31fceeb961" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis(int, int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.jfree.chart.plot.CategoryPlot" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="242" end="3805" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
        <Message>At CategoryPlot.java:[lines 242-3805]</Message>
      </SourceLine>
      <Message>In class org.jfree.chart.plot.CategoryPlot</Message>
    </Class>
    <Method classname="org.jfree.chart.plot.CategoryPlot" name="mapDatasetToRangeAxis" signature="(II)V" isStatic="false" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="1260" end="1263" startBytecode="0" endBytecode="65" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java"/>
      <Message>In method org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis(int, int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="849" end="851" startBytecode="0" endBytecode="41" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL">
      <SourceLine classname="java.lang.Integer" start="830" end="832" startBytecode="0" endBytecode="72" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.jfree.chart.plot.CategoryPlot" primary="true" start="1260" end="1260" startBytecode="10" endBytecode="10" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
      <Message>At CategoryPlot.java:[line 1260]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="HE_EQUALS_USE_HASHCODE" priority="1" rank="14" abbrev="HE" category="BAD_PRACTICE" instanceHash="a135d70a518a644bc773223b1d03423f" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class defines equals() and uses Object.hashCode()</ShortMessage>
    <LongMessage>org.jfree.chart.plot.CategoryPlot defines equals and uses Object.hashCode()</LongMessage>
    <Class classname="org.jfree.chart.plot.CategoryPlot" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="242" end="3805" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
        <Message>At CategoryPlot.java:[lines 242-3805]</Message>
      </SourceLine>
      <Message>In class org.jfree.chart.plot.CategoryPlot</Message>
    </Class>
    <Method classname="org.jfree.chart.plot.CategoryPlot" name="equals" signature="(Ljava/lang/Object;)Z" isStatic="false" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="3556" end="3678" startBytecode="0" endBytecode="863" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java"/>
      <Message>In method org.jfree.chart.plot.CategoryPlot.equals(Object)</Message>
    </Method>
    <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="3556" end="3678" startBytecode="0" endBytecode="863" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java" synthetic="true">
      <Message>At CategoryPlot.java:[lines 3556-3678]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MS_SHOULD_BE_FINAL" priority="1" rank="16" abbrev="MS" category="MALICIOUS_CODE" instanceHash="d35e7e5208c4d5533fffde1645bc1571" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="218">
    <ShortMessage>Field isn&apos;t final but should be</ShortMessage>
    <LongMessage>org.jfree.chart.plot.CategoryPlot.localizationResources isn&apos;t final but should be</LongMessage>
    <Class classname="org.jfree.chart.plot.CategoryPlot" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" start="242" end="3805" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
        <Message>At CategoryPlot.java:[lines 242-3805]</Message>
      </SourceLine>
      <Message>In class org.jfree.chart.plot.CategoryPlot</Message>
    </Class>
    <Field classname="org.jfree.chart.plot.CategoryPlot" name="localizationResources" signature="Ljava/util/ResourceBundle;" isStatic="true" primary="true">
      <SourceLine classname="org.jfree.chart.plot.CategoryPlot" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
        <Message>In CategoryPlot.java</Message>
      </SourceLine>
      <Message>Field org.jfree.chart.plot.CategoryPlot.localizationResources</Message>
    </Field>
    <SourceLine classname="org.jfree.chart.plot.CategoryPlot" primary="true" start="277" end="277" startBytecode="67" endBytecode="67" sourcefile="CategoryPlot.java" sourcepath="org/jfree/chart/plot/CategoryPlot.java">
      <Message>At CategoryPlot.java:[line 277]</Message>
    </SourceLine>
  </BugInstance>
  <BugCategory category="BAD_PRACTICE">
    <Description>Bad practice</Description>
  </BugCategory>
  <BugCategory category="MALICIOUS_CODE">
    <Description>Malicious code vulnerability</Description>
  </BugCategory>
  <BugCategory category="PERFORMANCE">
    <Description>Performance</Description>
  </BugCategory>
  <BugPattern type="MS_SHOULD_BE_FINAL" abbrev="MS" category="MALICIOUS_CODE">
    <ShortDescription>Field isn&apos;t final but should be</ShortDescription>
    <Details><![CDATA[

   <p>
This static field public but not final, and
could be changed by malicious code or
        by accident from another package.
        The field could be made final to avoid
        this vulnerability.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="HE_EQUALS_USE_HASHCODE" abbrev="HE" category="BAD_PRACTICE">
    <ShortDescription>Class defines equals() and uses Object.hashCode()</ShortDescription>
    <Details><![CDATA[

  <p> This class overrides <code>equals(Object)</code>, but does not
  override <code>hashCode()</code>, and inherits the implementation of
  <code>hashCode()</code> from <code>java.lang.Object</code> (which returns
  the identity hash code, an arbitrary value assigned to the object
  by the VM).&nbsp; Therefore, the class is very likely to violate the
  invariant that equal objects must have equal hashcodes.</p>

<p>If you don't think instances of this class will ever be inserted into a HashMap/HashTable,
the recommended <code>hashCode</code> implementation to use is:</p>
<pre><code>public int hashCode() {
    assert false : "hashCode not designed";
    return 42; // any arbitrary constant will do
}
</code></pre>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DM_NUMBER_CTOR" abbrev="Bx" category="PERFORMANCE">
    <ShortDescription>Method invokes inefficient Number constructor; use static valueOf instead</ShortDescription>
    <Details><![CDATA[
      
      <p>
      Using <code>new Integer(int)</code> is guaranteed to always result in a new object whereas
      <code>Integer.valueOf(int)</code> allows caching of values to be done by the compiler, class library, or JVM.
      Using of cached values avoids object allocation and the code will be faster.
      </p>
      <p>
      Values between -128 and 127 are guaranteed to have corresponding cached instances
      and using <code>valueOf</code> is approximately 3.5 times faster than using constructor.
      For values outside the constant range the performance of both styles is the same.
      </p>
      <p>
      Unless the class must be compatible with JVMs predating Java 1.5,
      use either autoboxing or the <code>valueOf()</code> method when creating instances of
      <code>Long</code>, <code>Integer</code>, <code>Short</code>, <code>Character</code>, and <code>Byte</code>.
      </p>
      
    ]]></Details>
  </BugPattern>
  <BugCode abbrev="Bx">
    <Description>Questionable Boxing of primitive value</Description>
  </BugCode>
  <BugCode abbrev="MS" cweid="218">
    <Description>Mutable static field</Description>
  </BugCode>
  <BugCode abbrev="HE">
    <Description>Equal objects must have equal hashcodes</Description>
  </BugCode>
  <Errors errors="0" missingClasses="0"></Errors>
  <FindBugsSummary timestamp="Wed, 14 Nov 2018 03:47:25 -0500" total_classes="1" referenced_classes="105" total_bugs="10" total_size="1343" num_packages="1" java_version="1.8.0_121" vm_version="25.121-b13" cpu_seconds="14.62" clock_seconds="7.69" peak_mbytes="194.41" alloc_mbytes="1820.50" gc_seconds="0.13" priority_2="8" priority_1="2">
    <FileStats path="org/jfree/chart/plot/CategoryPlot.java" bugCount="10" size="1343" bugHash="08159c4a89152055a8da369bc93e19d4"/>
    <PackageStats package="org.jfree.chart.plot" total_bugs="10" total_types="1" total_size="1343" priority_2="8" priority_1="2">
      <ClassStats class="org.jfree.chart.plot.CategoryPlot" sourceFile="CategoryPlot.java" interface="false" size="1343" bugs="10" priority_2="8" priority_1="2"/>
    </PackageStats>
    <FindBugsProfile>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine" totalMilliseconds="937" invocations="699" avgMicrosecondsPerInvocation="1340" maxMicrosecondsPerInvocation="37539" standardDeviationMicrosecondsPerInvocation="3279"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine" totalMilliseconds="613" invocations="693" avgMicrosecondsPerInvocation="884" maxMicrosecondsPerInvocation="88702" standardDeviationMicrosecondsPerInvocation="4131"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory" totalMilliseconds="340" invocations="160" avgMicrosecondsPerInvocation="2127" maxMicrosecondsPerInvocation="72446" standardDeviationMicrosecondsPerInvocation="6968"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory" totalMilliseconds="312" invocations="160" avgMicrosecondsPerInvocation="1952" maxMicrosecondsPerInvocation="56033" standardDeviationMicrosecondsPerInvocation="6617"/>
      <ClassProfile name="edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory" totalMilliseconds="302" invocations="404" avgMicrosecondsPerInvocation="748" maxMicrosecondsPerInvocation="26571" standardDeviationMicrosecondsPerInvocation="2434"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FieldItemSummary" totalMilliseconds="293" invocations="105" avgMicrosecondsPerInvocation="2791" maxMicrosecondsPerInvocation="40843" standardDeviationMicrosecondsPerInvocation="6384"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory" totalMilliseconds="269" invocations="168" avgMicrosecondsPerInvocation="1602" maxMicrosecondsPerInvocation="25033" standardDeviationMicrosecondsPerInvocation="3971"/>
      <ClassProfile name="edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder" totalMilliseconds="268" invocations="160" avgMicrosecondsPerInvocation="1680" maxMicrosecondsPerInvocation="37427" standardDeviationMicrosecondsPerInvocation="4739"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindNoSideEffectMethods" totalMilliseconds="256" invocations="105" avgMicrosecondsPerInvocation="2443" maxMicrosecondsPerInvocation="23985" standardDeviationMicrosecondsPerInvocation="5299"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory" totalMilliseconds="179" invocations="160" avgMicrosecondsPerInvocation="1120" maxMicrosecondsPerInvocation="22011" standardDeviationMicrosecondsPerInvocation="2703"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory" totalMilliseconds="138" invocations="160" avgMicrosecondsPerInvocation="867" maxMicrosecondsPerInvocation="18202" standardDeviationMicrosecondsPerInvocation="2064"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis" totalMilliseconds="134" invocations="128" avgMicrosecondsPerInvocation="1050" maxMicrosecondsPerInvocation="22432" standardDeviationMicrosecondsPerInvocation="3171"/>
      <ClassProfile name="edu.umd.cs.findbugs.util.TopologicalSort" totalMilliseconds="119" invocations="654" avgMicrosecondsPerInvocation="181" maxMicrosecondsPerInvocation="18853" standardDeviationMicrosecondsPerInvocation="950"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers" totalMilliseconds="90" invocations="105" avgMicrosecondsPerInvocation="859" maxMicrosecondsPerInvocation="15140" standardDeviationMicrosecondsPerInvocation="1974"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine" totalMilliseconds="90" invocations="153" avgMicrosecondsPerInvocation="589" maxMicrosecondsPerInvocation="47942" standardDeviationMicrosecondsPerInvocation="3914"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.NumberConstructor" totalMilliseconds="85" invocations="1" avgMicrosecondsPerInvocation="85842" maxMicrosecondsPerInvocation="85842" standardDeviationMicrosecondsPerInvocation="0"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase" totalMilliseconds="78" invocations="105" avgMicrosecondsPerInvocation="746" maxMicrosecondsPerInvocation="6701" standardDeviationMicrosecondsPerInvocation="1519"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical" totalMilliseconds="71" invocations="105" avgMicrosecondsPerInvocation="684" maxMicrosecondsPerInvocation="25977" standardDeviationMicrosecondsPerInvocation="2777"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindNullDeref" totalMilliseconds="70" invocations="1" avgMicrosecondsPerInvocation="70639" maxMicrosecondsPerInvocation="70639" standardDeviationMicrosecondsPerInvocation="0"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory" totalMilliseconds="70" invocations="160" avgMicrosecondsPerInvocation="439" maxMicrosecondsPerInvocation="42966" standardDeviationMicrosecondsPerInvocation="3389"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindOpenStream" totalMilliseconds="65" invocations="1" avgMicrosecondsPerInvocation="65884" maxMicrosecondsPerInvocation="65884" standardDeviationMicrosecondsPerInvocation="0"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.LiveLocalStoreDataflowFactory" totalMilliseconds="60" invocations="160" avgMicrosecondsPerInvocation="379" maxMicrosecondsPerInvocation="15122" standardDeviationMicrosecondsPerInvocation="1462"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.DumbMethods" totalMilliseconds="58" invocations="1" avgMicrosecondsPerInvocation="58312" maxMicrosecondsPerInvocation="58312" standardDeviationMicrosecondsPerInvocation="0"/>
    </FindBugsProfile>
  </FindBugsSummary>
  <ClassFeatures></ClassFeatures>
  <History></History>
</BugCollection>
