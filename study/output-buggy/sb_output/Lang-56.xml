<?xml version="1.0" encoding="UTF-8"?>

<BugCollection version="3.1.0" sequence="0" timestamp="1542186276000" analysisTimestamp="1542186279282" release="">
  <Project projectName="">
    <Jar>/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java</Jar>
    <AuxClasspathEntry>/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/target/classes</AuxClasspathEntry>
  </Project>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="5a539545ee3b200961f88f7ef542d5ae" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.lang.time.FastDateFormat.getDateInstance(int, TimeZone, Locale) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.apache.commons.lang.time.FastDateFormat" primary="true">
      <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" start="111" end="1017" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java">
        <Message>At FastDateFormat.java:[lines 111-1017]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.lang.time.FastDateFormat</Message>
    </Class>
    <Method classname="org.apache.commons.lang.time.FastDateFormat" name="getDateInstance" signature="(ILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang/time/FastDateFormat;" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" start="281" end="305" startBytecode="0" endBytecode="258" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java"/>
      <Message>In method org.apache.commons.lang.time.FastDateFormat.getDateInstance(int, TimeZone, Locale)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="849" end="851" startBytecode="0" endBytecode="41" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL">
      <SourceLine classname="java.lang.Integer" start="830" end="832" startBytecode="0" endBytecode="72" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" primary="true" start="281" end="281" startBytecode="5" endBytecode="5" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java">
      <Message>At FastDateFormat.java:[line 281]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="b184840e6dbd71bed0308a8d75560170" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.lang.time.FastDateFormat.getDateTimeInstance(int, int, TimeZone, Locale) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.apache.commons.lang.time.FastDateFormat" primary="true">
      <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" start="111" end="1017" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java">
        <Message>At FastDateFormat.java:[lines 111-1017]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.lang.time.FastDateFormat</Message>
    </Class>
    <Method classname="org.apache.commons.lang.time.FastDateFormat" name="getDateTimeInstance" signature="(IILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang/time/FastDateFormat;" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" start="461" end="486" startBytecode="0" endBytecode="281" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java"/>
      <Message>In method org.apache.commons.lang.time.FastDateFormat.getDateTimeInstance(int, int, TimeZone, Locale)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="849" end="851" startBytecode="0" endBytecode="41" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL">
      <SourceLine classname="java.lang.Integer" start="830" end="832" startBytecode="0" endBytecode="72" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" primary="true" start="461" end="461" startBytecode="9" endBytecode="9" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java">
      <Message>At FastDateFormat.java:[line 461]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NUMBER_CTOR" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="2d9f0c5da143d3acec515fddbe4d51bc" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage>
    <LongMessage>org.apache.commons.lang.time.FastDateFormat.getTimeInstance(int, TimeZone, Locale) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage>
    <Class classname="org.apache.commons.lang.time.FastDateFormat" primary="true">
      <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" start="111" end="1017" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java">
        <Message>At FastDateFormat.java:[lines 111-1017]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.lang.time.FastDateFormat</Message>
    </Class>
    <Method classname="org.apache.commons.lang.time.FastDateFormat" name="getTimeInstance" signature="(ILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang/time/FastDateFormat;" isStatic="true" primary="true">
      <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" start="367" end="391" startBytecode="0" endBytecode="258" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java"/>
      <Message>In method org.apache.commons.lang.time.FastDateFormat.getTimeInstance(int, TimeZone, Locale)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="&lt;init&gt;" signature="(I)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="849" end="851" startBytecode="0" endBytecode="41" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method new Integer(int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="SHOULD_CALL">
      <SourceLine classname="java.lang.Integer" start="830" end="832" startBytecode="0" endBytecode="72" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Should call Integer.valueOf(int) instead</Message>
    </Method>
    <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" primary="true" start="367" end="367" startBytecode="5" endBytecode="5" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java">
      <Message>At FastDateFormat.java:[line 367]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SE_BAD_FIELD" priority="2" rank="16" abbrev="Se" category="BAD_PRACTICE" instanceHash="ce7881a0de34ea7cbfb3d08512618a72" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage>
    <LongMessage>Class org.apache.commons.lang.time.FastDateFormat defines non-transient non-serializable instance field mRules</LongMessage>
    <Class classname="org.apache.commons.lang.time.FastDateFormat" primary="true">
      <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" start="111" end="1017" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java">
        <Message>At FastDateFormat.java:[lines 111-1017]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.lang.time.FastDateFormat</Message>
    </Class>
    <Field classname="org.apache.commons.lang.time.FastDateFormat" name="mRules" signature="[Lorg/apache/commons/lang/time/FastDateFormat$Rule;" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java">
        <Message>In FastDateFormat.java</Message>
      </SourceLine>
      <Message>Field org.apache.commons.lang.time.FastDateFormat.mRules</Message>
    </Field>
    <Type descriptor="Lorg/apache/commons/lang/time/FastDateFormat$Rule;" role="TYPE_FOUND">
      <SourceLine classname="org.apache.commons.lang.time.FastDateFormat$Rule" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java">
        <Message>In FastDateFormat.java</Message>
      </SourceLine>
      <Message>Actual type org.apache.commons.lang.time.FastDateFormat$Rule</Message>
    </Type>
    <SourceLine classname="org.apache.commons.lang.time.FastDateFormat" sourcefile="FastDateFormat.java" sourcepath="org/apache/commons/lang/time/FastDateFormat.java" synthetic="true">
      <Message>In FastDateFormat.java</Message>
    </SourceLine>
  </BugInstance>
  <BugCategory category="BAD_PRACTICE">
    <Description>Bad practice</Description>
  </BugCategory>
  <BugCategory category="PERFORMANCE">
    <Description>Performance</Description>
  </BugCategory>
  <BugPattern type="DM_NUMBER_CTOR" abbrev="Bx" category="PERFORMANCE">
    <ShortDescription>Method invokes inefficient Number constructor; use static valueOf instead</ShortDescription>
    <Details><![CDATA[
      
      <p>
      Using <code>new Integer(int)</code> is guaranteed to always result in a new object whereas
      <code>Integer.valueOf(int)</code> allows caching of values to be done by the compiler, class library, or JVM.
      Using of cached values avoids object allocation and the code will be faster.
      </p>
      <p>
      Values between -128 and 127 are guaranteed to have corresponding cached instances
      and using <code>valueOf</code> is approximately 3.5 times faster than using constructor.
      For values outside the constant range the performance of both styles is the same.
      </p>
      <p>
      Unless the class must be compatible with JVMs predating Java 1.5,
      use either autoboxing or the <code>valueOf()</code> method when creating instances of
      <code>Long</code>, <code>Integer</code>, <code>Short</code>, <code>Character</code>, and <code>Byte</code>.
      </p>
      
    ]]></Details>
  </BugPattern>
  <BugPattern type="SE_BAD_FIELD" abbrev="Se" category="BAD_PRACTICE">
    <ShortDescription>Non-transient non-serializable instance field in serializable class</ShortDescription>
    <Details><![CDATA[

<p> This Serializable class defines a non-primitive instance field which is neither transient,
Serializable, or <code>java.lang.Object</code>, and does not appear to implement
the <code>Externalizable</code> interface or the
<code>readObject()</code> and <code>writeObject()</code> methods.&nbsp;
Objects of this class will not be deserialized correctly if a non-Serializable
object is stored in this field.</p>

    ]]></Details>
  </BugPattern>
  <BugCode abbrev="Se">
    <Description>Incorrect definition of Serializable class</Description>
  </BugCode>
  <BugCode abbrev="Bx">
    <Description>Questionable Boxing of primitive value</Description>
  </BugCode>
  <Errors errors="0" missingClasses="0"></Errors>
  <FindBugsSummary timestamp="Wed, 14 Nov 2018 04:04:36 -0500" total_classes="18" referenced_classes="56" total_bugs="4" total_size="632" num_packages="1" java_version="1.8.0_121" vm_version="25.121-b13" cpu_seconds="9.30" clock_seconds="5.40" peak_mbytes="125.64" alloc_mbytes="1820.50" gc_seconds="0.08" priority_2="4">
    <FileStats path="org/apache/commons/lang/time/FastDateFormat.java" bugCount="4" size="632" bugHash="fbc92a9f8abf0f7a048556e46aad0b04"/>
    <PackageStats package="org.apache.commons.lang.time" total_bugs="4" total_types="18" total_size="632" priority_2="4">
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat" sourceFile="FastDateFormat.java" interface="false" size="325" bugs="4" priority_2="4"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$CharacterLiteral" sourceFile="FastDateFormat.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$NumberRule" sourceFile="FastDateFormat.java" interface="true" size="2" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$PaddedNumberField" sourceFile="FastDateFormat.java" interface="false" size="29" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$Pair" sourceFile="FastDateFormat.java" interface="false" size="23" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$Rule" sourceFile="FastDateFormat.java" interface="true" size="3" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$StringLiteral" sourceFile="FastDateFormat.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$TextField" sourceFile="FastDateFormat.java" interface="false" size="19" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$TimeZoneDisplayKey" sourceFile="FastDateFormat.java" interface="false" size="23" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$TimeZoneNameRule" sourceFile="FastDateFormat.java" interface="false" size="35" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$TimeZoneNumberRule" sourceFile="FastDateFormat.java" interface="false" size="28" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$TwelveHourField" sourceFile="FastDateFormat.java" interface="false" size="17" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$TwentyFourHourField" sourceFile="FastDateFormat.java" interface="false" size="17" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$TwoDigitMonthField" sourceFile="FastDateFormat.java" interface="false" size="16" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$TwoDigitNumberField" sourceFile="FastDateFormat.java" interface="false" size="17" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$TwoDigitYearField" sourceFile="FastDateFormat.java" interface="false" size="16" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$UnpaddedMonthField" sourceFile="FastDateFormat.java" interface="false" size="18" bugs="0"/>
      <ClassStats class="org.apache.commons.lang.time.FastDateFormat$UnpaddedNumberField" sourceFile="FastDateFormat.java" interface="false" size="22" bugs="0"/>
    </PackageStats>
    <FindBugsProfile>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine" totalMilliseconds="658" invocations="458" avgMicrosecondsPerInvocation="1436" maxMicrosecondsPerInvocation="47747" standardDeviationMicrosecondsPerInvocation="4481"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine" totalMilliseconds="642" invocations="463" avgMicrosecondsPerInvocation="1387" maxMicrosecondsPerInvocation="35168" standardDeviationMicrosecondsPerInvocation="3314"/>
      <ClassProfile name="edu.umd.cs.findbugs.util.TopologicalSort" totalMilliseconds="214" invocations="425" avgMicrosecondsPerInvocation="503" maxMicrosecondsPerInvocation="29981" standardDeviationMicrosecondsPerInvocation="2794"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FieldItemSummary" totalMilliseconds="188" invocations="56" avgMicrosecondsPerInvocation="3363" maxMicrosecondsPerInvocation="38867" standardDeviationMicrosecondsPerInvocation="7189"/>
      <ClassProfile name="edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory" totalMilliseconds="180" invocations="194" avgMicrosecondsPerInvocation="931" maxMicrosecondsPerInvocation="26449" standardDeviationMicrosecondsPerInvocation="3028"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindNoSideEffectMethods" totalMilliseconds="170" invocations="56" avgMicrosecondsPerInvocation="3041" maxMicrosecondsPerInvocation="58589" standardDeviationMicrosecondsPerInvocation="8398"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory" totalMilliseconds="166" invocations="43" avgMicrosecondsPerInvocation="3882" maxMicrosecondsPerInvocation="69019" standardDeviationMicrosecondsPerInvocation="11300"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory" totalMilliseconds="141" invocations="42" avgMicrosecondsPerInvocation="3376" maxMicrosecondsPerInvocation="56895" standardDeviationMicrosecondsPerInvocation="10592"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory" totalMilliseconds="141" invocations="42" avgMicrosecondsPerInvocation="3360" maxMicrosecondsPerInvocation="128266" standardDeviationMicrosecondsPerInvocation="19512"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory" totalMilliseconds="130" invocations="42" avgMicrosecondsPerInvocation="3115" maxMicrosecondsPerInvocation="25523" standardDeviationMicrosecondsPerInvocation="6284"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine" totalMilliseconds="118" invocations="85" avgMicrosecondsPerInvocation="1394" maxMicrosecondsPerInvocation="63525" standardDeviationMicrosecondsPerInvocation="7145"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical" totalMilliseconds="96" invocations="56" avgMicrosecondsPerInvocation="1720" maxMicrosecondsPerInvocation="39795" standardDeviationMicrosecondsPerInvocation="5658"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory" totalMilliseconds="95" invocations="42" avgMicrosecondsPerInvocation="2277" maxMicrosecondsPerInvocation="26232" standardDeviationMicrosecondsPerInvocation="5973"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory" totalMilliseconds="80" invocations="42" avgMicrosecondsPerInvocation="1923" maxMicrosecondsPerInvocation="19447" standardDeviationMicrosecondsPerInvocation="3594"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis" totalMilliseconds="73" invocations="37" avgMicrosecondsPerInvocation="1975" maxMicrosecondsPerInvocation="35851" standardDeviationMicrosecondsPerInvocation="6480"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers" totalMilliseconds="71" invocations="56" avgMicrosecondsPerInvocation="1283" maxMicrosecondsPerInvocation="20133" standardDeviationMicrosecondsPerInvocation="3122"/>
      <ClassProfile name="edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder" totalMilliseconds="66" invocations="42" avgMicrosecondsPerInvocation="1594" maxMicrosecondsPerInvocation="20538" standardDeviationMicrosecondsPerInvocation="4250"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.NoteNonnullReturnValues" totalMilliseconds="56" invocations="1" avgMicrosecondsPerInvocation="56829" maxMicrosecondsPerInvocation="56829" standardDeviationMicrosecondsPerInvocation="0"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase" totalMilliseconds="53" invocations="56" avgMicrosecondsPerInvocation="953" maxMicrosecondsPerInvocation="14398" standardDeviationMicrosecondsPerInvocation="2295"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.URLProblems" totalMilliseconds="52" invocations="1" avgMicrosecondsPerInvocation="52518" maxMicrosecondsPerInvocation="52518" standardDeviationMicrosecondsPerInvocation="0"/>
    </FindBugsProfile>
  </FindBugsSummary>
  <ClassFeatures></ClassFeatures>
  <History></History>
</BugCollection>
