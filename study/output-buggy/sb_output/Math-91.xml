<?xml version="1.0" encoding="UTF-8"?>

<BugCollection version="3.1.0" sequence="0" timestamp="1542186782000" analysisTimestamp="1542186785165" release="">
  <Project projectName="">
    <Jar>/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-91/src/java</Jar>
    <AuxClasspathEntry>/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-91/target/classes</AuxClasspathEntry>
  </Project>
  <BugInstance type="CO_COMPARETO_INCORRECT_FLOATING" priority="2" rank="16" abbrev="Co" category="BAD_PRACTICE" instanceHash="47aac098ffbe34569b71b962ce5e1ad5" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>compareTo()/compare() incorrectly handles float or double value</ShortMessage>
    <LongMessage>org.apache.commons.math.fraction.Fraction.compareTo(Fraction) incorrectly handles double value</LongMessage>
    <Class classname="org.apache.commons.math.fraction.Fraction" primary="true">
      <SourceLine classname="org.apache.commons.math.fraction.Fraction" start="30" end="547" sourcefile="Fraction.java" sourcepath="org/apache/commons/math/fraction/Fraction.java">
        <Message>At Fraction.java:[lines 30-547]</Message>
      </SourceLine>
      <Message>In class org.apache.commons.math.fraction.Fraction</Message>
    </Class>
    <Method classname="org.apache.commons.math.fraction.Fraction" name="compareTo" signature="(Lorg/apache/commons/math/fraction/Fraction;)I" isStatic="false" primary="true">
      <SourceLine classname="org.apache.commons.math.fraction.Fraction" start="259" end="261" startBytecode="0" endBytecode="82" sourcefile="Fraction.java" sourcepath="org/apache/commons/math/fraction/Fraction.java"/>
      <Message>In method org.apache.commons.math.fraction.Fraction.compareTo(Fraction)</Message>
    </Method>
    <Type descriptor="D">
      <Message>Type double</Message>
    </Type>
    <Method classname="java.lang.Double" name="compare" signature="(DD)I" isStatic="true" role="SHOULD_CALL">
      <SourceLine classname="java.lang.Double" start="1000" end="1009" startBytecode="0" endBytecode="119" sourcefile="Double.java" sourcepath="java/lang/Double.java"/>
      <Message>Should call Double.compare(double, double) instead</Message>
    </Method>
    <Method classname="org.apache.commons.math.fraction.Fraction" name="doubleValue" signature="()D" isStatic="false" role="METHOD_RETURN_VALUE_OF">
      <SourceLine classname="org.apache.commons.math.fraction.Fraction" start="270" end="270" startBytecode="0" endBytecode="35" sourcefile="Fraction.java" sourcepath="org/apache/commons/math/fraction/Fraction.java"/>
      <Message>Return value of org.apache.commons.math.fraction.Fraction.doubleValue() of type double</Message>
    </Method>
    <Method classname="org.apache.commons.math.fraction.Fraction" name="doubleValue" signature="()D" isStatic="false" role="METHOD_RETURN_VALUE_OF">
      <SourceLine classname="org.apache.commons.math.fraction.Fraction" start="270" end="270" startBytecode="0" endBytecode="35" sourcefile="Fraction.java" sourcepath="org/apache/commons/math/fraction/Fraction.java"/>
      <Message>Return value of org.apache.commons.math.fraction.Fraction.doubleValue() of type double</Message>
    </Method>
    <SourceLine classname="org.apache.commons.math.fraction.Fraction" primary="true" start="261" end="261" startBytecode="25" endBytecode="25" sourcefile="Fraction.java" sourcepath="org/apache/commons/math/fraction/Fraction.java">
      <Message>At Fraction.java:[line 261]</Message>
    </SourceLine>
  </BugInstance>
  <BugCategory category="BAD_PRACTICE">
    <Description>Bad practice</Description>
  </BugCategory>
  <BugPattern type="CO_COMPARETO_INCORRECT_FLOATING" abbrev="Co" category="BAD_PRACTICE">
    <ShortDescription>compareTo()/compare() incorrectly handles float or double value</ShortDescription>
    <Details><![CDATA[

  <p>This method compares double or float values using pattern like this: val1 &gt; val2 ? 1 : val1 &lt; val2 ? -1 : 0.
This pattern works incorrectly for -0.0 and NaN values which may result in incorrect sorting result or broken collection
(if compared values are used as keys). Consider using Double.compare or Float.compare static methods which handle all
the special cases correctly.</p>

    ]]></Details>
  </BugPattern>
  <BugCode abbrev="Co">
    <Description>Problems with implementation of compareTo()</Description>
  </BugCode>
  <Errors errors="0" missingClasses="0"></Errors>
  <FindBugsSummary timestamp="Wed, 14 Nov 2018 04:13:02 -0500" total_classes="1" referenced_classes="20" total_bugs="1" total_size="196" num_packages="1" java_version="1.8.0_121" vm_version="25.121-b13" cpu_seconds="7.70" clock_seconds="3.94" peak_mbytes="125.66" alloc_mbytes="1820.50" gc_seconds="0.04" priority_2="1">
    <FileStats path="org/apache/commons/math/fraction/Fraction.java" bugCount="1" size="196" bugHash="5fb6cf651a2056b997e0323061cdd900"/>
    <PackageStats package="org.apache.commons.math.fraction" total_bugs="1" total_types="1" total_size="196" priority_2="1">
      <ClassStats class="org.apache.commons.math.fraction.Fraction" sourceFile="Fraction.java" interface="false" size="196" bugs="1" priority_2="1"/>
    </PackageStats>
    <FindBugsProfile>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine" totalMilliseconds="435" invocations="348" avgMicrosecondsPerInvocation="1250" maxMicrosecondsPerInvocation="34960" standardDeviationMicrosecondsPerInvocation="4005"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine" totalMilliseconds="394" invocations="352" avgMicrosecondsPerInvocation="1120" maxMicrosecondsPerInvocation="12416" standardDeviationMicrosecondsPerInvocation="1528"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory" totalMilliseconds="175" invocations="26" avgMicrosecondsPerInvocation="6757" maxMicrosecondsPerInvocation="86795" standardDeviationMicrosecondsPerInvocation="17890"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FieldItemSummary" totalMilliseconds="171" invocations="20" avgMicrosecondsPerInvocation="8573" maxMicrosecondsPerInvocation="60391" standardDeviationMicrosecondsPerInvocation="16906"/>
      <ClassProfile name="edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory" totalMilliseconds="156" invocations="150" avgMicrosecondsPerInvocation="1040" maxMicrosecondsPerInvocation="21073" standardDeviationMicrosecondsPerInvocation="2341"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory" totalMilliseconds="119" invocations="25" avgMicrosecondsPerInvocation="4764" maxMicrosecondsPerInvocation="63620" standardDeviationMicrosecondsPerInvocation="12979"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory" totalMilliseconds="97" invocations="25" avgMicrosecondsPerInvocation="3901" maxMicrosecondsPerInvocation="24870" standardDeviationMicrosecondsPerInvocation="7123"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindNoSideEffectMethods" totalMilliseconds="86" invocations="20" avgMicrosecondsPerInvocation="4346" maxMicrosecondsPerInvocation="47940" standardDeviationMicrosecondsPerInvocation="10323"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory" totalMilliseconds="82" invocations="25" avgMicrosecondsPerInvocation="3293" maxMicrosecondsPerInvocation="74204" standardDeviationMicrosecondsPerInvocation="14480"/>
      <ClassProfile name="edu.umd.cs.findbugs.util.TopologicalSort" totalMilliseconds="71" invocations="314" avgMicrosecondsPerInvocation="227" maxMicrosecondsPerInvocation="14286" standardDeviationMicrosecondsPerInvocation="865"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory" totalMilliseconds="64" invocations="26" avgMicrosecondsPerInvocation="2497" maxMicrosecondsPerInvocation="20785" standardDeviationMicrosecondsPerInvocation="4704"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory" totalMilliseconds="60" invocations="25" avgMicrosecondsPerInvocation="2403" maxMicrosecondsPerInvocation="19269" standardDeviationMicrosecondsPerInvocation="4420"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.ExplicitSerialization" totalMilliseconds="55" invocations="20" avgMicrosecondsPerInvocation="2768" maxMicrosecondsPerInvocation="52899" standardDeviationMicrosecondsPerInvocation="11511"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine" totalMilliseconds="54" invocations="39" avgMicrosecondsPerInvocation="1398" maxMicrosecondsPerInvocation="26020" standardDeviationMicrosecondsPerInvocation="4373"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase" totalMilliseconds="51" invocations="20" avgMicrosecondsPerInvocation="2572" maxMicrosecondsPerInvocation="36886" standardDeviationMicrosecondsPerInvocation="7938"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures" totalMilliseconds="50" invocations="20" avgMicrosecondsPerInvocation="2530" maxMicrosecondsPerInvocation="24712" standardDeviationMicrosecondsPerInvocation="5579"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers" totalMilliseconds="48" invocations="20" avgMicrosecondsPerInvocation="2438" maxMicrosecondsPerInvocation="14697" standardDeviationMicrosecondsPerInvocation="4160"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.CheckRelaxingNullnessAnnotation" totalMilliseconds="47" invocations="1" avgMicrosecondsPerInvocation="47051" maxMicrosecondsPerInvocation="47051" standardDeviationMicrosecondsPerInvocation="0"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ConstantDataflowFactory" totalMilliseconds="46" invocations="25" avgMicrosecondsPerInvocation="1848" maxMicrosecondsPerInvocation="34165" standardDeviationMicrosecondsPerInvocation="6663"/>
    </FindBugsProfile>
  </FindBugsSummary>
  <ClassFeatures></ClassFeatures>
  <History></History>
</BugCollection>
