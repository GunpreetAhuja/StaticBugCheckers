Running Errorprone on: Chart-10

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-10/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-10/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-10/source/org/jfree/chart/imagemap/StandardToolTipTagFragmentGenerator.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-10/source/org/jfree/chart/imagemap/StandardToolTipTagFragmentGenerator.java:64: warning: [MissingOverride] generateToolTipFragment implements method in ToolTipTagFragmentGenerator; expected @Override
    public String generateToolTipFragment(String toolTipText) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String generateToolTipFragment(String toolTipText) {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-1

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:266: warning: [MissingOverride] getPassCount implements method in CategoryItemRenderer; expected @Override
    public int getPassCount() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getPassCount() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:279: warning: [MissingOverride] getPlot implements method in CategoryItemRenderer; expected @Override
    public CategoryPlot getPlot() {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public CategoryPlot getPlot() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:292: warning: [MissingOverride] setPlot implements method in CategoryItemRenderer; expected @Override
    public void setPlot(CategoryPlot plot) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setPlot(CategoryPlot plot) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:315: warning: [MissingOverride] getItemLabelGenerator implements method in CategoryItemRenderer; expected @Override
    public CategoryItemLabelGenerator getItemLabelGenerator(int row,
                                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public CategoryItemLabelGenerator getItemLabelGenerator(int row,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:334: warning: [MissingOverride] getSeriesItemLabelGenerator implements method in CategoryItemRenderer; expected @Override
    public CategoryItemLabelGenerator getSeriesItemLabelGenerator(int series) {
                                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public CategoryItemLabelGenerator getSeriesItemLabelGenerator(int series) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:348: warning: [MissingOverride] setSeriesItemLabelGenerator implements method in CategoryItemRenderer; expected @Override
    public void setSeriesItemLabelGenerator(int series,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setSeriesItemLabelGenerator(int series,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:365: warning: [MissingOverride] setSeriesItemLabelGenerator implements method in CategoryItemRenderer; expected @Override
    public void setSeriesItemLabelGenerator(int series,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setSeriesItemLabelGenerator(int series,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:380: warning: [MissingOverride] getBaseItemLabelGenerator implements method in CategoryItemRenderer; expected @Override
    public CategoryItemLabelGenerator getBaseItemLabelGenerator() {
                                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public CategoryItemLabelGenerator getBaseItemLabelGenerator() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:392: warning: [MissingOverride] setBaseItemLabelGenerator implements method in CategoryItemRenderer; expected @Override
    public void setBaseItemLabelGenerator(
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setBaseItemLabelGenerator('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:408: warning: [MissingOverride] setBaseItemLabelGenerator implements method in CategoryItemRenderer; expected @Override
    public void setBaseItemLabelGenerator(
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setBaseItemLabelGenerator('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:431: warning: [MissingOverride] getToolTipGenerator implements method in CategoryItemRenderer; expected @Override
    public CategoryToolTipGenerator getToolTipGenerator(int row, int column,
                                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public CategoryToolTipGenerator getToolTipGenerator(int row, int column,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:452: warning: [MissingOverride] getSeriesToolTipGenerator implements method in CategoryItemRenderer; expected @Override
    public CategoryToolTipGenerator getSeriesToolTipGenerator(int series) {
                                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public CategoryToolTipGenerator getSeriesToolTipGenerator(int series) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:465: warning: [MissingOverride] setSeriesToolTipGenerator implements method in CategoryItemRenderer; expected @Override
    public void setSeriesToolTipGenerator(int series,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setSeriesToolTipGenerator(int series,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:483: warning: [MissingOverride] setSeriesToolTipGenerator implements method in CategoryItemRenderer; expected @Override
    public void setSeriesToolTipGenerator(int series,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setSeriesToolTipGenerator(int series,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:498: warning: [MissingOverride] getBaseToolTipGenerator implements method in CategoryItemRenderer; expected @Override
    public CategoryToolTipGenerator getBaseToolTipGenerator() {
                                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public CategoryToolTipGenerator getBaseToolTipGenerator() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:510: warning: [MissingOverride] setBaseToolTipGenerator implements method in CategoryItemRenderer; expected @Override
    public void setBaseToolTipGenerator(CategoryToolTipGenerator generator) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setBaseToolTipGenerator(CategoryToolTipGenerator generator) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:525: warning: [MissingOverride] setBaseToolTipGenerator implements method in CategoryItemRenderer; expected @Override
    public void setBaseToolTipGenerator(CategoryToolTipGenerator generator,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setBaseToolTipGenerator(CategoryToolTipGenerator generator,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:546: warning: [MissingOverride] getURLGenerator implements method in CategoryItemRenderer; expected @Override
    public CategoryURLGenerator getURLGenerator(int row, int column, boolean
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public CategoryURLGenerator getURLGenerator(int row, int column, boolean'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:565: warning: [MissingOverride] getSeriesURLGenerator implements method in CategoryItemRenderer; expected @Override
    public CategoryURLGenerator getSeriesURLGenerator(int series) {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public CategoryURLGenerator getSeriesURLGenerator(int series) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:578: warning: [MissingOverride] setSeriesURLGenerator implements method in CategoryItemRenderer; expected @Override
    public void setSeriesURLGenerator(int series,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setSeriesURLGenerator(int series,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:595: warning: [MissingOverride] setSeriesURLGenerator implements method in CategoryItemRenderer; expected @Override
    public void setSeriesURLGenerator(int series,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setSeriesURLGenerator(int series,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:610: warning: [MissingOverride] getBaseURLGenerator implements method in CategoryItemRenderer; expected @Override
    public CategoryURLGenerator getBaseURLGenerator() {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public CategoryURLGenerator getBaseURLGenerator() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:621: warning: [MissingOverride] setBaseURLGenerator implements method in CategoryItemRenderer; expected @Override
    public void setBaseURLGenerator(CategoryURLGenerator generator) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setBaseURLGenerator(CategoryURLGenerator generator) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:635: warning: [MissingOverride] setBaseURLGenerator implements method in CategoryItemRenderer; expected @Override
    public void setBaseURLGenerator(CategoryURLGenerator generator,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setBaseURLGenerator(CategoryURLGenerator generator,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:654: warning: [MissingOverride] addAnnotation implements method in CategoryItemRenderer; expected @Override
    public void addAnnotation(CategoryAnnotation annotation) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void addAnnotation(CategoryAnnotation annotation) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:667: warning: [MissingOverride] addAnnotation implements method in CategoryItemRenderer; expected @Override
    public void addAnnotation(CategoryAnnotation annotation, Layer layer) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void addAnnotation(CategoryAnnotation annotation, Layer layer) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:696: warning: [MissingOverride] removeAnnotation implements method in CategoryItemRenderer; expected @Override
    public boolean removeAnnotation(CategoryAnnotation annotation) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean removeAnnotation(CategoryAnnotation annotation) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:698: warning: [ShortCircuitBoolean] Prefer the short-circuiting boolean operators && and || to & and |.
        removed = removed & this.backgroundAnnotations.remove(annotation);
                          ^
    (see http://errorprone.info/bugpattern/ShortCircuitBoolean)
  Did you mean 'removed = removed && this.backgroundAnnotations.remove(annotation);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:709: warning: [MissingOverride] removeAnnotations implements method in CategoryItemRenderer; expected @Override
    public void removeAnnotations() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void removeAnnotations() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:722: warning: [MissingOverride] getLegendItemLabelGenerator implements method in CategoryItemRenderer; expected @Override
    public CategorySeriesLabelGenerator getLegendItemLabelGenerator() {
                                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public CategorySeriesLabelGenerator getLegendItemLabelGenerator() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:734: warning: [MissingOverride] setLegendItemLabelGenerator implements method in CategoryItemRenderer; expected @Override
    public void setLegendItemLabelGenerator(
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setLegendItemLabelGenerator('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:750: warning: [MissingOverride] getLegendItemToolTipGenerator implements method in CategoryItemRenderer; expected @Override
    public CategorySeriesLabelGenerator getLegendItemToolTipGenerator() {
                                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public CategorySeriesLabelGenerator getLegendItemToolTipGenerator() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:762: warning: [MissingOverride] setLegendItemToolTipGenerator implements method in CategoryItemRenderer; expected @Override
    public void setLegendItemToolTipGenerator(
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setLegendItemToolTipGenerator('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:775: warning: [MissingOverride] getLegendItemURLGenerator implements method in CategoryItemRenderer; expected @Override
    public CategorySeriesLabelGenerator getLegendItemURLGenerator() {
                                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public CategorySeriesLabelGenerator getLegendItemURLGenerator() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:787: warning: [MissingOverride] setLegendItemURLGenerator implements method in CategoryItemRenderer; expected @Override
    public void setLegendItemURLGenerator(
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setLegendItemURLGenerator('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:856: warning: [MissingOverride] initialise implements method in CategoryItemRenderer; expected @Override
    public CategoryItemRendererState initialise(Graphics2D g2,
                                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public CategoryItemRendererState initialise(Graphics2D g2,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:901: warning: [MissingOverride] findRangeBounds implements method in CategoryItemRenderer; expected @Override
    public Range findRangeBounds(CategoryDataset dataset) {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Range findRangeBounds(CategoryDataset dataset) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:952: warning: [MissingOverride] getItemMiddle implements method in CategoryItemRenderer; expected @Override
    public double getItemMiddle(Comparable rowKey, Comparable columnKey,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getItemMiddle(Comparable rowKey, Comparable columnKey,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:968: warning: [MissingOverride] drawBackground implements method in CategoryItemRenderer; expected @Override
    public void drawBackground(Graphics2D g2,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void drawBackground(Graphics2D g2,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:985: warning: [MissingOverride] drawOutline implements method in CategoryItemRenderer; expected @Override
    public void drawOutline(Graphics2D g2,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void drawOutline(Graphics2D g2,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1013: warning: [MissingOverride] drawDomainLine implements method in CategoryItemRenderer; expected @Override
    public void drawDomainLine(Graphics2D g2, CategoryPlot plot,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void drawDomainLine(Graphics2D g2, CategoryPlot plot,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1025: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (orientation == PlotOrientation.HORIZONTAL) {
                        ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.HORIZONTAL)) {' or 'if (orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1029: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (orientation == PlotOrientation.VERTICAL) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(orientation, PlotOrientation.VERTICAL)) {' or 'else if (orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1056: warning: [MissingOverride] drawRangeLine implements method in CategoryItemRenderer; expected @Override
    public void drawRangeLine(Graphics2D g2, CategoryPlot plot, ValueAxis axis,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void drawRangeLine(Graphics2D g2, CategoryPlot plot, ValueAxis axis,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1067: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (orientation == PlotOrientation.HORIZONTAL) {
                        ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.HORIZONTAL)) {' or 'if (orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1071: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (orientation == PlotOrientation.VERTICAL) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(orientation, PlotOrientation.VERTICAL)) {' or 'else if (orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1094: warning: [MissingOverride] drawDomainMarker implements method in CategoryItemRenderer; expected @Override
    public void drawDomainMarker(Graphics2D g2,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void drawDomainMarker(Graphics2D g2,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1118: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (orientation == PlotOrientation.HORIZONTAL) {
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.HORIZONTAL)) {' or 'if (orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1122: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (orientation == PlotOrientation.VERTICAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(orientation, PlotOrientation.VERTICAL)) {' or 'else if (orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1139: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (orientation == PlotOrientation.HORIZONTAL) {
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.HORIZONTAL)) {' or 'if (orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1143: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (orientation == PlotOrientation.VERTICAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(orientation, PlotOrientation.VERTICAL)) {' or 'else if (orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1180: warning: [MissingOverride] drawRangeMarker implements method in CategoryItemRenderer; expected @Override
    public void drawRangeMarker(Graphics2D g2,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void drawRangeMarker(Graphics2D g2,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1203: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (orientation == PlotOrientation.HORIZONTAL) {
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.HORIZONTAL)) {' or 'if (orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1207: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (orientation == PlotOrientation.VERTICAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(orientation, PlotOrientation.VERTICAL)) {' or 'else if (orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1254: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (orientation == PlotOrientation.HORIZONTAL) {
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.HORIZONTAL)) {' or 'if (orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1262: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (orientation == PlotOrientation.VERTICAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(orientation, PlotOrientation.VERTICAL)) {' or 'else if (orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1286: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (orientation == PlotOrientation.VERTICAL) {
                                ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.VERTICAL)) {' or 'if (orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1359: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (orientation == PlotOrientation.HORIZONTAL) {
                        ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.HORIZONTAL)) {' or 'if (orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1363: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (orientation == PlotOrientation.VERTICAL) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(orientation, PlotOrientation.VERTICAL)) {' or 'else if (orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1393: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (orientation == PlotOrientation.HORIZONTAL) {
                        ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.HORIZONTAL)) {' or 'if (orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1397: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (orientation == PlotOrientation.VERTICAL) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(orientation, PlotOrientation.VERTICAL)) {' or 'else if (orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1417: warning: [MissingOverride] getLegendItem implements method in CategoryItemRenderer; expected @Override
    public LegendItem getLegendItem(int datasetIndex, int series) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public LegendItem getLegendItem(int datasetIndex, int series) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1469: warning: [MissingOverride] equals overrides method in AbstractRenderer; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1531: warning: [MissingOverride] hashCode overrides method in AbstractRenderer; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1541: warning: [MissingOverride] getDrawingSupplier implements method in AbstractRenderer; expected @Override
    public DrawingSupplier getDrawingSupplier() {
                           ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DrawingSupplier getDrawingSupplier() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1647: warning: [MissingOverride] drawAnnotations implements method in CategoryItemRenderer; expected @Override
    public void drawAnnotations(Graphics2D g2, Rectangle2D dataArea,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void drawAnnotations(Graphics2D g2, Rectangle2D dataArea,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1680: warning: [MissingOverride] clone overrides method in AbstractRenderer; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1790: warning: [MissingOverride] getLegendItems implements method in LegendItemSource; expected @Override
    public LegendItemCollection getLegendItems() {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public LegendItemCollection getLegendItems() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1872: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (getPlot().getOrientation() == PlotOrientation.VERTICAL) {
                                           ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(getPlot().getOrientation(), PlotOrientation.VERTICAL)) {' or 'if (getPlot().getOrientation().equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1912: warning: [MissingOverride] createHotSpotShape implements method in CategoryItemRenderer; expected @Override
    public Shape createHotSpotShape(Graphics2D g2, Rectangle2D dataArea,
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Shape createHotSpotShape(Graphics2D g2, Rectangle2D dataArea,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1937: warning: [MissingOverride] createHotSpotBounds implements method in CategoryItemRenderer; expected @Override
    public Rectangle2D createHotSpotBounds(Graphics2D g2, Rectangle2D dataArea,
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Rectangle2D createHotSpotBounds(Graphics2D g2, Rectangle2D dataArea,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java:1979: warning: [MissingOverride] hitTest implements method in CategoryItemRenderer; expected @Override
    public boolean hitTest(double xx, double yy, Graphics2D g2,
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean hitTest(double xx, double yy, Graphics2D g2,'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-1/source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
72 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-11

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-11/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-11/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-11/source/org/jfree/chart/util/ShapeUtilities.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-12

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-12/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-12/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-12/source/org/jfree/chart/plot/MultiplePiePlot.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-12/source/org/jfree/chart/plot/MultiplePiePlot.java:561: warning: [EqualsHashCode] Classes that override equals should also override hashCode.
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/EqualsHashCode)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-12/source/org/jfree/chart/plot/MultiplePiePlot.java:329: warning: [MissingOverride] getPlotType implements method in Plot; expected @Override
    public String getPlotType() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getPlotType() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-12/source/org/jfree/chart/plot/MultiplePiePlot.java:344: warning: [MissingOverride] draw implements method in Plot; expected @Override
    public void draw(Graphics2D g2,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void draw(Graphics2D g2,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-12/source/org/jfree/chart/plot/MultiplePiePlot.java:364: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.dataExtractOrder == TableOrder.BY_ROW) {
                                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.dataExtractOrder, TableOrder.BY_ROW)) {' or 'if (this.dataExtractOrder.equals(TableOrder.BY_ROW)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-12/source/org/jfree/chart/plot/MultiplePiePlot.java:400: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (this.dataExtractOrder == TableOrder.BY_ROW) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.dataExtractOrder, TableOrder.BY_ROW)) {' or 'if (this.dataExtractOrder.equals(TableOrder.BY_ROW)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-12/source/org/jfree/chart/plot/MultiplePiePlot.java:473: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.dataExtractOrder == TableOrder.BY_ROW) {
                                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.dataExtractOrder, TableOrder.BY_ROW)) {' or 'if (this.dataExtractOrder.equals(TableOrder.BY_ROW)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-12/source/org/jfree/chart/plot/MultiplePiePlot.java:509: warning: [MissingOverride] getLegendItems overrides method in Plot; expected @Override
    public LegendItemCollection getLegendItems() {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public LegendItemCollection getLegendItems() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-12/source/org/jfree/chart/plot/MultiplePiePlot.java:517: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (this.dataExtractOrder == TableOrder.BY_ROW) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.dataExtractOrder, TableOrder.BY_ROW)) {' or 'if (this.dataExtractOrder.equals(TableOrder.BY_ROW)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-12/source/org/jfree/chart/plot/MultiplePiePlot.java:520: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (this.dataExtractOrder == TableOrder.BY_COLUMN) {
                                           ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.dataExtractOrder, TableOrder.BY_COLUMN)) {' or 'else if (this.dataExtractOrder.equals(TableOrder.BY_COLUMN)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-12/source/org/jfree/chart/plot/MultiplePiePlot.java:561: warning: [MissingOverride] equals overrides method in Plot; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-12/source/org/jfree/chart/plot/MultiplePiePlot.java:569: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.dataExtractOrder != that.dataExtractOrder) {
                                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.dataExtractOrder, that.dataExtractOrder)) {' or 'if (!this.dataExtractOrder.equals(that.dataExtractOrder)) {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-12/source/org/jfree/chart/plot/MultiplePiePlot.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
11 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-13

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:509: warning: [EqualsHashCode] Classes that override equals should also override hashCode.
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/EqualsHashCode)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:96: warning: [MissingOverride] add implements method in Arrangement; expected @Override
    public void add(Block block, Object key) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void add(Block block, Object key) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:103: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (edge == RectangleEdge.TOP) {
                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (edge.equals(RectangleEdge.TOP)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:106: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (edge == RectangleEdge.BOTTOM) {
                          ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (edge.equals(RectangleEdge.BOTTOM)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:109: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (edge == RectangleEdge.LEFT) {
                          ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (edge.equals(RectangleEdge.LEFT)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:112: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (edge == RectangleEdge.RIGHT) {
                          ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (edge.equals(RectangleEdge.RIGHT)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:128: warning: [MissingOverride] arrange implements method in Arrangement; expected @Override
    public Size2D arrange(BlockContainer container,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Size2D arrange(BlockContainer container,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:136: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (w == LengthConstraintType.NONE) {
              ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(w, LengthConstraintType.NONE)) {' or 'if (w.equals(LengthConstraintType.NONE)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:137: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (h == LengthConstraintType.NONE) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(h, LengthConstraintType.NONE)) {' or 'if (h.equals(LengthConstraintType.NONE)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:140: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (h == LengthConstraintType.FIXED) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(h, LengthConstraintType.FIXED)) {' or 'else if (h.equals(LengthConstraintType.FIXED)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:143: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (h == LengthConstraintType.RANGE) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(h, LengthConstraintType.RANGE)) {' or 'else if (h.equals(LengthConstraintType.RANGE)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:147: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (w == LengthConstraintType.FIXED) {
                   ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(w, LengthConstraintType.FIXED)) {' or 'else if (w.equals(LengthConstraintType.FIXED)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:148: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (h == LengthConstraintType.NONE) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(h, LengthConstraintType.NONE)) {' or 'if (h.equals(LengthConstraintType.NONE)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:151: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (h == LengthConstraintType.FIXED) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(h, LengthConstraintType.FIXED)) {' or 'else if (h.equals(LengthConstraintType.FIXED)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:154: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (h == LengthConstraintType.RANGE) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(h, LengthConstraintType.RANGE)) {' or 'else if (h.equals(LengthConstraintType.RANGE)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:158: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (w == LengthConstraintType.RANGE) {
                   ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(w, LengthConstraintType.RANGE)) {' or 'else if (w.equals(LengthConstraintType.RANGE)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:159: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (h == LengthConstraintType.NONE) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(h, LengthConstraintType.NONE)) {' or 'if (h.equals(LengthConstraintType.NONE)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:162: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (h == LengthConstraintType.FIXED) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(h, LengthConstraintType.FIXED)) {' or 'else if (h.equals(LengthConstraintType.FIXED)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:165: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (h == LengthConstraintType.RANGE) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(h, LengthConstraintType.RANGE)) {' or 'else if (h.equals(LengthConstraintType.RANGE)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:494: warning: [MissingOverride] clear implements method in Arrangement; expected @Override
    public void clear() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void clear() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-13/source/org/jfree/chart/block/BorderArrangement.java:509: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
21 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-15

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-15/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-15/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-15/source/org/jfree/chart/plot/PiePlot.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-15/source/org/jfree/chart/plot/PiePlot.java:2797: warning: [EqualsHashCode] Classes that override equals should also override hashCode.
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/EqualsHashCode)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-15/source/org/jfree/chart/plot/PiePlot.java:880: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            key = new Integer(section);
                  ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'key = section;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-15/source/org/jfree/chart/plot/PiePlot.java:1368: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        this.explodePercentages.put(key, new Double(percent));
                                         ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.explodePercentages.put(key, Double.valueOf(percent));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-15/source/org/jfree/chart/plot/PiePlot.java:2069: warning: [MissingOverride] draw implements method in Plot; expected @Override
    public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-15/source/org/jfree/chart/plot/PiePlot.java:2259: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.direction == Rotation.CLOCKWISE) {
                           ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.direction, Rotation.CLOCKWISE)) {' or 'if (this.direction.equals(Rotation.CLOCKWISE)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-15/source/org/jfree/chart/plot/PiePlot.java:2263: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (this.direction == Rotation.ANTICLOCKWISE) {
                                ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.direction, Rotation.ANTICLOCKWISE)) {' or 'else if (this.direction.equals(Rotation.ANTICLOCKWISE)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-15/source/org/jfree/chart/plot/PiePlot.java:2472: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    leftKeys.addValue(key, new Double(mid));
                                           ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'leftKeys.addValue(key, Double.valueOf(mid));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-15/source/org/jfree/chart/plot/PiePlot.java:2475: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    rightKeys.addValue(key, new Double(mid));
                                            ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'rightKeys.addValue(key, Double.valueOf(mid));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-15/source/org/jfree/chart/plot/PiePlot.java:2609: warning: [MissingOverride] getLegendItems overrides method in Plot; expected @Override
    public LegendItemCollection getLegendItems() {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public LegendItemCollection getLegendItems() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-15/source/org/jfree/chart/plot/PiePlot.java:2675: warning: [MissingOverride] getPlotType implements method in Plot; expected @Override
    public String getPlotType() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getPlotType() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-15/source/org/jfree/chart/plot/PiePlot.java:2797: warning: [MissingOverride] equals overrides method in Plot; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-15/source/org/jfree/chart/plot/PiePlot.java:2820: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.direction != that.direction) {
                           ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.direction, that.direction)) {' or 'if (!this.direction.equals(that.direction)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-15/source/org/jfree/chart/plot/PiePlot.java:2962: warning: [MissingOverride] clone overrides method in Plot; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-15/source/org/jfree/chart/plot/PiePlot.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
13 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-16

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:712: warning: [EqualsHashCode] Classes that override equals should also override hashCode.
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/EqualsHashCode)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:222: warning: [MissingOverride] getSeriesCount implements method in AbstractSeriesDataset; expected @Override
    public int getSeriesCount() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getSeriesCount() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:260: warning: [MissingOverride] getSeriesKey implements method in AbstractSeriesDataset; expected @Override
    public Comparable getSeriesKey(int series) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Comparable getSeriesKey(int series) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:313: warning: [MissingOverride] getColumnKeys implements method in KeyedValues2D; expected @Override
    public List getColumnKeys() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public List getColumnKeys() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:366: warning: [MissingOverride] getValue implements method in KeyedValues2D; expected @Override
    public Number getValue(Comparable series, Comparable category) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getValue(Comparable series, Comparable category) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:391: warning: [MissingOverride] getValue implements method in Values2D; expected @Override
    public Number getValue(int series, int category) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getValue(int series, int category) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:406: warning: [MissingOverride] getStartValue implements method in IntervalCategoryDataset; expected @Override
    public Number getStartValue(Comparable series, Comparable category) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getStartValue(Comparable series, Comparable category) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:429: warning: [MissingOverride] getStartValue implements method in IntervalCategoryDataset; expected @Override
    public Number getStartValue(int series, int category) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getStartValue(int series, int category) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:459: warning: [MissingOverride] getEndValue implements method in IntervalCategoryDataset; expected @Override
    public Number getEndValue(Comparable series, Comparable category) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getEndValue(Comparable series, Comparable category) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:481: warning: [MissingOverride] getEndValue implements method in IntervalCategoryDataset; expected @Override
    public Number getEndValue(int series, int category) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getEndValue(int series, int category) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:611: warning: [MissingOverride] getColumnKey implements method in KeyedValues2D; expected @Override
    public Comparable getColumnKey(int column) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Comparable getColumnKey(int column) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:624: warning: [MissingOverride] getColumnIndex implements method in KeyedValues2D; expected @Override
    public int getColumnIndex(Comparable columnKey) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getColumnIndex(Comparable columnKey) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:640: warning: [MissingOverride] getRowIndex implements method in KeyedValues2D; expected @Override
    public int getRowIndex(Comparable rowKey) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getRowIndex(Comparable rowKey) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:652: warning: [MissingOverride] getRowKeys implements method in KeyedValues2D; expected @Override
    public List getRowKeys() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public List getRowKeys() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:672: warning: [MissingOverride] getRowKey implements method in KeyedValues2D; expected @Override
    public Comparable getRowKey(int row) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Comparable getRowKey(int row) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:689: warning: [MissingOverride] getColumnCount implements method in Values2D; expected @Override
    public int getColumnCount() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getColumnCount() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:701: warning: [MissingOverride] getRowCount implements method in Values2D; expected @Override
    public int getRowCount() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getRowCount() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:712: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-16/source/org/jfree/data/category/DefaultIntervalCategoryDataset.java:745: warning: [MissingOverride] clone overrides method in AbstractDataset; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
19 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-14

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3864: warning: [EqualsHashCode] Classes that override equals should also override hashCode.
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/EqualsHashCode)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:532: warning: [MissingOverride] getPlotType implements method in Plot; expected @Override
    public String getPlotType() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getPlotType() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:543: warning: [MissingOverride] getOrientation implements method in Zoomable; expected @Override
    public PlotOrientation getOrientation() {
                           ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public PlotOrientation getOrientation() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1241: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        this.datasetToDomainAxisMap.set(index, new Integer(axisIndex));  
                                               ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.datasetToDomainAxisMap.set(index, Integer.valueOf(axisIndex));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1274: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        this.datasetToRangeAxisMap.set(index, new Integer(axisIndex));
                                              ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.datasetToRangeAxisMap.set(index, Integer.valueOf(axisIndex));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1767: warning: [MissingOverride] getLegendItems overrides method in Plot; expected @Override
    public LegendItemCollection getLegendItems() {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public LegendItemCollection getLegendItems() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1801: warning: [MissingOverride] handleClick overrides method in Plot; expected @Override
    public void handleClick(int x, int y, PlotRenderingInfo info) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void handleClick(int x, int y, PlotRenderingInfo info) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1807: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (this.orientation == PlotOrientation.HORIZONTAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1810: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (this.orientation == PlotOrientation.VERTICAL) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.orientation, PlotOrientation.VERTICAL)) {' or 'else if (this.orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1832: warning: [MissingOverride] zoom overrides method in Plot; expected @Override
    public void zoom(double percent) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoom(double percent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1853: warning: [MissingOverride] datasetChanged overrides method in Plot; expected @Override
    public void datasetChanged(DatasetChangeEvent event) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void datasetChanged(DatasetChangeEvent event) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1878: warning: [MissingOverride] rendererChanged implements method in RendererChangeListener; expected @Override
    public void rendererChanged(RendererChangeEvent event) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void rendererChanged(RendererChangeEvent event) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1971: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1973: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1976: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.foregroundDomainMarkers.put(new Integer(index), markers);
                                                 ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.foregroundDomainMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1980: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1982: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:1985: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.backgroundDomainMarkers.put(new Integer(index), markers);
                                                 ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.backgroundDomainMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2045: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2046: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2049: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(layer, Layer.BACKGROUND)) {' or 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2066: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2158: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2159: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(
                                                                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'markers = (ArrayList) this.foregroundDomainMarkers.get(Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2163: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            markers = (ArrayList) this.backgroundDomainMarkers.get(new Integer(
                                                                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'markers = (ArrayList) this.backgroundDomainMarkers.get(Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2239: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2241: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2244: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.foregroundRangeMarkers.put(new Integer(index), markers);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.foregroundRangeMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2248: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(layer, Layer.BACKGROUND)) {' or 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2250: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2253: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.backgroundRangeMarkers.put(new Integer(index), markers);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.backgroundRangeMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2315: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2316: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2319: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(layer, Layer.BACKGROUND)) {' or 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2336: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2440: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2441: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(
                                                                  ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'markers = (ArrayList) this.foregroundRangeMarkers.get(Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2445: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            markers = (ArrayList) this.backgroundRangeMarkers.get(new Integer(
                                                                  ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'markers = (ArrayList) this.backgroundRangeMarkers.get(Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2716: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (this.orientation == PlotOrientation.HORIZONTAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2722: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (this.orientation == PlotOrientation.VERTICAL) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.orientation, PlotOrientation.VERTICAL)) {' or 'else if (this.orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2771: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (this.orientation == PlotOrientation.HORIZONTAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2777: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (this.orientation == PlotOrientation.VERTICAL) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.orientation, PlotOrientation.VERTICAL)) {' or 'else if (this.orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2830: warning: [MissingOverride] draw implements method in Plot; expected @Override
    public void draw(Graphics2D g2, Rectangle2D area, 
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void draw(Graphics2D g2, Rectangle2D area,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:2907: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (order == DatasetRenderingOrder.FORWARD) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(order, DatasetRenderingOrder.FORWARD)) {' or 'if (order.equals(DatasetRenderingOrder.FORWARD)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3012: warning: [MissingOverride] drawBackground overrides method in Plot; expected @Override
    public void drawBackground(Graphics2D g2, Rectangle2D area) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void drawBackground(Graphics2D g2, Rectangle2D area) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3142: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (this.columnRenderingOrder == SortOrder.ASCENDING) {
                                              ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.columnRenderingOrder, SortOrder.ASCENDING)) {' or 'if (this.columnRenderingOrder.equals(SortOrder.ASCENDING)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3144: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {
                                                   ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.rowRenderingOrder, SortOrder.ASCENDING)) {' or 'if (this.rowRenderingOrder.equals(SortOrder.ASCENDING)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3162: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {
                                                   ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.rowRenderingOrder, SortOrder.ASCENDING)) {' or 'if (this.rowRenderingOrder.equals(SortOrder.ASCENDING)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3353: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.orientation == PlotOrientation.HORIZONTAL) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3357: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (this.orientation == PlotOrientation.VERTICAL) {
                                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.orientation, PlotOrientation.VERTICAL)) {' or 'else if (this.orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3388: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (orientation == PlotOrientation.HORIZONTAL) {
                        ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.HORIZONTAL)) {' or 'if (orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3415: warning: [MissingOverride] getDataRange implements method in ValueAxisPlot; expected @Override
    public Range getDataRange(ValueAxis axis) {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Range getDataRange(ValueAxis axis) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3424: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (axis == getRangeAxis()) {
                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(axis, getRangeAxis())) {' or 'else if (axis.equals(getRangeAxis())) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3689: warning: [MissingOverride] isDomainZoomable implements method in Zoomable; expected @Override
    public boolean isDomainZoomable() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isDomainZoomable() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3700: warning: [MissingOverride] isRangeZoomable implements method in Zoomable; expected @Override
    public boolean isRangeZoomable() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isRangeZoomable() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3712: warning: [MissingOverride] zoomDomainAxes implements method in Zoomable; expected @Override
    public void zoomDomainAxes(double factor, PlotRenderingInfo state, 
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomDomainAxes(double factor, PlotRenderingInfo state,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3726: warning: [MissingOverride] zoomDomainAxes implements method in Zoomable; expected @Override
    public void zoomDomainAxes(double lowerPercent, double upperPercent, 
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomDomainAxes(double lowerPercent, double upperPercent,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3744: warning: [MissingOverride] zoomDomainAxes implements method in Zoomable; expected @Override
    public void zoomDomainAxes(double factor, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomDomainAxes(double factor, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3756: warning: [MissingOverride] zoomRangeAxes implements method in Zoomable; expected @Override
    public void zoomRangeAxes(double factor, PlotRenderingInfo state, 
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomRangeAxes(double factor, PlotRenderingInfo state,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3775: warning: [MissingOverride] zoomRangeAxes implements method in Zoomable; expected @Override
    public void zoomRangeAxes(double factor, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomRangeAxes(double factor, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3786: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                    if (this.orientation == PlotOrientation.HORIZONTAL) {
                                         ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3808: warning: [MissingOverride] zoomRangeAxes implements method in Zoomable; expected @Override
    public void zoomRangeAxes(double lowerPercent, double upperPercent, 
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomRangeAxes(double lowerPercent, double upperPercent,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3864: warning: [MissingOverride] equals overrides method in Plot; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3878: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.orientation != that.orientation) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.orientation, that.orientation)) {' or 'if (!this.orientation.equals(that.orientation)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3910: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.renderingOrder != that.renderingOrder) {
                                ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.renderingOrder, that.renderingOrder)) {' or 'if (!this.renderingOrder.equals(that.renderingOrder)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3913: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.columnRenderingOrder != that.columnRenderingOrder) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.columnRenderingOrder, that.columnRenderingOrder)) {' or 'if (!this.columnRenderingOrder.equals(that.columnRenderingOrder)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3916: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.rowRenderingOrder != that.rowRenderingOrder) {
                                   ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.rowRenderingOrder, that.rowRenderingOrder)) {' or 'if (!this.rowRenderingOrder.equals(that.rowRenderingOrder)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3922: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.domainGridlinePosition != that.domainGridlinePosition) {
                                        ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.domainGridlinePosition, that.domainGridlinePosition)) {' or 'if (!this.domainGridlinePosition.equals(that.domainGridlinePosition)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java:3999: warning: [MissingOverride] clone overrides method in Plot; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/CategoryPlot.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
69 warnings

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4705: warning: [EqualsHashCode] Classes that override equals should also override hashCode.
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/EqualsHashCode)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:608: warning: [MissingOverride] getPlotType implements method in Plot; expected @Override
    public String getPlotType() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getPlotType() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:619: warning: [MissingOverride] getOrientation implements method in Zoomable; expected @Override
    public PlotOrientation getOrientation() {
                           ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public PlotOrientation getOrientation() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:635: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (orientation != this.orientation) {
                        ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!orientation.equals(this.orientation)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:1354: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        this.datasetToDomainAxisMap.put(new Integer(index), 
                                        ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.datasetToDomainAxisMap.put(Integer.valueOf(index),'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:1355: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                new Integer(axisIndex));
                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(axisIndex));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:1370: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        this.datasetToRangeAxisMap.put(new Integer(index), 
                                       ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.datasetToRangeAxisMap.put(Integer.valueOf(index),'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:1371: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                new Integer(axisIndex));
                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(axisIndex));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2125: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2196: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2198: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2201: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.foregroundDomainMarkers.put(new Integer(index), markers);
                                                 ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.foregroundDomainMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2205: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2207: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2210: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.backgroundDomainMarkers.put(new Integer(index), markers);
                                                 ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.backgroundDomainMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2285: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2286: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(
                                                                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'markers = (ArrayList) this.foregroundDomainMarkers.get(Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2290: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            markers = (ArrayList) this.backgroundDomainMarkers.get(new Integer(
                                                                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'markers = (ArrayList) this.backgroundDomainMarkers.get(Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2394: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2396: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2399: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.foregroundRangeMarkers.put(new Integer(index), markers);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.foregroundRangeMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2403: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(layer, Layer.BACKGROUND)) {' or 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2405: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2408: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.backgroundRangeMarkers.put(new Integer(index), markers);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.backgroundRangeMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2425: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2521: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2522: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(
                                                                  ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'markers = (ArrayList) this.foregroundRangeMarkers.get(Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2526: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            markers = (ArrayList) this.backgroundRangeMarkers.get(new Integer(
                                                                  ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'markers = (ArrayList) this.backgroundRangeMarkers.get(Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2664: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (this.orientation == PlotOrientation.HORIZONTAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2670: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (this.orientation == PlotOrientation.VERTICAL) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.orientation, PlotOrientation.VERTICAL)) {' or 'else if (this.orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2711: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (this.orientation == PlotOrientation.HORIZONTAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2717: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (this.orientation == PlotOrientation.VERTICAL) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.orientation, PlotOrientation.VERTICAL)) {' or 'else if (this.orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2750: warning: [MissingOverride] draw implements method in Plot; expected @Override
    public void draw(Graphics2D g2,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void draw(Graphics2D g2,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2801: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (orient == PlotOrientation.VERTICAL) {
                           ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orient, PlotOrientation.VERTICAL)) {' or 'if (orient.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2814: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (orient == PlotOrientation.VERTICAL) {
                           ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orient, PlotOrientation.VERTICAL)) {' or 'if (orient.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2876: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (order == DatasetRenderingOrder.FORWARD) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(order, DatasetRenderingOrder.FORWARD)) {' or 'if (order.equals(DatasetRenderingOrder.FORWARD)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2908: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (order == DatasetRenderingOrder.REVERSE) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(order, DatasetRenderingOrder.REVERSE)) {' or 'else if (order.equals(DatasetRenderingOrder.REVERSE)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2952: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (orient == PlotOrientation.VERTICAL) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orient, PlotOrientation.VERTICAL)) {' or 'if (orient.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:2974: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (orient == PlotOrientation.VERTICAL) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orient, PlotOrientation.VERTICAL)) {' or 'if (orient.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3014: warning: [MissingOverride] drawBackground overrides method in Plot; expected @Override
    public void drawBackground(Graphics2D g2, Rectangle2D area) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void drawBackground(Graphics2D g2, Rectangle2D area) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3058: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (this.orientation == PlotOrientation.HORIZONTAL) {
                                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3074: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (this.orientation == PlotOrientation.HORIZONTAL) {
                                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3089: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (this.orientation == PlotOrientation.HORIZONTAL) {
                                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3104: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (this.orientation == PlotOrientation.HORIZONTAL) {
                                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3329: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (seriesOrder == SeriesRenderingOrder.REVERSE) {
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(seriesOrder, SeriesRenderingOrder.REVERSE)) {' or 'if (seriesOrder.equals(SeriesRenderingOrder.REVERSE)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3396: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                new Integer(index));
                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3423: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            = (Integer) this.datasetToRangeAxisMap.get(new Integer(index));
                                                       ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean '= (Integer) this.datasetToRangeAxisMap.get(Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3660: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3661: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3664: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(layer, Layer.BACKGROUND)) {' or 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3686: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3687: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3690: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(layer, Layer.BACKGROUND)) {' or 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3714: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (getOrientation() == PlotOrientation.HORIZONTAL) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(getOrientation(), PlotOrientation.HORIZONTAL)) {' or 'if (getOrientation().equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3747: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (orientation == PlotOrientation.VERTICAL) {
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.VERTICAL)) {' or 'if (orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3779: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (getOrientation() == PlotOrientation.HORIZONTAL) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(getOrientation(), PlotOrientation.HORIZONTAL)) {' or 'if (getOrientation().equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3813: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (orientation == PlotOrientation.HORIZONTAL) {
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.HORIZONTAL)) {' or 'if (orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3839: warning: [MissingOverride] handleClick overrides method in Plot; expected @Override
    public void handleClick(int x, int y, PlotRenderingInfo info) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void handleClick(int x, int y, PlotRenderingInfo info) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3876: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(i));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(i));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3906: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(i));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(i));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3972: warning: [MissingOverride] getDataRange implements method in ValueAxisPlot; expected @Override
    public Range getDataRange(ValueAxis axis) {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Range getDataRange(ValueAxis axis) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3983: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(domainIndex)));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(domainIndex)));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:3991: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(rangeIndex)));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(rangeIndex)));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4032: warning: [MissingOverride] datasetChanged overrides method in Plot; expected @Override
    public void datasetChanged(DatasetChangeEvent event) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void datasetChanged(DatasetChangeEvent event) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4050: warning: [MissingOverride] rendererChanged implements method in RendererChangeListener; expected @Override
    public void rendererChanged(RendererChangeEvent event) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void rendererChanged(RendererChangeEvent event) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4456: warning: [MissingOverride] zoomDomainAxes implements method in Zoomable; expected @Override
    public void zoomDomainAxes(double factor, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomDomainAxes(double factor, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4474: warning: [MissingOverride] zoomDomainAxes implements method in Zoomable; expected @Override
    public void zoomDomainAxes(double factor, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomDomainAxes(double factor, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4485: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                    if (this.orientation == PlotOrientation.HORIZONTAL) {
                                         ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4513: warning: [MissingOverride] zoomDomainAxes implements method in Zoomable; expected @Override
    public void zoomDomainAxes(double lowerPercent, double upperPercent,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomDomainAxes(double lowerPercent, double upperPercent,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4532: warning: [MissingOverride] zoomRangeAxes implements method in Zoomable; expected @Override
    public void zoomRangeAxes(double factor, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomRangeAxes(double factor, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4551: warning: [MissingOverride] zoomRangeAxes implements method in Zoomable; expected @Override
    public void zoomRangeAxes(double factor, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomRangeAxes(double factor, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4562: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                    if (this.orientation == PlotOrientation.HORIZONTAL) {
                                         ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4586: warning: [MissingOverride] zoomRangeAxes implements method in Zoomable; expected @Override
    public void zoomRangeAxes(double lowerPercent, double upperPercent,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomRangeAxes(double lowerPercent, double upperPercent,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4604: warning: [MissingOverride] isDomainZoomable implements method in Zoomable; expected @Override
    public boolean isDomainZoomable() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isDomainZoomable() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4616: warning: [MissingOverride] isRangeZoomable implements method in Zoomable; expected @Override
    public boolean isRangeZoomable() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isRangeZoomable() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4667: warning: [MissingOverride] getLegendItems overrides method in Plot; expected @Override
    public LegendItemCollection getLegendItems() {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public LegendItemCollection getLegendItems() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4705: warning: [MissingOverride] equals overrides method in Plot; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4718: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.orientation != that.orientation) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.orientation, that.orientation)) {' or 'if (!this.orientation.equals(that.orientation)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java:4890: warning: [MissingOverride] clone overrides method in Plot; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-14/source/org/jfree/chart/plot/XYPlot.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
79 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-17

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-17/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-17/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-17/source/org/jfree/data/time/TimeSeries.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-17/source/org/jfree/data/time/TimeSeries.java:237: warning: [MissingOverride] getItemCount implements method in Series; expected @Override
    public int getItemCount() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getItemCount() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-17/source/org/jfree/data/time/TimeSeries.java:675: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        return this.addOrUpdate(period, new Double(value));    
                                        ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return this.addOrUpdate(period, Double.valueOf(value));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-17/source/org/jfree/data/time/TimeSeries.java:856: warning: [MissingOverride] clone overrides method in Series; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-17/source/org/jfree/data/time/TimeSeries.java:960: warning: [MissingOverride] equals overrides method in Series; expected @Override
    public boolean equals(Object object) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object object) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-17/source/org/jfree/data/time/TimeSeries.java:1009: warning: [MissingOverride] hashCode overrides method in Series; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-17/source/org/jfree/data/time/TimeSeries.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-19

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3554: warning: [EqualsHashCode] Classes that override equals should also override hashCode.
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/EqualsHashCode)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:523: warning: [MissingOverride] getPlotType implements method in Plot; expected @Override
    public String getPlotType() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getPlotType() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:534: warning: [MissingOverride] getOrientation implements method in Zoomable; expected @Override
    public PlotOrientation getOrientation() {
                           ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public PlotOrientation getOrientation() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:1227: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        this.datasetToDomainAxisMap.set(index, new Integer(axisIndex));  
                                               ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.datasetToDomainAxisMap.set(index, Integer.valueOf(axisIndex));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:1260: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        this.datasetToRangeAxisMap.set(index, new Integer(axisIndex));
                                              ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.datasetToRangeAxisMap.set(index, Integer.valueOf(axisIndex));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:1753: warning: [MissingOverride] getLegendItems overrides method in Plot; expected @Override
    public LegendItemCollection getLegendItems() {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public LegendItemCollection getLegendItems() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:1787: warning: [MissingOverride] handleClick overrides method in Plot; expected @Override
    public void handleClick(int x, int y, PlotRenderingInfo info) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void handleClick(int x, int y, PlotRenderingInfo info) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:1793: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (this.orientation == PlotOrientation.HORIZONTAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:1796: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (this.orientation == PlotOrientation.VERTICAL) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.orientation, PlotOrientation.VERTICAL)) {' or 'else if (this.orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:1818: warning: [MissingOverride] zoom overrides method in Plot; expected @Override
    public void zoom(double percent) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoom(double percent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:1839: warning: [MissingOverride] datasetChanged overrides method in Plot; expected @Override
    public void datasetChanged(DatasetChangeEvent event) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void datasetChanged(DatasetChangeEvent event) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:1864: warning: [MissingOverride] rendererChanged implements method in RendererChangeListener; expected @Override
    public void rendererChanged(RendererChangeEvent event) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void rendererChanged(RendererChangeEvent event) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:1929: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:1931: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:1934: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.foregroundDomainMarkers.put(new Integer(index), markers);
                                                 ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.foregroundDomainMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:1938: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:1940: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:1943: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.backgroundDomainMarkers.put(new Integer(index), markers);
                                                 ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.backgroundDomainMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2001: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2002: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2005: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(layer, Layer.BACKGROUND)) {' or 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2022: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2088: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2090: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2093: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.foregroundRangeMarkers.put(new Integer(index), markers);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.foregroundRangeMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2097: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(layer, Layer.BACKGROUND)) {' or 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2099: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2102: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.backgroundRangeMarkers.put(new Integer(index), markers);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.backgroundRangeMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2162: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2163: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2166: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(layer, Layer.BACKGROUND)) {' or 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2183: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2443: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (this.orientation == PlotOrientation.HORIZONTAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2449: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (this.orientation == PlotOrientation.VERTICAL) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.orientation, PlotOrientation.VERTICAL)) {' or 'else if (this.orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2498: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (this.orientation == PlotOrientation.HORIZONTAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2504: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (this.orientation == PlotOrientation.VERTICAL) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.orientation, PlotOrientation.VERTICAL)) {' or 'else if (this.orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2557: warning: [MissingOverride] draw implements method in Plot; expected @Override
    public void draw(Graphics2D g2, Rectangle2D area, 
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void draw(Graphics2D g2, Rectangle2D area,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2634: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (order == DatasetRenderingOrder.FORWARD) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(order, DatasetRenderingOrder.FORWARD)) {' or 'if (order.equals(DatasetRenderingOrder.FORWARD)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2739: warning: [MissingOverride] drawBackground overrides method in Plot; expected @Override
    public void drawBackground(Graphics2D g2, Rectangle2D area) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void drawBackground(Graphics2D g2, Rectangle2D area) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2869: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (this.columnRenderingOrder == SortOrder.ASCENDING) {
                                              ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.columnRenderingOrder, SortOrder.ASCENDING)) {' or 'if (this.columnRenderingOrder.equals(SortOrder.ASCENDING)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2871: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {
                                                   ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.rowRenderingOrder, SortOrder.ASCENDING)) {' or 'if (this.rowRenderingOrder.equals(SortOrder.ASCENDING)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:2889: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {
                                                   ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.rowRenderingOrder, SortOrder.ASCENDING)) {' or 'if (this.rowRenderingOrder.equals(SortOrder.ASCENDING)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3080: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.orientation == PlotOrientation.HORIZONTAL) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3084: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (this.orientation == PlotOrientation.VERTICAL) {
                                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.orientation, PlotOrientation.VERTICAL)) {' or 'else if (this.orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3115: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (orientation == PlotOrientation.HORIZONTAL) {
                        ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.HORIZONTAL)) {' or 'if (orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3142: warning: [MissingOverride] getDataRange implements method in ValueAxisPlot; expected @Override
    public Range getDataRange(ValueAxis axis) {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Range getDataRange(ValueAxis axis) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3151: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (axis == getRangeAxis()) {
                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(axis, getRangeAxis())) {' or 'else if (axis.equals(getRangeAxis())) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3379: warning: [MissingOverride] isDomainZoomable implements method in Zoomable; expected @Override
    public boolean isDomainZoomable() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isDomainZoomable() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3390: warning: [MissingOverride] isRangeZoomable implements method in Zoomable; expected @Override
    public boolean isRangeZoomable() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isRangeZoomable() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3402: warning: [MissingOverride] zoomDomainAxes implements method in Zoomable; expected @Override
    public void zoomDomainAxes(double factor, PlotRenderingInfo state, 
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomDomainAxes(double factor, PlotRenderingInfo state,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3416: warning: [MissingOverride] zoomDomainAxes implements method in Zoomable; expected @Override
    public void zoomDomainAxes(double lowerPercent, double upperPercent, 
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomDomainAxes(double lowerPercent, double upperPercent,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3434: warning: [MissingOverride] zoomDomainAxes implements method in Zoomable; expected @Override
    public void zoomDomainAxes(double factor, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomDomainAxes(double factor, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3446: warning: [MissingOverride] zoomRangeAxes implements method in Zoomable; expected @Override
    public void zoomRangeAxes(double factor, PlotRenderingInfo state, 
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomRangeAxes(double factor, PlotRenderingInfo state,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3465: warning: [MissingOverride] zoomRangeAxes implements method in Zoomable; expected @Override
    public void zoomRangeAxes(double factor, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomRangeAxes(double factor, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3476: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                    if (this.orientation == PlotOrientation.HORIZONTAL) {
                                         ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3498: warning: [MissingOverride] zoomRangeAxes implements method in Zoomable; expected @Override
    public void zoomRangeAxes(double lowerPercent, double upperPercent, 
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomRangeAxes(double lowerPercent, double upperPercent,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3554: warning: [MissingOverride] equals overrides method in Plot; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3568: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.orientation != that.orientation) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.orientation, that.orientation)) {' or 'if (!this.orientation.equals(that.orientation)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3600: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.renderingOrder != that.renderingOrder) {
                                ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.renderingOrder, that.renderingOrder)) {' or 'if (!this.renderingOrder.equals(that.renderingOrder)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3603: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.columnRenderingOrder != that.columnRenderingOrder) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.columnRenderingOrder, that.columnRenderingOrder)) {' or 'if (!this.columnRenderingOrder.equals(that.columnRenderingOrder)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3606: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.rowRenderingOrder != that.rowRenderingOrder) {
                                   ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.rowRenderingOrder, that.rowRenderingOrder)) {' or 'if (!this.rowRenderingOrder.equals(that.rowRenderingOrder)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3612: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.domainGridlinePosition != that.domainGridlinePosition) {
                                        ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.domainGridlinePosition, that.domainGridlinePosition)) {' or 'if (!this.domainGridlinePosition.equals(that.domainGridlinePosition)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java:3689: warning: [MissingOverride] clone overrides method in Plot; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-19/source/org/jfree/chart/plot/CategoryPlot.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
63 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-18

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues2D.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues2D.java:117: warning: [MissingOverride] getRowCount implements method in Values2D; expected @Override
    public int getRowCount() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getRowCount() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues2D.java:128: warning: [MissingOverride] getColumnCount implements method in Values2D; expected @Override
    public int getColumnCount() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getColumnCount() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues2D.java:142: warning: [MissingOverride] getValue implements method in Values2D; expected @Override
    public Number getValue(int row, int column) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getValue(int row, int column) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues2D.java:167: warning: [MissingOverride] getRowKey implements method in KeyedValues2D; expected @Override
    public Comparable getRowKey(int row) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Comparable getRowKey(int row) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues2D.java:181: warning: [MissingOverride] getRowIndex implements method in KeyedValues2D; expected @Override
    public int getRowIndex(Comparable key) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getRowIndex(Comparable key) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues2D.java:200: warning: [MissingOverride] getRowKeys implements method in KeyedValues2D; expected @Override
    public List getRowKeys() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public List getRowKeys() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues2D.java:215: warning: [MissingOverride] getColumnKey implements method in KeyedValues2D; expected @Override
    public Comparable getColumnKey(int column) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Comparable getColumnKey(int column) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues2D.java:229: warning: [MissingOverride] getColumnIndex implements method in KeyedValues2D; expected @Override
    public int getColumnIndex(Comparable key) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getColumnIndex(Comparable key) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues2D.java:243: warning: [MissingOverride] getColumnKeys implements method in KeyedValues2D; expected @Override
    public List getColumnKeys() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public List getColumnKeys() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues2D.java:260: warning: [MissingOverride] getValue implements method in KeyedValues2D; expected @Override
    public Number getValue(Comparable rowKey, Comparable columnKey) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getValue(Comparable rowKey, Comparable columnKey) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues2D.java:479: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object o) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object o) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues2D.java:532: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues2D.java:548: warning: [MissingOverride] clone implements method in PublicCloneable; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues2D.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
13 warnings

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues.java:109: warning: [MissingOverride] getItemCount implements method in Values; expected @Override
    public int getItemCount() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getItemCount() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues.java:122: warning: [MissingOverride] getValue implements method in Values; expected @Override
    public Number getValue(int item) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getValue(int item) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues.java:135: warning: [MissingOverride] getKey implements method in KeyedValues; expected @Override
    public Comparable getKey(int index) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Comparable getKey(int index) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues.java:149: warning: [MissingOverride] getIndex implements method in KeyedValues; expected @Override
    public int getIndex(Comparable key) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getIndex(Comparable key) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues.java:165: warning: [MissingOverride] getKeys implements method in KeyedValues; expected @Override
    public List getKeys() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public List getKeys() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues.java:180: warning: [MissingOverride] getValue implements method in KeyedValues; expected @Override
    public Number getValue(Comparable key) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getValue(Comparable key) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues.java:197: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        addValue(key, new Double(value)); 
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'addValue(key, Double.valueOf(value));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues.java:219: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        setValue(key, new Double(value));   
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'setValue(key, Double.valueOf(value));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues.java:240: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            this.indexMap.put(key, new Integer(this.keys.size() - 1));
                                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.indexMap.put(key, Integer.valueOf(this.keys.size() - 1));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues.java:256: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        insertValue(position, key, new Double(value));
                                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'insertValue(position, key, Double.valueOf(value));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues.java:302: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            this.indexMap.put(key, new Integer(i));
                                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.indexMap.put(key, Integer.valueOf(i));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues.java:409: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues.java:451: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues.java:463: warning: [MissingOverride] clone implements method in PublicCloneable; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-18/source/org/jfree/data/DefaultKeyedValues.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
14 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-20

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-20/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-20/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-20/source/org/jfree/chart/plot/ValueMarker.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-20/source/org/jfree/chart/plot/ValueMarker.java:140: warning: [EqualsHashCode] Classes that override equals should also override hashCode.
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/EqualsHashCode)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-20/source/org/jfree/chart/plot/ValueMarker.java:140: warning: [MissingOverride] equals overrides method in Marker; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-2

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/source/org/jfree/data/general/DatasetUtilities.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/source/org/jfree/data/general/DatasetUtilities.java:375: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                result.addValue(new Double(data[r][c]), rowKey, columnKey);
                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'result.addValue(Double.valueOf(data[r][c]), rowKey, columnKey);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/source/org/jfree/data/general/DatasetUtilities.java:461: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                result.addValue(new Double(data[r][c]), rowKey, columnKey);
                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'result.addValue(Double.valueOf(data[r][c]), rowKey, columnKey);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/source/org/jfree/data/general/DatasetUtilities.java:1517: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            return new Double(info.getDomainLowerBound(true));
                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return info.getDomainLowerBound(true);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/source/org/jfree/data/general/DatasetUtilities.java:1545: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                result = new Double(minimum);
                         ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'result = minimum;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/source/org/jfree/data/general/DatasetUtilities.java:1572: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            return new Double(info.getDomainUpperBound(true));
                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return info.getDomainUpperBound(true);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/source/org/jfree/data/general/DatasetUtilities.java:1601: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                result = new Double(maximum);
                         ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'result = maximum;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/source/org/jfree/data/general/DatasetUtilities.java:1629: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            return new Double(info.getRangeLowerBound(true));
                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return info.getRangeLowerBound(true);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/source/org/jfree/data/general/DatasetUtilities.java:1657: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                return new Double(minimum);
                       ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return minimum;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/source/org/jfree/data/general/DatasetUtilities.java:1685: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            return new Double(info.getRangeLowerBound(true));
                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return info.getRangeLowerBound(true);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/source/org/jfree/data/general/DatasetUtilities.java:1719: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                return new Double(minimum);
                       ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return minimum;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/source/org/jfree/data/general/DatasetUtilities.java:1746: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            return new Double(info.getRangeUpperBound(true));
                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return info.getRangeUpperBound(true);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/source/org/jfree/data/general/DatasetUtilities.java:1775: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                return new Double(maximum);
                       ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return maximum;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/source/org/jfree/data/general/DatasetUtilities.java:1802: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            return new Double(info.getRangeUpperBound(true));
                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return info.getRangeUpperBound(true);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/source/org/jfree/data/general/DatasetUtilities.java:1835: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                return new Double(maximum);
                       ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return maximum;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/source/org/jfree/data/general/DatasetUtilities.java:1999: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            result = new Double(minimum);
                     ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'result = minimum;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/source/org/jfree/data/general/DatasetUtilities.java:2038: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            result = new Double(maximum);
                     ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'result = maximum;'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-2/source/org/jfree/data/general/DatasetUtilities.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
16 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-21

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:751: warning: [EqualsHashCode] Classes that override equals should also override hashCode.
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/EqualsHashCode)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:218: warning: [MissingOverride] getValue implements method in Values2D; expected @Override
    public Number getValue(int row, int column) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getValue(int row, int column) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:233: warning: [MissingOverride] getValue implements method in KeyedValues2D; expected @Override
    public Number getValue(Comparable rowKey, Comparable columnKey) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getValue(Comparable rowKey, Comparable columnKey) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:247: warning: [MissingOverride] getMeanValue implements method in BoxAndWhiskerCategoryDataset; expected @Override
    public Number getMeanValue(int row, int column) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getMeanValue(int row, int column) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:269: warning: [MissingOverride] getMeanValue implements method in BoxAndWhiskerCategoryDataset; expected @Override
    public Number getMeanValue(Comparable rowKey, Comparable columnKey) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getMeanValue(Comparable rowKey, Comparable columnKey) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:289: warning: [MissingOverride] getMedianValue implements method in BoxAndWhiskerCategoryDataset; expected @Override
    public Number getMedianValue(int row, int column) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getMedianValue(int row, int column) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:309: warning: [MissingOverride] getMedianValue implements method in BoxAndWhiskerCategoryDataset; expected @Override
    public Number getMedianValue(Comparable rowKey, Comparable columnKey) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getMedianValue(Comparable rowKey, Comparable columnKey) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:329: warning: [MissingOverride] getQ1Value implements method in BoxAndWhiskerCategoryDataset; expected @Override
    public Number getQ1Value(int row, int column) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getQ1Value(int row, int column) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:349: warning: [MissingOverride] getQ1Value implements method in BoxAndWhiskerCategoryDataset; expected @Override
    public Number getQ1Value(Comparable rowKey, Comparable columnKey) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getQ1Value(Comparable rowKey, Comparable columnKey) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:369: warning: [MissingOverride] getQ3Value implements method in BoxAndWhiskerCategoryDataset; expected @Override
    public Number getQ3Value(int row, int column) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getQ3Value(int row, int column) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:389: warning: [MissingOverride] getQ3Value implements method in BoxAndWhiskerCategoryDataset; expected @Override
    public Number getQ3Value(Comparable rowKey, Comparable columnKey) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getQ3Value(Comparable rowKey, Comparable columnKey) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:408: warning: [MissingOverride] getColumnIndex implements method in KeyedValues2D; expected @Override
    public int getColumnIndex(Comparable key) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getColumnIndex(Comparable key) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:421: warning: [MissingOverride] getColumnKey implements method in KeyedValues2D; expected @Override
    public Comparable getColumnKey(int column) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Comparable getColumnKey(int column) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:432: warning: [MissingOverride] getColumnKeys implements method in KeyedValues2D; expected @Override
    public List getColumnKeys() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public List getColumnKeys() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:445: warning: [MissingOverride] getRowIndex implements method in KeyedValues2D; expected @Override
    public int getRowIndex(Comparable key) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getRowIndex(Comparable key) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:458: warning: [MissingOverride] getRowKey implements method in KeyedValues2D; expected @Override
    public Comparable getRowKey(int row) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Comparable getRowKey(int row) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:469: warning: [MissingOverride] getRowKeys implements method in KeyedValues2D; expected @Override
    public List getRowKeys() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public List getRowKeys() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:480: warning: [MissingOverride] getRowCount implements method in Values2D; expected @Override
    public int getRowCount() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getRowCount() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:491: warning: [MissingOverride] getColumnCount implements method in Values2D; expected @Override
    public int getColumnCount() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getColumnCount() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:505: warning: [MissingOverride] getRangeLowerBound implements method in RangeInfo; expected @Override
    public double getRangeLowerBound(boolean includeInterval) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getRangeLowerBound(boolean includeInterval) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:519: warning: [MissingOverride] getRangeUpperBound implements method in RangeInfo; expected @Override
    public double getRangeUpperBound(boolean includeInterval) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getRangeUpperBound(boolean includeInterval) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:531: warning: [MissingOverride] getRangeBounds implements method in RangeInfo; expected @Override
    public Range getRangeBounds(boolean includeInterval) {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Range getRangeBounds(boolean includeInterval) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:545: warning: [MissingOverride] getMinRegularValue implements method in BoxAndWhiskerCategoryDataset; expected @Override
    public Number getMinRegularValue(int row, int column) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getMinRegularValue(int row, int column) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:565: warning: [MissingOverride] getMinRegularValue implements method in BoxAndWhiskerCategoryDataset; expected @Override
    public Number getMinRegularValue(Comparable rowKey, Comparable columnKey) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getMinRegularValue(Comparable rowKey, Comparable columnKey) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:585: warning: [MissingOverride] getMaxRegularValue implements method in BoxAndWhiskerCategoryDataset; expected @Override
    public Number getMaxRegularValue(int row, int column) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getMaxRegularValue(int row, int column) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:605: warning: [MissingOverride] getMaxRegularValue implements method in BoxAndWhiskerCategoryDataset; expected @Override
    public Number getMaxRegularValue(Comparable rowKey, Comparable columnKey) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getMaxRegularValue(Comparable rowKey, Comparable columnKey) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:625: warning: [MissingOverride] getMinOutlier implements method in BoxAndWhiskerCategoryDataset; expected @Override
    public Number getMinOutlier(int row, int column) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getMinOutlier(int row, int column) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:645: warning: [MissingOverride] getMinOutlier implements method in BoxAndWhiskerCategoryDataset; expected @Override
    public Number getMinOutlier(Comparable rowKey, Comparable columnKey) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getMinOutlier(Comparable rowKey, Comparable columnKey) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:665: warning: [MissingOverride] getMaxOutlier implements method in BoxAndWhiskerCategoryDataset; expected @Override
    public Number getMaxOutlier(int row, int column) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getMaxOutlier(int row, int column) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:685: warning: [MissingOverride] getMaxOutlier implements method in BoxAndWhiskerCategoryDataset; expected @Override
    public Number getMaxOutlier(Comparable rowKey, Comparable columnKey) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Number getMaxOutlier(Comparable rowKey, Comparable columnKey) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:705: warning: [MissingOverride] getOutliers implements method in BoxAndWhiskerCategoryDataset; expected @Override
    public List getOutliers(int row, int column) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public List getOutliers(int row, int column) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:725: warning: [MissingOverride] getOutliers implements method in BoxAndWhiskerCategoryDataset; expected @Override
    public List getOutliers(Comparable rowKey, Comparable columnKey) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public List getOutliers(Comparable rowKey, Comparable columnKey) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:751: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-21/source/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java:770: warning: [MissingOverride] clone implements method in PublicCloneable; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
34 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-22

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-22/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-22/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-22/source/org/jfree/data/KeyedObjects2D.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-22/source/org/jfree/data/KeyedObjects2D.java:390: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-22/source/org/jfree/data/KeyedObjects2D.java:437: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-22/source/org/jfree/data/KeyedObjects2D.java:453: warning: [MissingOverride] clone overrides method in Object; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-22/source/org/jfree/data/KeyedObjects2D.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-23

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-23/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-23/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java:330: warning: [MissingOverride] drawItem implements method in CategoryItemRenderer; expected @Override
    public void drawItem(Graphics2D g2, CategoryItemRendererState state,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void drawItem(Graphics2D g2, CategoryItemRendererState state,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java:349: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (orient == PlotOrientation.VERTICAL) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orient, PlotOrientation.VERTICAL)) {' or 'if (orient.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java:373: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                    if (orient == PlotOrientation.VERTICAL) {
                               ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orient, PlotOrientation.VERTICAL)) {' or 'if (orient.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java:406: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                        if (orient == PlotOrientation.VERTICAL) {
                                   ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orient, PlotOrientation.VERTICAL)) {' or 'if (orient.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java:452: warning: [MissingOverride] paintIcon implements method in Icon; expected @Override
          public void paintIcon(Component c, Graphics g, int x, int y) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void paintIcon(Component c, Graphics g, int x, int y) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java:466: warning: [MissingOverride] getIconWidth implements method in Icon; expected @Override
        public int getIconWidth() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getIconWidth() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java:470: warning: [MissingOverride] getIconHeight implements method in Icon; expected @Override
        public int getIconHeight() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getIconHeight() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java:492: warning: [MissingOverride] paintIcon implements method in Icon; expected @Override
            public void paintIcon(Component c, Graphics g, int x, int y) {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void paintIcon(Component c, Graphics g, int x, int y) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java:504: warning: [MissingOverride] getIconWidth implements method in Icon; expected @Override
            public int getIconWidth() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getIconWidth() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-23/source/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java:508: warning: [MissingOverride] getIconHeight implements method in Icon; expected @Override
            public int getIconHeight() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getIconHeight() {'?
10 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-24

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-24/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-24/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-24/source/org/jfree/chart/renderer/GrayPaintScale.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-24/source/org/jfree/chart/renderer/GrayPaintScale.java:144: warning: [EqualsHashCode] Classes that override equals should also override hashCode.
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/EqualsHashCode)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-24/source/org/jfree/chart/renderer/GrayPaintScale.java:100: warning: [MissingOverride] getLowerBound implements method in PaintScale; expected @Override
    public double getLowerBound() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getLowerBound() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-24/source/org/jfree/chart/renderer/GrayPaintScale.java:111: warning: [MissingOverride] getUpperBound implements method in PaintScale; expected @Override
    public double getUpperBound() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getUpperBound() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-24/source/org/jfree/chart/renderer/GrayPaintScale.java:123: warning: [MissingOverride] getPaint implements method in PaintScale; expected @Override
    public Paint getPaint(double value) {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Paint getPaint(double value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-24/source/org/jfree/chart/renderer/GrayPaintScale.java:144: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-24/source/org/jfree/chart/renderer/GrayPaintScale.java:169: warning: [MissingOverride] clone implements method in PublicCloneable; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
6 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-25

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-25/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-25/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java:188: warning: [MissingOverride] drawItem overrides method in BarRenderer; expected @Override
    public void drawItem(Graphics2D g2,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void drawItem(Graphics2D g2,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java:207: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (orientation == PlotOrientation.HORIZONTAL) {
                        ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.HORIZONTAL)) {' or 'if (orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java:211: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (orientation == PlotOrientation.VERTICAL) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(orientation, PlotOrientation.VERTICAL)) {' or 'else if (orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-25/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java:509: warning: [MissingOverride] equals overrides method in BarRenderer; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
4 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-26

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-26/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-26/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-26/source/org/jfree/chart/axis/Axis.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-26/source/org/jfree/chart/axis/Axis.java:1259: warning: [EqualsHashCode] Classes that override equals should also override hashCode.
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/EqualsHashCode)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-26/source/org/jfree/chart/axis/Axis.java:1064: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (edge == RectangleEdge.LEFT || edge == RectangleEdge.RIGHT) {
                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(edge, RectangleEdge.LEFT) || edge == RectangleEdge.RIGHT) {' or 'if (edge.equals(RectangleEdge.LEFT) || edge == RectangleEdge.RIGHT) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-26/source/org/jfree/chart/axis/Axis.java:1064: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (edge == RectangleEdge.LEFT || edge == RectangleEdge.RIGHT) {
                                                   ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (edge == RectangleEdge.LEFT || Objects.equals(edge, RectangleEdge.RIGHT)) {' or 'if (edge == RectangleEdge.LEFT || edge.equals(RectangleEdge.RIGHT)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-26/source/org/jfree/chart/axis/Axis.java:1113: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (edge == RectangleEdge.TOP) {
                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(edge, RectangleEdge.TOP)) {' or 'if (edge.equals(RectangleEdge.TOP)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-26/source/org/jfree/chart/axis/Axis.java:1131: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (edge == RectangleEdge.BOTTOM) {
                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(edge, RectangleEdge.BOTTOM)) {' or 'else if (edge.equals(RectangleEdge.BOTTOM)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-26/source/org/jfree/chart/axis/Axis.java:1149: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (edge == RectangleEdge.LEFT) {
                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(edge, RectangleEdge.LEFT)) {' or 'else if (edge.equals(RectangleEdge.LEFT)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-26/source/org/jfree/chart/axis/Axis.java:1168: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (edge == RectangleEdge.RIGHT) {
                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(edge, RectangleEdge.RIGHT)) {' or 'else if (edge.equals(RectangleEdge.RIGHT)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-26/source/org/jfree/chart/axis/Axis.java:1214: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (edge == RectangleEdge.TOP) {
                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(edge, RectangleEdge.TOP)) {' or 'if (edge.equals(RectangleEdge.TOP)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-26/source/org/jfree/chart/axis/Axis.java:1218: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (edge == RectangleEdge.BOTTOM) {
                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(edge, RectangleEdge.BOTTOM)) {' or 'else if (edge.equals(RectangleEdge.BOTTOM)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-26/source/org/jfree/chart/axis/Axis.java:1222: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (edge == RectangleEdge.LEFT) {
                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(edge, RectangleEdge.LEFT)) {' or 'else if (edge.equals(RectangleEdge.LEFT)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-26/source/org/jfree/chart/axis/Axis.java:1226: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (edge == RectangleEdge.RIGHT) {
                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(edge, RectangleEdge.RIGHT)) {' or 'else if (edge.equals(RectangleEdge.RIGHT)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-26/source/org/jfree/chart/axis/Axis.java:1244: warning: [MissingOverride] clone overrides method in Object; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-26/source/org/jfree/chart/axis/Axis.java:1259: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
13 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-3

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-3/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-3/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-3/source/org/jfree/data/time/TimeSeries.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-3/source/org/jfree/data/time/TimeSeries.java:253: warning: [MissingOverride] getItemCount implements method in Series; expected @Override
    public int getItemCount() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getItemCount() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-3/source/org/jfree/data/time/TimeSeries.java:777: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        return addOrUpdate(period, new Double(value));
                                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return addOrUpdate(period, Double.valueOf(value));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-3/source/org/jfree/data/time/TimeSeries.java:1030: warning: [MissingOverride] clone overrides method in Series; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-3/source/org/jfree/data/time/TimeSeries.java:1135: warning: [MissingOverride] equals overrides method in Series; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-3/source/org/jfree/data/time/TimeSeries.java:1176: warning: [MissingOverride] hashCode overrides method in Series; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-3/source/org/jfree/data/time/TimeSeries.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-5

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-5/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-5/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-5/source/org/jfree/data/xy/XYSeries.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-5/source/org/jfree/data/xy/XYSeries.java:185: warning: [MissingOverride] getItemCount implements method in Series; expected @Override
    public int getItemCount() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getItemCount() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-5/source/org/jfree/data/xy/XYSeries.java:255: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        add(new Double(x), new Double(y), true);
            ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'add(Double.valueOf(x), new Double(y), true);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-5/source/org/jfree/data/xy/XYSeries.java:255: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        add(new Double(x), new Double(y), true);
                           ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'add(new Double(x), Double.valueOf(y), true);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-5/source/org/jfree/data/xy/XYSeries.java:269: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        add(new Double(x), new Double(y), notify);
            ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'add(Double.valueOf(x), new Double(y), notify);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-5/source/org/jfree/data/xy/XYSeries.java:269: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        add(new Double(x), new Double(y), notify);
                           ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'add(new Double(x), Double.valueOf(y), notify);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-5/source/org/jfree/data/xy/XYSeries.java:281: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        add(new Double(x), y);
            ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'add(Double.valueOf(x), y);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-5/source/org/jfree/data/xy/XYSeries.java:296: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        add(new Double(x), y, notify);
            ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'add(Double.valueOf(x), y, notify);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-5/source/org/jfree/data/xy/XYSeries.java:527: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        return addOrUpdate(new Double(x), new Double(y));
                           ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return addOrUpdate(Double.valueOf(x), new Double(y));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-5/source/org/jfree/data/xy/XYSeries.java:527: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        return addOrUpdate(new Double(x), new Double(y));
                                          ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return addOrUpdate(new Double(x), Double.valueOf(y));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-5/source/org/jfree/data/xy/XYSeries.java:633: warning: [MissingOverride] clone overrides method in Series; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-5/source/org/jfree/data/xy/XYSeries.java:678: warning: [MissingOverride] equals overrides method in Series; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-5/source/org/jfree/data/xy/XYSeries.java:709: warning: [MissingOverride] hashCode overrides method in Series; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-5/source/org/jfree/data/xy/XYSeries.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
12 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-4

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5309: warning: [EqualsHashCode] Classes that override equals should also override hashCode.
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/EqualsHashCode)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:717: warning: [MissingOverride] getPlotType implements method in Plot; expected @Override
    public String getPlotType() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getPlotType() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:728: warning: [MissingOverride] getOrientation implements method in Zoomable; expected @Override
    public PlotOrientation getOrientation() {
                           ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public PlotOrientation getOrientation() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:744: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (orientation != this.orientation) {
                        ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!orientation.equals(this.orientation)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:1464: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        axisIndices.add(new Integer(axisIndex));
                        ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'axisIndices.add(Integer.valueOf(axisIndex));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:1483: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:1500: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        axisIndices.add(new Integer(axisIndex));
                        ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'axisIndices.add(Integer.valueOf(axisIndex));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:1519: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2518: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2589: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2591: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2594: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.foregroundDomainMarkers.put(new Integer(index), markers);
                                                 ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.foregroundDomainMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2598: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2600: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2603: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.backgroundDomainMarkers.put(new Integer(index), markers);
                                                 ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.backgroundDomainMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2678: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2680: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2684: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2790: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2792: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2795: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.foregroundRangeMarkers.put(new Integer(index), markers);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.foregroundRangeMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2799: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(layer, Layer.BACKGROUND)) {' or 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2801: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2804: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                this.backgroundRangeMarkers.put(new Integer(index), markers);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'this.backgroundRangeMarkers.put(Integer.valueOf(index), markers);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2821: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2917: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2919: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:2923: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(index));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3064: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (this.orientation == PlotOrientation.HORIZONTAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3070: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (this.orientation == PlotOrientation.VERTICAL) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.orientation, PlotOrientation.VERTICAL)) {' or 'else if (this.orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3111: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (this.orientation == PlotOrientation.HORIZONTAL) {
                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3117: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            else if (this.orientation == PlotOrientation.VERTICAL) {
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(this.orientation, PlotOrientation.VERTICAL)) {' or 'else if (this.orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3150: warning: [MissingOverride] draw implements method in Plot; expected @Override
    public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3198: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (orient == PlotOrientation.VERTICAL) {
                           ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orient, PlotOrientation.VERTICAL)) {' or 'if (orient.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3211: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (orient == PlotOrientation.VERTICAL) {
                           ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orient, PlotOrientation.VERTICAL)) {' or 'if (orient.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3273: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (order == DatasetRenderingOrder.FORWARD) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(order, DatasetRenderingOrder.FORWARD)) {' or 'if (order.equals(DatasetRenderingOrder.FORWARD)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3305: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (order == DatasetRenderingOrder.REVERSE) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(order, DatasetRenderingOrder.REVERSE)) {' or 'else if (order.equals(DatasetRenderingOrder.REVERSE)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3349: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (orient == PlotOrientation.VERTICAL) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orient, PlotOrientation.VERTICAL)) {' or 'if (orient.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3371: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (orient == PlotOrientation.VERTICAL) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orient, PlotOrientation.VERTICAL)) {' or 'if (orient.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3411: warning: [MissingOverride] drawBackground overrides method in Plot; expected @Override
    public void drawBackground(Graphics2D g2, Rectangle2D area) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void drawBackground(Graphics2D g2, Rectangle2D area) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3461: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (this.orientation == PlotOrientation.HORIZONTAL) {
                                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3476: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (this.orientation == PlotOrientation.HORIZONTAL) {
                                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3491: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (this.orientation == PlotOrientation.HORIZONTAL) {
                                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3506: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if (this.orientation == PlotOrientation.HORIZONTAL) {
                                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3732: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (seriesOrder == SeriesRenderingOrder.REVERSE) {
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(seriesOrder, SeriesRenderingOrder.REVERSE)) {' or 'if (seriesOrder.equals(SeriesRenderingOrder.REVERSE)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3816: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                new Integer(index));
                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3843: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                new Integer(index));
                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(index));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3881: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                if ((tick.getTickType() == TickType.MINOR)
                                        ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if ((Objects.equals(tick.getTickType(), TickType.MINOR))' or 'if ((tick.getTickType().equals(TickType.MINOR))'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3887: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                else if ((tick.getTickType() == TickType.MAJOR)
                                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if ((Objects.equals(tick.getTickType(), TickType.MAJOR))' or 'else if ((tick.getTickType().equals(TickType.MAJOR))'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3932: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                    if ((tick.getTickType() == TickType.MINOR)
                                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if ((Objects.equals(tick.getTickType(), TickType.MINOR))' or 'if ((tick.getTickType().equals(TickType.MINOR))'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:3938: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                    else if ((tick.getTickType() == TickType.MAJOR)
                                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if ((Objects.equals(tick.getTickType(), TickType.MAJOR))' or 'else if ((tick.getTickType().equals(TickType.MAJOR))'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4113: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4114: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4117: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(layer, Layer.BACKGROUND)) {' or 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4139: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Integer key = new Integer(index);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer key = index;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4140: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (layer == Layer.FOREGROUND) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(layer, Layer.FOREGROUND)) {' or 'if (layer.equals(Layer.FOREGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4143: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        else if (layer == Layer.BACKGROUND) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'else if (Objects.equals(layer, Layer.BACKGROUND)) {' or 'else if (layer.equals(Layer.BACKGROUND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4167: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (getOrientation() == PlotOrientation.HORIZONTAL) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(getOrientation(), PlotOrientation.HORIZONTAL)) {' or 'if (getOrientation().equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4200: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (orientation == PlotOrientation.VERTICAL) {
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.VERTICAL)) {' or 'if (orientation.equals(PlotOrientation.VERTICAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4232: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (getOrientation() == PlotOrientation.HORIZONTAL) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(getOrientation(), PlotOrientation.HORIZONTAL)) {' or 'if (getOrientation().equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4266: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (orientation == PlotOrientation.HORIZONTAL) {
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(orientation, PlotOrientation.HORIZONTAL)) {' or 'if (orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4292: warning: [MissingOverride] handleClick overrides method in Plot; expected @Override
    public void handleClick(int x, int y, PlotRenderingInfo info) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void handleClick(int x, int y, PlotRenderingInfo info) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4329: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(i));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(i));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4359: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(i));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(i));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4425: warning: [MissingOverride] getDataRange implements method in ValueAxisPlot; expected @Override
    public Range getDataRange(ValueAxis axis) {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Range getDataRange(ValueAxis axis) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4437: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(domainIndex)));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(domainIndex)));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4455: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                    new Integer(rangeIndex)));
                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Integer.valueOf(rangeIndex)));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4528: warning: [MissingOverride] datasetChanged overrides method in Plot; expected @Override
    public void datasetChanged(DatasetChangeEvent event) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void datasetChanged(DatasetChangeEvent event) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4546: warning: [MissingOverride] rendererChanged implements method in RendererChangeListener; expected @Override
    public void rendererChanged(RendererChangeEvent event) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void rendererChanged(RendererChangeEvent event) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4957: warning: [MissingOverride] isDomainPannable implements method in Pannable; expected @Override
    public boolean isDomainPannable() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isDomainPannable() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:4981: warning: [MissingOverride] isRangePannable implements method in Pannable; expected @Override
    public boolean isRangePannable() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isRangePannable() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5006: warning: [MissingOverride] panDomainAxes implements method in Pannable; expected @Override
    public void panDomainAxes(double percent, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void panDomainAxes(double percent, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5033: warning: [MissingOverride] panRangeAxes implements method in Pannable; expected @Override
    public void panRangeAxes(double percent, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void panRangeAxes(double percent, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5060: warning: [MissingOverride] zoomDomainAxes implements method in Zoomable; expected @Override
    public void zoomDomainAxes(double factor, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomDomainAxes(double factor, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5078: warning: [MissingOverride] zoomDomainAxes implements method in Zoomable; expected @Override
    public void zoomDomainAxes(double factor, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomDomainAxes(double factor, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5089: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                    if (this.orientation == PlotOrientation.HORIZONTAL) {
                                         ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5117: warning: [MissingOverride] zoomDomainAxes implements method in Zoomable; expected @Override
    public void zoomDomainAxes(double lowerPercent, double upperPercent,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomDomainAxes(double lowerPercent, double upperPercent,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5136: warning: [MissingOverride] zoomRangeAxes implements method in Zoomable; expected @Override
    public void zoomRangeAxes(double factor, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomRangeAxes(double factor, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5155: warning: [MissingOverride] zoomRangeAxes implements method in Zoomable; expected @Override
    public void zoomRangeAxes(double factor, PlotRenderingInfo info,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomRangeAxes(double factor, PlotRenderingInfo info,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5166: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                    if (this.orientation == PlotOrientation.HORIZONTAL) {
                                         ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(this.orientation, PlotOrientation.HORIZONTAL)) {' or 'if (this.orientation.equals(PlotOrientation.HORIZONTAL)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5190: warning: [MissingOverride] zoomRangeAxes implements method in Zoomable; expected @Override
    public void zoomRangeAxes(double lowerPercent, double upperPercent,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void zoomRangeAxes(double lowerPercent, double upperPercent,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5208: warning: [MissingOverride] isDomainZoomable implements method in Zoomable; expected @Override
    public boolean isDomainZoomable() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isDomainZoomable() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5220: warning: [MissingOverride] isRangeZoomable implements method in Zoomable; expected @Override
    public boolean isRangeZoomable() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isRangeZoomable() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5271: warning: [MissingOverride] getLegendItems overrides method in Plot; expected @Override
    public LegendItemCollection getLegendItems() {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public LegendItemCollection getLegendItems() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5309: warning: [MissingOverride] equals overrides method in Plot; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5320: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this.orientation != that.orientation) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(this.orientation, that.orientation)) {' or 'if (!this.orientation.equals(that.orientation)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5520: warning: [MissingOverride] clone overrides method in Plot; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5713: warning: [MissingOverride] canSelectByPoint implements method in Selectable; expected @Override
    public boolean canSelectByPoint() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean canSelectByPoint() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5725: warning: [MissingOverride] canSelectByRegion implements method in Selectable; expected @Override
    public boolean canSelectByRegion() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean canSelectByRegion() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5734: warning: [MissingOverride] select implements method in Selectable; expected @Override
    public void select(double x, double y, Rectangle2D dataArea,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void select(double x, double y, Rectangle2D dataArea,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5748: warning: [MissingOverride] select implements method in Selectable; expected @Override
    public void select(GeneralPath region, Rectangle2D dataArea,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void select(GeneralPath region, Rectangle2D dataArea,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java:5847: warning: [MissingOverride] clearSelection implements method in Selectable; expected @Override
    public void clearSelection() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void clearSelection() {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-4/source/org/jfree/chart/plot/XYPlot.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
92 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-6

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-6/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-6/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-6/source/org/jfree/chart/util/ShapeList.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-6/source/org/jfree/chart/util/ShapeList.java:92: warning: [MissingOverride] clone overrides method in AbstractObjectList; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-6/source/org/jfree/chart/util/ShapeList.java:103: warning: [MissingOverride] equals overrides method in AbstractObjectList; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-6/source/org/jfree/chart/util/ShapeList.java:120: warning: [MissingOverride] hashCode overrides method in AbstractObjectList; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-7

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-7/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-7/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-7/source/org/jfree/data/time/TimePeriodValues.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-7/source/org/jfree/data/time/TimePeriodValues.java:192: warning: [MissingOverride] getItemCount implements method in Series; expected @Override
    public int getItemCount() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getItemCount() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-7/source/org/jfree/data/time/TimePeriodValues.java:414: warning: [MissingOverride] equals overrides method in Series; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-7/source/org/jfree/data/time/TimePeriodValues.java:450: warning: [MissingOverride] hashCode overrides method in Series; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-7/source/org/jfree/data/time/TimePeriodValues.java:479: warning: [MissingOverride] clone overrides method in Series; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-7/source/org/jfree/data/time/TimePeriodValues.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
4 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-8

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-8/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-8/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-8/source/org/jfree/data/time/Week.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-8/source/org/jfree/data/time/Week.java:175: error: [ChainingConstructorIgnoresParameter] The called constructor accepts a parameter with the same name and type as one of its caller's parameters, but its caller doesn't pass that parameter to it.  It's likely that it was intended to.
        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE, Locale.getDefault());
            ^
    (see http://errorprone.info/bugpattern/ChainingConstructorIgnoresParameter)
  Did you mean 'this(time, zone, Locale.getDefault());'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-8/source/org/jfree/data/time/Week.java:261: warning: [MissingOverride] getFirstMillisecond implements method in RegularTimePeriod; expected @Override
    public long getFirstMillisecond() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getFirstMillisecond() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-8/source/org/jfree/data/time/Week.java:275: warning: [MissingOverride] getLastMillisecond implements method in RegularTimePeriod; expected @Override
    public long getLastMillisecond() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getLastMillisecond() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-8/source/org/jfree/data/time/Week.java:287: warning: [MissingOverride] peg implements method in RegularTimePeriod; expected @Override
    public void peg(Calendar calendar) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void peg(Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-8/source/org/jfree/data/time/Week.java:300: warning: [MissingOverride] previous implements method in RegularTimePeriod; expected @Override
    public RegularTimePeriod previous() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RegularTimePeriod previous() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-8/source/org/jfree/data/time/Week.java:332: warning: [MissingOverride] next implements method in RegularTimePeriod; expected @Override
    public RegularTimePeriod next() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RegularTimePeriod next() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-8/source/org/jfree/data/time/Week.java:364: warning: [MissingOverride] getSerialIndex implements method in RegularTimePeriod; expected @Override
    public long getSerialIndex() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getSerialIndex() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-8/source/org/jfree/data/time/Week.java:379: warning: [MissingOverride] getFirstMillisecond implements method in RegularTimePeriod; expected @Override
    public long getFirstMillisecond(Calendar calendar) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getFirstMillisecond(Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-8/source/org/jfree/data/time/Week.java:404: warning: [MissingOverride] getLastMillisecond implements method in RegularTimePeriod; expected @Override
    public long getLastMillisecond(Calendar calendar) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getLastMillisecond(Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-8/source/org/jfree/data/time/Week.java:425: warning: [MissingOverride] toString overrides method in RegularTimePeriod; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-8/source/org/jfree/data/time/Week.java:439: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-8/source/org/jfree/data/time/Week.java:467: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-8/source/org/jfree/data/time/Week.java:484: warning: [MissingOverride] compareTo implements method in Comparable; expected @Override
    public int compareTo(Object o1) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(Object o1) {'?
1 error
12 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Chart-9

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-9/build:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-9/lib/servlet.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-9/source/org/jfree/data/time/TimeSeries.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-9/source/org/jfree/data/time/TimeSeries.java:239: warning: [MissingOverride] getItemCount implements method in Series; expected @Override
    public int getItemCount() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getItemCount() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-9/source/org/jfree/data/time/TimeSeries.java:677: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        return addOrUpdate(period, new Double(value));
                                   ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return addOrUpdate(period, Double.valueOf(value));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-9/source/org/jfree/data/time/TimeSeries.java:858: warning: [MissingOverride] clone overrides method in Series; expected @Override
    public Object clone() throws CloneNotSupportedException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() throws CloneNotSupportedException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-9/source/org/jfree/data/time/TimeSeries.java:965: warning: [MissingOverride] equals overrides method in Series; expected @Override
    public boolean equals(Object object) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object object) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-9/source/org/jfree/data/time/TimeSeries.java:1012: warning: [MissingOverride] hashCode overrides method in Series; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Chart-9/source/org/jfree/data/time/TimeSeries.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-1

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-1/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-1/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-1/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-1/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-1/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-1/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-1/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-1/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-1/src/com/google/javascript/jscomp/RemoveUnusedVars.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-1/src/com/google/javascript/jscomp/RemoveUnusedVars.java:827: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          toRemove.isParamList() &&
                                 ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(toRemove.isParamList() &&'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-10

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-10/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-10/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-10/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-10/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-10/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-10/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-10/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-10/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-10/src/com/google/javascript/jscomp/NodeUtil.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-10/src/com/google/javascript/jscomp/NodeUtil.java:967: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-10/src/com/google/javascript/jscomp/NodeUtil.java:970: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> OBJECT_METHODS_WITHOUT_SIDEEFFECTS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> OBJECT_METHODS_WITHOUT_SIDEEFFECTS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-10/src/com/google/javascript/jscomp/NodeUtil.java:972: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> REGEXP_METHODS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> REGEXP_METHODS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-10/src/com/google/javascript/jscomp/NodeUtil.java:974: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> STRING_REGEXP_METHODS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> STRING_REGEXP_METHODS ='?
4 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-100

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-100/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-100/lib/ant_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-100/lib/args4j_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-100/lib/google_common_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-100/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-100/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-100/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-100/lib/protobuf_deploy.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-100/src/com/google/javascript/jscomp/CheckGlobalThis.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-100/src/com/google/javascript/jscomp/CheckGlobalThis.java:84: warning: [MissingOverride] shouldTraverse implements method in Callback; expected @Override
  public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-100/src/com/google/javascript/jscomp/CheckGlobalThis.java:130: warning: [MissingOverride] visit implements method in Callback; expected @Override
  public void visit(NodeTraversal t, Node n, Node parent) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal t, Node n, Node parent) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-101

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-101/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-101/lib/ant_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-101/lib/args4j_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-101/lib/google_common_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-101/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-101/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-101/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-101/lib/protobuf_deploy.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-101/src/com/google/javascript/jscomp/CommandLineRunner.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-102

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-102/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-102/lib/ant_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-102/lib/google_common_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-102/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-102/lib/junit4-core.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-102/lib/junit4-legacy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-102/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-102/lib/protobuf_deploy.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-102/src/com/google/javascript/jscomp/Normalize.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-102/src/com/google/javascript/jscomp/Normalize.java:503: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private final class ScopeTicklingCallback
                ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private static final class ScopeTicklingCallback'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-104

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-104/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-104/lib/ant_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-104/lib/google_common_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-104/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-104/lib/junit4-core.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-104/lib/junit4-legacy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-104/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-104/lib/protobuf_deploy.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-104/src/com/google/javascript/rhino/jstype/UnionType.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-104/src/com/google/javascript/rhino/jstype/UnionType.java:490: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
      changed |= (alternate != newAlternate);
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'changed |= (!alternate.equals(newAlternate));'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-103

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/lib/ant_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/lib/google_common_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/lib/junit4-core.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/lib/junit4-legacy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/lib/protobuf_deploy.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/src/com/google/javascript/jscomp/ControlFlowAnalysis.java


************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/lib/ant_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/lib/google_common_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/lib/junit4-core.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/lib/junit4-legacy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/lib/protobuf_deploy.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/src/com/google/javascript/jscomp/DisambiguateProperties.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/src/com/google/javascript/jscomp/DisambiguateProperties.java:278: warning: [MissingOverride] process implements method in CompilerPass; expected @Override
  public void process(Node externs, Node root) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void process(Node externs, Node root) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/src/com/google/javascript/jscomp/DisambiguateProperties.java:328: warning: [MissingOverride] shouldTraverse implements method in Callback; expected @Override
    public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/src/com/google/javascript/jscomp/DisambiguateProperties.java:332: warning: [MissingOverride] enterScope implements method in ScopedCallback; expected @Override
    public void enterScope(NodeTraversal t) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void enterScope(NodeTraversal t) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/src/com/google/javascript/jscomp/DisambiguateProperties.java:340: warning: [MissingOverride] exitScope implements method in ScopedCallback; expected @Override
    public void exitScope(NodeTraversal t) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void exitScope(NodeTraversal t) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-103/src/com/google/javascript/jscomp/DisambiguateProperties.java:755: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
      while (objType != null && objType.getImplicitPrototype() != objType) {
                                                               ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'while (objType != null && !Objects.equals(objType.getImplicitPrototype(), objType)) {' or 'while (objType != null && !objType.getImplicitPrototype().equals(objType)) {'?
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-105

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-105/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-105/lib/ant_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-105/lib/google_common_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-105/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-105/lib/junit4-core.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-105/lib/junit4-legacy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-105/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-105/lib/protobuf_deploy.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-105/src/com/google/javascript/jscomp/FoldConstants.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-105/src/com/google/javascript/jscomp/FoldConstants.java:86: warning: [MissingOverride] process implements method in CompilerPass; expected @Override
  public void process(Node externs, Node jsRoot) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void process(Node externs, Node jsRoot) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-105/src/com/google/javascript/jscomp/FoldConstants.java:90: warning: [MissingOverride] visit implements method in Callback; expected @Override
  public void visit(NodeTraversal t, Node n, Node parent) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal t, Node n, Node parent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-105/src/com/google/javascript/jscomp/FoldConstants.java:917: warning: [MissingOverride] visit implements method in Callback; expected @Override
      public void visit(NodeTraversal t, Node n, Node parent) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal t, Node n, Node parent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-105/src/com/google/javascript/jscomp/FoldConstants.java:933: warning: [MissingOverride] visit implements method in Callback; expected @Override
      public void visit(NodeTraversal t, Node n, Node parent) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal t, Node n, Node parent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-105/src/com/google/javascript/jscomp/FoldConstants.java:953: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
      if (lval && type == Token.OR ||
               ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((lval && type == Token.OR) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-105/src/com/google/javascript/jscomp/FoldConstants.java:954: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          !lval && type == Token.AND) {
                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(!lval && type == Token.AND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-105/src/com/google/javascript/jscomp/FoldConstants.java:979: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (type == Token.OR && !rval ||
                             ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((type == Token.OR && !rval) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-105/src/com/google/javascript/jscomp/FoldConstants.java:980: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            type == Token.AND && rval) {
                              ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(type == Token.AND && rval)) {'?
8 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-107

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-107/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-107/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-107/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-107/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-107/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-107/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-107/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-107/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-107/src/com/google/javascript/jscomp/CommandLineRunner.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-107/src/com/google/javascript/jscomp/CommandLineRunner.java:886: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final List<String> DEFAULT_EXTERNS_NAMES = ImmutableList.of(
                           ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableList<String> DEFAULT_EXTERNS_NAMES = ImmutableList.of('?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-106

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-106/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-106/lib/google_common_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-106/lib/google_compiled_protos_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-106/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-106/lib/libtrunk_rhino_parser_jarjared.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-106/src/com/google/javascript/rhino/JSDocInfoBuilder.java


************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-106/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-106/lib/google_common_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-106/lib/google_compiled_protos_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-106/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-106/lib/libtrunk_rhino_parser_jarjared.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-106/src/com/google/javascript/jscomp/GlobalNamespace.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-106/src/com/google/javascript/jscomp/GlobalNamespace.java:130: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-106/src/com/google/javascript/jscomp/GlobalNamespace.java:234: warning: [MissingOverride] visit implements method in Callback; expected @Override
    public void visit(NodeTraversal t, Node n, Node parent) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal t, Node n, Node parent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-106/src/com/google/javascript/jscomp/GlobalNamespace.java:498: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
             (info.isConstructor() && valueNodeType == Token.FUNCTION ||
                                   ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '((info.isConstructor() && valueNodeType == Token.FUNCTION) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-106/src/com/google/javascript/jscomp/GlobalNamespace.java:499: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
              info.hasEnumParameterType() && valueNodeType == Token.OBJECTLIT);
                                          ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(info.hasEnumParameterType() && valueNodeType == Token.OBJECTLIT));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-106/src/com/google/javascript/jscomp/GlobalNamespace.java:895: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          (parent == null || parent.canCollapseUnannotatedChildNames()) &&
                                                                        ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '((parent == null || parent.canCollapseUnannotatedChildNames()) &&'?
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-108

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-108/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-108/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-108/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-108/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-108/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-108/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-108/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-108/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-108/src/com/google/javascript/jscomp/ScopedAliases.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-108/src/com/google/javascript/jscomp/ScopedAliases.java:191: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private abstract class AliasUsage {
                   ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private abstract static class AliasUsage {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-108/src/com/google/javascript/jscomp/ScopedAliases.java:537: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (lexicalVar != null && lexicalVar == aliases.get(name)) {
                                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (lexicalVar != null && lexicalVar.equals(aliases.get(name))) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-109

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-109/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-109/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-109/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-109/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-109/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-109/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-109/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-109/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-109/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-109/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java:978: error: [MissingCasesInEnumSwitch] Non-exhaustive switch; either add a default or handle the remaining cases: NG_INJECT, AUTHOR, CONSISTENTIDGENERATOR, and 44 others
            switch (annotation) {
            ^
    (see http://errorprone.info/bugpattern/MissingCasesInEnumSwitch)
1 error

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-11

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-11/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-11/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-11/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-11/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-11/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-11/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-11/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-11/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-11/src/com/google/javascript/jscomp/TypeCheck.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-11/src/com/google/javascript/jscomp/TypeCheck.java:1524: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
      if (baseConstructor != getNativeType(OBJECT_FUNCTION_TYPE) &&
                          ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(baseConstructor, getNativeType(OBJECT_FUNCTION_TYPE)) &&' or 'if (!baseConstructor.equals(getNativeType(OBJECT_FUNCTION_TYPE)) &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-11/src/com/google/javascript/jscomp/TypeCheck.java:1531: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (baseConstructor != getNativeType(OBJECT_FUNCTION_TYPE) &&
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(baseConstructor, getNativeType(OBJECT_FUNCTION_TYPE)) &&' or 'if (!baseConstructor.equals(getNativeType(OBJECT_FUNCTION_TYPE)) &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-11/src/com/google/javascript/jscomp/TypeCheck.java:1670: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            parameter != null && parameter.isVarArgs())) {
                              ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(parameter != null && parameter.isVarArgs()))) {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-111

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-111/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-111/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-111/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-111/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-111/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-111/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-111/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-111/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-111/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-110

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/src/com/google/javascript/rhino/Node.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/src/com/google/javascript/rhino/Node.java:1264: warning: [IterableAndIterator] Class should not implement both `Iterable` and `Iterator`
  private static final class SiblingNodeIterable
                       ^
    (see http://errorprone.info/bugpattern/IterableAndIterator)
1 warning

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/src/com/google/javascript/jscomp/ScopedAliases.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/src/com/google/javascript/jscomp/ScopedAliases.java:191: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private abstract class AliasUsage {
                   ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private abstract static class AliasUsage {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-110/src/com/google/javascript/jscomp/ScopedAliases.java:514: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (lexicalVar != null && lexicalVar == aliases.get(name)) {
                                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (lexicalVar != null && lexicalVar.equals(aliases.get(name))) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-112

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-112/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-112/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-112/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-112/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-112/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-112/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-112/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-112/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-112/src/com/google/javascript/jscomp/TypeInference.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-112/src/com/google/javascript/jscomp/TypeInference.java:143: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
              var.getType() == unknownType) {
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'Objects.equals(var.getType(), unknownType)) {' or 'var.getType().equals(unknownType)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-112/src/com/google/javascript/jscomp/TypeInference.java:211: error: [MissingCasesInEnumSwitch] Non-exhaustive switch; either add a default or handle the remaining cases: UNCOND, ON_EX, SYN_BLOCK
      switch (branch) {
      ^
    (see http://errorprone.info/bugpattern/MissingCasesInEnumSwitch)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-112/src/com/google/javascript/jscomp/TypeInference.java:1313: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
      if (type != narrowed) {
               ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!type.equals(narrowed)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-112/src/com/google/javascript/jscomp/TypeInference.java:1545: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
      if (nodeType == Token.AND && outcome ||
                                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((nodeType == Token.AND && outcome) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-112/src/com/google/javascript/jscomp/TypeInference.java:1546: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          nodeType == Token.OR && !outcome) {
                               ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(nodeType == Token.OR && !outcome)) {'?
1 error
4 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-113

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-113/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-113/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-113/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-113/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-113/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-113/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-113/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-113/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java:548: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            parent.getLastChild() == scopeRoot &&
                                               ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(parent.getLastChild() == scopeRoot &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java:1222: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private class UnrecognizedRequire {
          ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private static class UnrecognizedRequire {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-114

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-114/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-114/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-114/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-114/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-114/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-114/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-114/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-114/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-114/src/com/google/javascript/jscomp/NameAnalyzer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-114/src/com/google/javascript/jscomp/NameAnalyzer.java:115: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  static final Set<String> DEFAULT_GLOBAL_NAMES = ImmutableSet.of(
                  ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'static final ImmutableSet<String> DEFAULT_GLOBAL_NAMES = ImmutableSet.of('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-114/src/com/google/javascript/jscomp/NameAnalyzer.java:375: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private abstract class SpecialReferenceNode implements RefNode {
                   ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private abstract static class SpecialReferenceNode implements RefNode {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-115

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-115/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-115/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-115/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-115/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-115/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-115/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-115/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-115/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-115/src/com/google/javascript/jscomp/FunctionInjector.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-116

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-116/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-116/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-116/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-116/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-116/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-116/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-116/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-116/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-116/src/com/google/javascript/jscomp/FunctionInjector.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-117

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-117/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-117/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-117/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-117/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-117/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-117/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-117/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-117/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-117/src/com/google/javascript/jscomp/TypeValidator.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-117/src/com/google/javascript/jscomp/TypeValidator.java:544: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        varType != typeRegistry.getNativeType(UNKNOWN_TYPE) &&
                ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean '!varType.equals(typeRegistry.getNativeType(UNKNOWN_TYPE)) &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-117/src/com/google/javascript/jscomp/TypeValidator.java:546: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        newType != typeRegistry.getNativeType(UNKNOWN_TYPE)) {
                ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean '!newType.equals(typeRegistry.getNativeType(UNKNOWN_TYPE))) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-118

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-118/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-118/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-118/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-118/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-118/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-118/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-118/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-118/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-118/src/com/google/javascript/jscomp/DisambiguateProperties.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-118/src/com/google/javascript/jscomp/DisambiguateProperties.java:890: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        while (objType != null && objType.getImplicitPrototype() != objType) {
                                                                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'while (objType != null && !Objects.equals(objType.getImplicitPrototype(), objType)) {' or 'while (objType != null && !objType.getImplicitPrototype().equals(objType)) {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-119

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-119/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-119/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-119/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-119/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-119/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-119/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-119/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-119/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-119/src/com/google/javascript/jscomp/GlobalNamespace.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-119/src/com/google/javascript/jscomp/GlobalNamespace.java:588: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
             (info.isConstructor() && valueNode.isFunction() ||
                                   ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '((info.isConstructor() && valueNode.isFunction()) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-119/src/com/google/javascript/jscomp/GlobalNamespace.java:589: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
              info.isInterface() && valueNode.isFunction() ||
                                 ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(info.isInterface() && valueNode.isFunction()) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-119/src/com/google/javascript/jscomp/GlobalNamespace.java:590: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
              info.hasEnumParameterType() && valueNode.isObjectLit());
                                          ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(info.hasEnumParameterType() && valueNode.isObjectLit()));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-119/src/com/google/javascript/jscomp/GlobalNamespace.java:1068: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          (globalSets > 0 || localSets > 0) &&
                                            ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '((parent == null || parent.canCollapseUnannotatedChildNames()) &&'?
4 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-12

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-12/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-12/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-12/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-12/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-12/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-12/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-12/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-12/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-12/src/com/google/javascript/jscomp/MaybeReachingVariableUse.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-120

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-120/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-120/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-120/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-120/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-120/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-120/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-120/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-120/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-120/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-120/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java:488: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
    private static final Set<Integer> DECLARATION_PARENTS =
                            ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<Integer> DECLARATION_PARENTS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-120/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java:560: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          parent.isParamList() &&
                               ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(parent.isParamList() &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-120/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java:578: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
      return isDeclaration() &&
                             ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'return (isDeclaration() &&'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-121

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-121/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-121/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-121/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-121/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-121/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-121/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-121/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-121/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-121/src/com/google/javascript/jscomp/InlineVariables.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-121/src/com/google/javascript/jscomp/InlineVariables.java:110: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private class IdentifyConstants implements Predicate<Var> {
          ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private static class IdentifyConstants implements Predicate<Var> {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-121/src/com/google/javascript/jscomp/InlineVariables.java:120: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private class IdentifyLocals implements Predicate<Var> {
          ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private static class IdentifyLocals implements Predicate<Var> {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-122

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-122/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-122/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-122/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-122/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-122/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-122/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-122/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-122/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-122/src/com/google/javascript/jscomp/parsing/IRFactory.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-123

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-123/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-123/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-123/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-123/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-123/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-123/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-123/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-123/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-123/src/com/google/javascript/jscomp/CodeGenerator.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-123/src/com/google/javascript/jscomp/CodeGenerator.java:74: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    if (outputCharset == null || outputCharset == Charsets.US_ASCII) {
                                               ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (outputCharset == null || outputCharset.equals(Charsets.US_ASCII)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-123/src/com/google/javascript/jscomp/CodeGenerator.java:543: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {
                                                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '|| (n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first))) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-124

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-124/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-124/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-124/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-124/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-124/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-124/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-124/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-124/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-124/src/com/google/javascript/jscomp/ExploitAssigns.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-124/src/com/google/javascript/jscomp/ExploitAssigns.java:172: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
              leftSide.isGetProp() &&
                                   ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(leftSide.isGetProp() &&'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-125

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-125/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-125/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-125/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-125/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-125/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-125/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-125/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-125/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-125/src/com/google/javascript/jscomp/TypeCheck.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-125/src/com/google/javascript/jscomp/TypeCheck.java:1729: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
      if (baseConstructor != getNativeType(OBJECT_FUNCTION_TYPE) &&
                          ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(baseConstructor, getNativeType(OBJECT_FUNCTION_TYPE)) &&' or 'if (!baseConstructor.equals(getNativeType(OBJECT_FUNCTION_TYPE)) &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-125/src/com/google/javascript/jscomp/TypeCheck.java:1736: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (baseConstructor != getNativeType(OBJECT_FUNCTION_TYPE)) {
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(baseConstructor, getNativeType(OBJECT_FUNCTION_TYPE))) {' or 'if (!baseConstructor.equals(getNativeType(OBJECT_FUNCTION_TYPE))) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-125/src/com/google/javascript/jscomp/TypeCheck.java:1871: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            parameter != null && parameter.isVarArgs())) {
                              ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(parameter != null && parameter.isVarArgs()))) {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-126

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-126/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-126/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-126/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-126/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-126/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-126/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-126/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-126/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-126/src/com/google/javascript/jscomp/MinimizeExitPoints.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-127

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-127/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-127/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-127/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-127/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-127/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-127/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-127/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-127/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-128

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-128/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-128/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-128/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-128/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-128/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-128/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-128/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-128/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-128/src/com/google/javascript/jscomp/CodeGenerator.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-128/src/com/google/javascript/jscomp/CodeGenerator.java:71: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    if (outputCharset == null || outputCharset == Charsets.US_ASCII) {
                                               ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (outputCharset == null || outputCharset.equals(Charsets.US_ASCII)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-128/src/com/google/javascript/jscomp/CodeGenerator.java:529: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {
                                                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '|| (n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first))) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-129

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-129/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-129/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-129/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-129/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-129/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-129/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-129/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-129/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-129/src/com/google/javascript/jscomp/PrepareAst.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-13

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-13/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-13/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-13/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-13/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-13/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-13/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-13/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-13/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-13/src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-13/src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java:141: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
    if (node.getParent() != null && node.isFunction() || node.isScript()) {
                                 ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((node.getParent() != null && node.isFunction()) || node.isScript()) {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-130

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-130/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-130/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-130/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-130/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-130/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-130/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-130/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-130/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-130/src/com/google/javascript/jscomp/CollapseProperties.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-131

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-131/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-131/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-131/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-131/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-131/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-131/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-131/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-131/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-131/src/com/google/javascript/rhino/TokenStream.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-131/src/com/google/javascript/rhino/TokenStream.java:185: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (X!=null && X!=s && !X.equals(s)) return false;
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (X!=null && !X.equals(s) && !X.equals(s)) return false;'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-132

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-132/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-132/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-132/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-132/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-132/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-132/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-132/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-132/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-132/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-132/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java:1233: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          if (type == Token.OR && !rval ||
                               ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((type == Token.OR && !rval) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-132/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java:1234: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
              type == Token.AND && rval) {
                                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(type == Token.AND && rval)) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-133

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-133/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-133/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-133/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-133/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-133/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-133/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-133/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-133/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-133/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-133/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java:906: error: [MissingCasesInEnumSwitch] Non-exhaustive switch; either add a default or handle the remaining cases: NG_INJECT, AUTHOR, CONSISTENTIDGENERATOR, and 40 others
                    switch (annotation) {
                    ^
    (see http://errorprone.info/bugpattern/MissingCasesInEnumSwitch)
1 error

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-15

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-15/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-15/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-15/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-15/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-15/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-15/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-15/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-15/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-15/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-14

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-14/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-14/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-14/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-14/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-14/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-14/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-14/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-14/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-14/src/com/google/javascript/jscomp/ControlFlowAnalysis.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-16

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-16/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-16/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-16/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-16/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-16/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-16/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-16/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-16/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-16/src/com/google/javascript/jscomp/ScopedAliases.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-16/src/com/google/javascript/jscomp/ScopedAliases.java:151: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private class AliasedNode implements AliasUsage {
          ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private static class AliasedNode implements AliasUsage {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-16/src/com/google/javascript/jscomp/ScopedAliases.java:168: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private class AliasedTypeNode implements AliasUsage {
          ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private static class AliasedTypeNode implements AliasUsage {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-16/src/com/google/javascript/jscomp/ScopedAliases.java:404: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (lexicalVar != null && lexicalVar == aliases.get(name)) {
                                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (lexicalVar != null && lexicalVar.equals(aliases.get(name))) {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-17

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-17/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-17/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-17/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-17/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-17/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-17/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-17/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-17/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-17/src/com/google/javascript/jscomp/TypedScopeCreator.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-19

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-19/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-19/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-19/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-19/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-19/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-19/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-19/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-19/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-19/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-18

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-18/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-18/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-18/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-18/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-18/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-18/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-18/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-18/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-18/src/com/google/javascript/jscomp/Compiler.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-18/src/com/google/javascript/jscomp/Compiler.java:78: warning: [JavaLangClash] com.google.javascript.jscomp.Compiler clashes with java.lang.Compiler
public class Compiler extends AbstractCompiler {
       ^
  
    (see http://errorprone.info/bugpattern/JavaLangClash)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-18/src/com/google/javascript/jscomp/Compiler.java:646: warning: [ThreadJoinLoop] Thread.join needs to be surrounded by a loop until it succeeds, as in Uninterruptibles.joinUninterruptibly.
          th.join();
                 ^
    (see http://errorprone.info/bugpattern/ThreadJoinLoop)
  Did you mean 'Uninterruptibles.joinUninterruptibly(th);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-18/src/com/google/javascript/jscomp/Compiler.java:1965: error: [MissingCasesInEnumSwitch] Non-exhaustive switch; either add a default or handle the remaining cases: ECMASCRIPT3
    switch (options.getLanguageIn()) {
    ^
    (see http://errorprone.info/bugpattern/MissingCasesInEnumSwitch)
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-18/src/com/google/javascript/jscomp/Compiler.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
1 error
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-20

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-20/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-20/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-20/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-20/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-20/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-20/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-20/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-20/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java:1229: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          if (type == Token.OR && !rval ||
                               ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((type == Token.OR && !rval) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java:1230: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
              type == Token.AND && rval) {
                                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(type == Token.AND && rval)) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-2

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-2/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-2/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-2/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-2/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-2/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-2/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-2/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-2/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-2/src/com/google/javascript/jscomp/TypeCheck.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-2/src/com/google/javascript/jscomp/TypeCheck.java:1606: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
      if (baseConstructor != getNativeType(OBJECT_FUNCTION_TYPE) &&
                          ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(baseConstructor, getNativeType(OBJECT_FUNCTION_TYPE)) &&' or 'if (!baseConstructor.equals(getNativeType(OBJECT_FUNCTION_TYPE)) &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-2/src/com/google/javascript/jscomp/TypeCheck.java:1613: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (baseConstructor != getNativeType(OBJECT_FUNCTION_TYPE)) {
                            ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(baseConstructor, getNativeType(OBJECT_FUNCTION_TYPE))) {' or 'if (!baseConstructor.equals(getNativeType(OBJECT_FUNCTION_TYPE))) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-2/src/com/google/javascript/jscomp/TypeCheck.java:1748: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            parameter != null && parameter.isVarArgs())) {
                              ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(parameter != null && parameter.isVarArgs()))) {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-21

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-21/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-21/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-21/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-21/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-21/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-21/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-21/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-21/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-21/src/com/google/javascript/jscomp/CheckSideEffects.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-22

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-22/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-22/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-22/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-22/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-22/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-22/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-22/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-22/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-22/src/com/google/javascript/jscomp/CheckSideEffects.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-24

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-24/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-24/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-24/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-24/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-24/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-24/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-24/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-24/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-24/src/com/google/javascript/jscomp/ScopedAliases.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-24/src/com/google/javascript/jscomp/ScopedAliases.java:148: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private class AliasedNode implements AliasUsage {
          ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private static class AliasedNode implements AliasUsage {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-24/src/com/google/javascript/jscomp/ScopedAliases.java:165: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private class AliasedTypeNode implements AliasUsage {
          ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private static class AliasedTypeNode implements AliasUsage {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-24/src/com/google/javascript/jscomp/ScopedAliases.java:337: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (lexicalVar != null && lexicalVar == aliases.get(name)) {
                                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (lexicalVar != null && lexicalVar.equals(aliases.get(name))) {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-23

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-23/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-23/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-23/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-23/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-23/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-23/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-23/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-23/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java:576: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
      if (lval && type == Token.OR ||
               ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((lval && type == Token.OR) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java:577: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          !lval && type == Token.AND) {
                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(!lval && type == Token.AND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-23/src/com/google/javascript/jscomp/PeepholeFoldConstants.java:1171: error: [MissingCasesInEnumSwitch] Non-exhaustive switch; either add a default or handle the remaining cases: UNKNOWN
      switch (value) {
      ^
    (see http://errorprone.info/bugpattern/MissingCasesInEnumSwitch)
1 error
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-26

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-26/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-26/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-26/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-26/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-26/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-26/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-26/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-26/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java:246: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private class SuffixVarsCallback extends AbstractPostOrderCallback {
          ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private static class SuffixVarsCallback extends AbstractPostOrderCallback {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-25

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-25/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-25/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-25/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-25/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-25/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-25/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-25/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-25/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-25/src/com/google/javascript/jscomp/TypeInference.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-25/src/com/google/javascript/jscomp/TypeInference.java:156: error: [MissingCasesInEnumSwitch] Non-exhaustive switch; either add a default or handle the remaining cases: UNCOND, ON_EX, SYN_BLOCK
      switch (branch) {
      ^
    (see http://errorprone.info/bugpattern/MissingCasesInEnumSwitch)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-25/src/com/google/javascript/jscomp/TypeInference.java:1134: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
      if (type != narrowed) {
               ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!type.equals(narrowed)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-25/src/com/google/javascript/jscomp/TypeInference.java:1339: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
      if (nodeType == Token.AND && outcome ||
                                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((nodeType == Token.AND && outcome) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-25/src/com/google/javascript/jscomp/TypeInference.java:1340: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          nodeType == Token.OR && !outcome) {
                               ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(nodeType == Token.OR && !outcome)) {'?
1 error
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-27

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-27/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-27/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-27/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-27/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-27/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-27/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-27/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-27/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-27/src/com/google/javascript/rhino/IR.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-28

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-28/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-28/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-28/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-28/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-28/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-28/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-28/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-28/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-28/src/com/google/javascript/jscomp/InlineCostEstimator.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-29

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-29/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-29/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-29/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-29/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-29/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-29/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-29/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-29/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-29/src/com/google/javascript/jscomp/InlineObjectLiterals.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-3

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-3/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-3/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-3/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-3/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-3/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-3/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-3/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-3/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-31

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-31/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-31/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-31/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-31/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-31/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-31/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-31/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-31/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-31/src/com/google/javascript/jscomp/Compiler.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-31/src/com/google/javascript/jscomp/Compiler.java:77: warning: [JavaLangClash] com.google.javascript.jscomp.Compiler clashes with java.lang.Compiler
public class Compiler extends AbstractCompiler {
       ^
  
    (see http://errorprone.info/bugpattern/JavaLangClash)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-31/src/com/google/javascript/jscomp/Compiler.java:642: warning: [ThreadJoinLoop] Thread.join needs to be surrounded by a loop until it succeeds, as in Uninterruptibles.joinUninterruptibly.
          th.join();
                 ^
    (see http://errorprone.info/bugpattern/ThreadJoinLoop)
  Did you mean 'Uninterruptibles.joinUninterruptibly(th);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-31/src/com/google/javascript/jscomp/Compiler.java:1918: error: [MissingCasesInEnumSwitch] Non-exhaustive switch; either add a default or handle the remaining cases: ECMASCRIPT3
    switch (options.getLanguageIn()) {
    ^
    (see http://errorprone.info/bugpattern/MissingCasesInEnumSwitch)
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-31/src/com/google/javascript/jscomp/Compiler.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
1 error
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-30

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java


************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java:77: warning: [EqualsHashCode] Classes that override equals should also override hashCode.
    public boolean equals(Object other) {
                   ^
    (see http://errorprone.info/bugpattern/EqualsHashCode)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java:140: warning: [EqualsHashCode] Classes that override equals should also override hashCode.
    public boolean equals(Object other) {
                   ^
    (see http://errorprone.info/bugpattern/EqualsHashCode)
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-32

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-32/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-32/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-32/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-32/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-32/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-32/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-32/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-32/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java:849: error: [MissingCasesInEnumSwitch] Non-exhaustive switch; either add a default or handle the remaining cases: AUTHOR, CONSISTENTIDGENERATOR, CONSTANT, and 38 others
                    switch (annotation) {
                    ^
    (see http://errorprone.info/bugpattern/MissingCasesInEnumSwitch)
1 error

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-33

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-33/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-33/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-33/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-33/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-33/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-33/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-33/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-33/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java:326: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    return propertyType != nativePropertyType;
                        ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'return !Objects.equals(propertyType, nativePropertyType);' or 'return !propertyType.equals(nativePropertyType);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java:515: warning: [MissingOverride] setOwnerFunction overrides method in ObjectType; expected @Override
  void setOwnerFunction(FunctionType type) {
       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override void setOwnerFunction(FunctionType type) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-35

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-35/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-35/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-35/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-35/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-35/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-35/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-35/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-35/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-35/src/com/google/javascript/jscomp/TypeInference.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-35/src/com/google/javascript/jscomp/TypeInference.java:154: error: [MissingCasesInEnumSwitch] Non-exhaustive switch; either add a default or handle the remaining cases: UNCOND, ON_EX, SYN_BLOCK
      switch (branch) {
      ^
    (see http://errorprone.info/bugpattern/MissingCasesInEnumSwitch)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-35/src/com/google/javascript/jscomp/TypeInference.java:819: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (type != narrowed) {
                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!type.equals(narrowed)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-35/src/com/google/javascript/jscomp/TypeInference.java:835: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
      if (type != narrowed) {
               ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!type.equals(narrowed)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-35/src/com/google/javascript/jscomp/TypeInference.java:1147: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
      if (type != narrowed) {
               ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!type.equals(narrowed)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-35/src/com/google/javascript/jscomp/TypeInference.java:1352: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
      if (nodeType == Token.AND && outcome ||
                                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((nodeType == Token.AND && outcome) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-35/src/com/google/javascript/jscomp/TypeInference.java:1353: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          nodeType == Token.OR && !outcome) {
                               ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(nodeType == Token.OR && !outcome)) {'?
1 error
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-34

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/src/com/google/javascript/jscomp/CodePrinter.java


************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/src/com/google/javascript/jscomp/CodeGenerator.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/src/com/google/javascript/jscomp/CodeGenerator.java:51: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    if (outputCharset == null || outputCharset == Charsets.US_ASCII) {
                                               ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (outputCharset == null || outputCharset.equals(Charsets.US_ASCII)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-34/src/com/google/javascript/jscomp/CodeGenerator.java:513: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {
                                                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '|| (n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first))) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-36

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-36/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-36/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-36/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-36/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-36/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-36/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-36/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-36/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-36/src/com/google/javascript/jscomp/InlineVariables.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-36/src/com/google/javascript/jscomp/InlineVariables.java:110: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private class IdentifyConstants implements Predicate<Var> {
          ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private static class IdentifyConstants implements Predicate<Var> {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-36/src/com/google/javascript/jscomp/InlineVariables.java:120: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private class IdentifyLocals implements Predicate<Var> {
          ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private static class IdentifyLocals implements Predicate<Var> {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-38

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-38/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-38/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-38/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-38/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-38/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-38/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-38/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-38/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-38/src/com/google/javascript/jscomp/CodeConsumer.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-39

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-39/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-39/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-39/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-39/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-39/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-39/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-39/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-39/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-39/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java:326: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    return propertyType != nativePropertyType;
                        ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'return !Objects.equals(propertyType, nativePropertyType);' or 'return !propertyType.equals(nativePropertyType);'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-37

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/src/com/google/javascript/jscomp/parsing/IRFactory.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/src/com/google/javascript/jscomp/parsing/IRFactory.java:96: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> ES5_RESERVED_KEYWORDS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> ES5_RESERVED_KEYWORDS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/src/com/google/javascript/jscomp/parsing/IRFactory.java:100: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> ES5_STRICT_RESERVED_KEYWORDS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> ES5_STRICT_RESERVED_KEYWORDS ='?
2 warnings

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-37/src/com/google/javascript/jscomp/NodeTraversal.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-4

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-4/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-4/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-4/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-4/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-4/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-4/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-4/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-4/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-4/src/com/google/javascript/rhino/jstype/NamedType.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-4/src/com/google/javascript/rhino/jstype/NamedType.java:323: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        ((EnumElementType) referencedType).getPrimitiveType() == this) {
                                                              ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'Objects.equals(((EnumElementType) referencedType).getPrimitiveType(), this)) {' or '((EnumElementType) referencedType).getPrimitiveType().equals(this)) {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-40

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-40/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-40/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-40/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-40/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-40/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-40/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-40/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-40/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-40/src/com/google/javascript/jscomp/NameAnalyzer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-40/src/com/google/javascript/jscomp/NameAnalyzer.java:112: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  static final Set<String> DEFAULT_GLOBAL_NAMES = ImmutableSet.of(
                  ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'static final ImmutableSet<String> DEFAULT_GLOBAL_NAMES = ImmutableSet.of('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-40/src/com/google/javascript/jscomp/NameAnalyzer.java:372: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private abstract class SpecialReferenceNode implements RefNode {
                   ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private abstract static class SpecialReferenceNode implements RefNode {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-40/src/com/google/javascript/jscomp/NameAnalyzer.java:820: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            NodeUtil.isGet(n) && !parent.isGetProp())) {
                              ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(NodeUtil.isGet(n) && !parent.isGetProp()))) {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-41

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-41/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-41/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-41/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-41/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-41/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-41/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-41/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-41/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-41/src/com/google/javascript/jscomp/FunctionTypeBuilder.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-42

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-42/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-42/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-42/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-42/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-42/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-42/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-42/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-42/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-42/src/com/google/javascript/jscomp/parsing/IRFactory.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-42/src/com/google/javascript/jscomp/parsing/IRFactory.java:96: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> ES5_RESERVED_KEYWORDS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> ES5_RESERVED_KEYWORDS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-42/src/com/google/javascript/jscomp/parsing/IRFactory.java:100: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> ES5_STRICT_RESERVED_KEYWORDS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> ES5_STRICT_RESERVED_KEYWORDS ='?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-43

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-43/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-43/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-43/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-43/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-43/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-43/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-43/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-43/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-43/src/com/google/javascript/jscomp/TypedScopeCreator.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-44

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-44/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-44/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-44/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-44/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-44/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-44/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-44/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-44/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-44/src/com/google/javascript/jscomp/CodeConsumer.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-45

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-45/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-45/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-45/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-45/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-45/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-45/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-45/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-45/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-45/src/com/google/javascript/jscomp/RemoveUnusedVars.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-45/src/com/google/javascript/jscomp/RemoveUnusedVars.java:806: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          toRemove.isParamList() &&
                                 ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(toRemove.isParamList() &&'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-46

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-46/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-46/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-46/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-46/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-46/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-46/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-46/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-46/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-46/src/com/google/javascript/rhino/jstype/RecordType.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-46/src/com/google/javascript/rhino/jstype/RecordType.java:103: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    if (otherRecord == this) {
                    ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(otherRecord, this)) {' or 'if (otherRecord.equals(this)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-46/src/com/google/javascript/rhino/jstype/RecordType.java:291: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
      if (type != resolvedType) {
               ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!type.equals(resolvedType)) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-48

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-48/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-48/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-48/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-48/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-48/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-48/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-48/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-48/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-48/src/com/google/javascript/jscomp/TypedScopeCreator.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-47

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-47/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-47/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-47/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-47/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-47/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-47/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-47/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-47/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-47/src/com/google/javascript/jscomp/SourceMap.java


************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-47/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-47/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-47/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-47/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-47/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-47/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-47/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-47/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-47/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-49

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-49/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-49/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-49/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-49/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-49/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-49/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-49/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-49/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-5

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-5/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-5/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-5/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-5/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-5/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-5/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-5/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-5/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-5/src/com/google/javascript/jscomp/InlineObjectLiterals.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-50

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-50/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-50/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-50/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-50/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-50/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-50/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-50/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-50/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-50/src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-51

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-51/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-51/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-51/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-51/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-51/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-51/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-51/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-51/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-51/src/com/google/javascript/jscomp/CodeConsumer.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-52

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-52/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-52/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-52/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-52/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-52/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-52/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-52/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-52/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-52/src/com/google/javascript/jscomp/CodeGenerator.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-52/src/com/google/javascript/jscomp/CodeGenerator.java:52: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    if (outputCharset == null || outputCharset == Charsets.US_ASCII) {
                                               ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (outputCharset == null || outputCharset.equals(Charsets.US_ASCII)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-52/src/com/google/javascript/jscomp/CodeGenerator.java:521: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {
                                                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '|| (n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first))) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-53

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-53/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-53/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-53/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-53/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-53/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-53/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-53/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-53/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-53/src/com/google/javascript/jscomp/InlineObjectLiterals.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-55

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-55/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-55/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-55/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-55/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-55/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-55/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-55/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-55/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-55/src/com/google/javascript/jscomp/FunctionRewriter.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-56

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-56/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-56/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-56/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-56/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-56/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-56/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-56/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-56/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-56/src/com/google/javascript/jscomp/SourceFile.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-56/src/com/google/javascript/jscomp/SourceFile.java:452: warning: [DefaultCharset] Implicit use of the platform default charset, which can result in e.g. non-ASCII characters being silently replaced with '?' in many environments
        return new FileReader(file);
               ^
    (see http://errorprone.info/bugpattern/DefaultCharset)
  Did you mean 'return Files.newReader(file, UTF_8);' or 'return Files.newReader(file, Charset.defaultCharset());'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-54

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/src/com/google/javascript/jscomp/TypedScopeCreator.java


************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/src/com/google/javascript/rhino/jstype/FunctionType.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/src/com/google/javascript/rhino/jstype/FunctionType.java:290: warning: [MissingOverride] getOwnPropertyNames overrides method in PrototypeObjectType; expected @Override
  public Set<String> getOwnPropertyNames() {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Set<String> getOwnPropertyNames() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/src/com/google/javascript/rhino/jstype/FunctionType.java:362: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    if (isConstructor() && prototype == getInstanceType()) {
                                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (isConstructor() && prototype.equals(getInstanceType())) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/src/com/google/javascript/rhino/jstype/FunctionType.java:774: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        return this == that;
                    ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'return this.equals(that);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/src/com/google/javascript/rhino/jstype/FunctionType.java:808: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    if (this == registry.getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE)) {
             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (this.equals(registry.getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE))) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/src/com/google/javascript/rhino/jstype/FunctionType.java:1044: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
      changed |= (resolvedIface != iface);
                                ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'changed |= (!Objects.equals(resolvedIface, iface));' or 'changed |= (!resolvedIface.equals(iface));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/src/com/google/javascript/rhino/jstype/FunctionType.java:1062: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    if (this == registry.getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE)) {
             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (this.equals(registry.getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE))) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-54/src/com/google/javascript/rhino/jstype/FunctionType.java:1094: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    if (type == this) {
             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(type, this)) {' or 'if (type.equals(this)) {'?
7 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-57

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-57/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-57/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-57/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-57/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-57/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-57/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-57/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-57/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-57/src/com/google/javascript/jscomp/ClosureCodingConvention.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-58

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-58/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-58/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-58/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-58/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-58/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-58/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-58/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-58/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-59

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/src/com/google/javascript/jscomp/Compiler.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/src/com/google/javascript/jscomp/Compiler.java:68: warning: [JavaLangClash] com.google.javascript.jscomp.Compiler clashes with java.lang.Compiler
public class Compiler extends AbstractCompiler {
       ^
  
    (see http://errorprone.info/bugpattern/JavaLangClash)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/src/com/google/javascript/jscomp/Compiler.java:556: warning: [MissingOverride] call implements method in Callable; expected @Override
      public Result call() throws Exception {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Result call() throws Exception {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/src/com/google/javascript/jscomp/Compiler.java:593: warning: [MissingOverride] run implements method in Runnable; expected @Override
      public void run() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void run() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/src/com/google/javascript/jscomp/Compiler.java:614: warning: [ThreadJoinLoop] Thread.join needs to be surrounded by a loop until it succeeds, as in Uninterruptibles.joinUninterruptibly.
          th.join();
                 ^
    (see http://errorprone.info/bugpattern/ThreadJoinLoop)
  Did you mean 'Uninterruptibles.joinUninterruptibly(th);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/src/com/google/javascript/jscomp/Compiler.java:936: warning: [MissingOverride] get implements method in Supplier; expected @Override
      public String get() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String get() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/src/com/google/javascript/jscomp/Compiler.java:1321: warning: [MissingOverride] call implements method in Callable; expected @Override
      public String call() throws Exception {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String call() throws Exception {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/src/com/google/javascript/jscomp/Compiler.java:1346: warning: [MissingOverride] call implements method in Callable; expected @Override
      public String[] call() throws Exception {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String[] call() throws Exception {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/src/com/google/javascript/jscomp/Compiler.java:1371: warning: [MissingOverride] call implements method in Callable; expected @Override
      public String call() throws Exception {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String call() throws Exception {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/src/com/google/javascript/jscomp/Compiler.java:1397: warning: [MissingOverride] call implements method in Callable; expected @Override
      public String[] call() throws Exception {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String[] call() throws Exception {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/src/com/google/javascript/jscomp/Compiler.java:1433: warning: [MissingOverride] call implements method in Callable; expected @Override
      public Void call() throws Exception {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Void call() throws Exception {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/src/com/google/javascript/jscomp/Compiler.java:1712: error: [MissingCasesInEnumSwitch] Non-exhaustive switch; either add a default or handle the remaining cases: ECMASCRIPT3
    switch (options.getLanguageIn()) {
    ^
    (see http://errorprone.info/bugpattern/MissingCasesInEnumSwitch)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/src/com/google/javascript/jscomp/Compiler.java:1859: warning: [MissingOverride] getSourceLine implements method in SourceExcerptProvider; expected @Override
  public String getSourceLine(String sourceName, int lineNumber) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getSourceLine(String sourceName, int lineNumber) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-59/src/com/google/javascript/jscomp/Compiler.java:1870: warning: [MissingOverride] getSourceRegion implements method in SourceExcerptProvider; expected @Override
  public Region getSourceRegion(String sourceName, int lineNumber) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Region getSourceRegion(String sourceName, int lineNumber) {'?
1 error
12 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-6

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-6/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-6/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-6/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-6/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-6/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-6/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-6/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-6/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-6/src/com/google/javascript/jscomp/TypeValidator.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-6/src/com/google/javascript/jscomp/TypeValidator.java:546: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        varType != typeRegistry.getNativeType(UNKNOWN_TYPE) &&
                ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean '!varType.equals(typeRegistry.getNativeType(UNKNOWN_TYPE)) &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-6/src/com/google/javascript/jscomp/TypeValidator.java:548: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        newType != typeRegistry.getNativeType(UNKNOWN_TYPE)) {
                ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean '!newType.equals(typeRegistry.getNativeType(UNKNOWN_TYPE))) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-60

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/src/com/google/javascript/jscomp/NodeUtil.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/src/com/google/javascript/jscomp/NodeUtil.java:904: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/src/com/google/javascript/jscomp/NodeUtil.java:907: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> OBJECT_METHODS_WITHOUT_SIDEEFFECTS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> OBJECT_METHODS_WITHOUT_SIDEEFFECTS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/src/com/google/javascript/jscomp/NodeUtil.java:909: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> REGEXP_METHODS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> REGEXP_METHODS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/src/com/google/javascript/jscomp/NodeUtil.java:911: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> STRING_REGEXP_METHODS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> STRING_REGEXP_METHODS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/src/com/google/javascript/jscomp/NodeUtil.java:1201: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/src/com/google/javascript/jscomp/NodeUtil.java:1253: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/src/com/google/javascript/jscomp/NodeUtil.java:1314: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/src/com/google/javascript/jscomp/NodeUtil.java:2485: warning: [MissingOverride] visit implements method in Visitor; expected @Override
    public void visit(Node n) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/src/com/google/javascript/jscomp/NodeUtil.java:2593: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/src/com/google/javascript/jscomp/NodeUtil.java:2609: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/src/com/google/javascript/jscomp/NodeUtil.java:2619: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/src/com/google/javascript/jscomp/NodeUtil.java:2628: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-60/src/com/google/javascript/jscomp/NodeUtil.java:2639: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
13 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-61

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/src/com/google/javascript/jscomp/NodeUtil.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/src/com/google/javascript/jscomp/NodeUtil.java:900: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/src/com/google/javascript/jscomp/NodeUtil.java:903: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> OBJECT_METHODS_WITHOUT_SIDEEFFECTS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> OBJECT_METHODS_WITHOUT_SIDEEFFECTS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/src/com/google/javascript/jscomp/NodeUtil.java:905: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> REGEXP_METHODS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> REGEXP_METHODS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/src/com/google/javascript/jscomp/NodeUtil.java:907: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> STRING_REGEXP_METHODS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> STRING_REGEXP_METHODS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/src/com/google/javascript/jscomp/NodeUtil.java:1190: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/src/com/google/javascript/jscomp/NodeUtil.java:1242: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/src/com/google/javascript/jscomp/NodeUtil.java:1303: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/src/com/google/javascript/jscomp/NodeUtil.java:2474: warning: [MissingOverride] visit implements method in Visitor; expected @Override
    public void visit(Node n) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/src/com/google/javascript/jscomp/NodeUtil.java:2582: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/src/com/google/javascript/jscomp/NodeUtil.java:2598: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/src/com/google/javascript/jscomp/NodeUtil.java:2608: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/src/com/google/javascript/jscomp/NodeUtil.java:2617: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-61/src/com/google/javascript/jscomp/NodeUtil.java:2628: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
13 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-62

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-62/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-62/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-62/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-62/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-62/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-62/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-62/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-62/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java:58: warning: [MissingOverride] formatError implements method in MessageFormatter; expected @Override
  public String formatError(JSError error) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String formatError(JSError error) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java:62: warning: [MissingOverride] formatWarning implements method in MessageFormatter; expected @Override
  public String formatWarning(JSError warning) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String formatWarning(JSError warning) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java:121: warning: [MissingOverride] formatLine implements method in ExcerptFormatter; expected @Override
    public String formatLine(String line, int lineNumber) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String formatLine(String line, int lineNumber) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java:125: warning: [MissingOverride] formatRegion implements method in ExcerptFormatter; expected @Override
    public String formatRegion(Region region) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String formatRegion(Region region) {'?
4 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-63

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-63/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-63/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-63/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-63/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-63/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-63/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-63/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-63/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-63/src/com/google/javascript/jscomp/LightweightMessageFormatter.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-63/src/com/google/javascript/jscomp/LightweightMessageFormatter.java:58: warning: [MissingOverride] formatError implements method in MessageFormatter; expected @Override
  public String formatError(JSError error) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String formatError(JSError error) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-63/src/com/google/javascript/jscomp/LightweightMessageFormatter.java:62: warning: [MissingOverride] formatWarning implements method in MessageFormatter; expected @Override
  public String formatWarning(JSError warning) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String formatWarning(JSError warning) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-63/src/com/google/javascript/jscomp/LightweightMessageFormatter.java:121: warning: [MissingOverride] formatLine implements method in ExcerptFormatter; expected @Override
    public String formatLine(String line, int lineNumber) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String formatLine(String line, int lineNumber) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-63/src/com/google/javascript/jscomp/LightweightMessageFormatter.java:125: warning: [MissingOverride] formatRegion implements method in ExcerptFormatter; expected @Override
    public String formatRegion(Region region) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String formatRegion(Region region) {'?
4 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-64

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/src/com/google/javascript/jscomp/Compiler.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/src/com/google/javascript/jscomp/Compiler.java:68: warning: [JavaLangClash] com.google.javascript.jscomp.Compiler clashes with java.lang.Compiler
public class Compiler extends AbstractCompiler {
       ^
  
    (see http://errorprone.info/bugpattern/JavaLangClash)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/src/com/google/javascript/jscomp/Compiler.java:549: warning: [MissingOverride] call implements method in Callable; expected @Override
      public Result call() throws Exception {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Result call() throws Exception {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/src/com/google/javascript/jscomp/Compiler.java:586: warning: [MissingOverride] run implements method in Runnable; expected @Override
      public void run() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void run() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/src/com/google/javascript/jscomp/Compiler.java:607: warning: [ThreadJoinLoop] Thread.join needs to be surrounded by a loop until it succeeds, as in Uninterruptibles.joinUninterruptibly.
          th.join();
                 ^
    (see http://errorprone.info/bugpattern/ThreadJoinLoop)
  Did you mean 'Uninterruptibles.joinUninterruptibly(th);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/src/com/google/javascript/jscomp/Compiler.java:929: warning: [MissingOverride] get implements method in Supplier; expected @Override
      public String get() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String get() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/src/com/google/javascript/jscomp/Compiler.java:1285: warning: [MissingOverride] call implements method in Callable; expected @Override
      public String call() throws Exception {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String call() throws Exception {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/src/com/google/javascript/jscomp/Compiler.java:1310: warning: [MissingOverride] call implements method in Callable; expected @Override
      public String[] call() throws Exception {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String[] call() throws Exception {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/src/com/google/javascript/jscomp/Compiler.java:1335: warning: [MissingOverride] call implements method in Callable; expected @Override
      public String call() throws Exception {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String call() throws Exception {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/src/com/google/javascript/jscomp/Compiler.java:1361: warning: [MissingOverride] call implements method in Callable; expected @Override
      public String[] call() throws Exception {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String[] call() throws Exception {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/src/com/google/javascript/jscomp/Compiler.java:1397: warning: [MissingOverride] call implements method in Callable; expected @Override
      public Void call() throws Exception {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Void call() throws Exception {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/src/com/google/javascript/jscomp/Compiler.java:1676: error: [MissingCasesInEnumSwitch] Non-exhaustive switch; either add a default or handle the remaining cases: ECMASCRIPT3
    switch (options.getLanguageIn()) {
    ^
    (see http://errorprone.info/bugpattern/MissingCasesInEnumSwitch)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/src/com/google/javascript/jscomp/Compiler.java:1822: warning: [MissingOverride] getSourceLine implements method in SourceExcerptProvider; expected @Override
  public String getSourceLine(String sourceName, int lineNumber) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getSourceLine(String sourceName, int lineNumber) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-64/src/com/google/javascript/jscomp/Compiler.java:1833: warning: [MissingOverride] getSourceRegion implements method in SourceExcerptProvider; expected @Override
  public Region getSourceRegion(String sourceName, int lineNumber) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Region getSourceRegion(String sourceName, int lineNumber) {'?
1 error
12 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-65

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-65/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-65/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-65/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-65/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-65/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-65/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-65/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-65/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-65/src/com/google/javascript/jscomp/CodeGenerator.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-65/src/com/google/javascript/jscomp/CodeGenerator.java:52: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    if (outputCharset == null || outputCharset == Charsets.US_ASCII) {
                                               ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (outputCharset == null || outputCharset.equals(Charsets.US_ASCII)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-65/src/com/google/javascript/jscomp/CodeGenerator.java:521: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {
                                                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '|| (n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first))) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-67

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java:65: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> IMPLICITLY_USED_PROPERTIES =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> IMPLICITLY_USED_PROPERTIES ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java:145: warning: [MissingOverride] process implements method in CompilerPass; expected @Override
  public void process(Node externRoot, Node root) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void process(Node externRoot, Node root) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java:205: warning: [MissingOverride] shouldTraverse implements method in Callback; expected @Override
    public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java:220: warning: [MissingOverride] visit implements method in Callback; expected @Override
    public void visit(NodeTraversal t, Node n, Node parent) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal t, Node n, Node parent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java:310: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
           n.getType() == Token.FUNCTION &&
                                         ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(n.getType() == Token.FUNCTION &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java:347: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          firstChild != null &&
                             ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(firstChild != null &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java:411: warning: [MissingOverride] visit implements method in Callback; expected @Override
    public void visit(NodeTraversal t, Node n, Node parent) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal t, Node n, Node parent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java:421: warning: [MissingOverride] traverseEdge implements method in EdgeCallback; expected @Override
    public boolean traverseEdge(NameInfo start, JSModule edge, NameInfo dest) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean traverseEdge(NameInfo start, JSModule edge, NameInfo dest) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java:462: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
   class GlobalFunction implements Symbol {
   ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'static class GlobalFunction implements Symbol {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java:605: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private class NameContext {
          ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private static class NameContext {'?
10 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-66

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-66/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-66/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-66/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-66/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-66/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-66/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-66/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-66/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-66/src/com/google/javascript/jscomp/TypeCheck.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-66/src/com/google/javascript/jscomp/TypeCheck.java:346: warning: [MissingOverride] process implements method in CompilerPass; expected @Override
  public void process(Node externsRoot, Node jsRoot) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void process(Node externsRoot, Node jsRoot) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-66/src/com/google/javascript/jscomp/TypeCheck.java:423: warning: [MissingOverride] shouldTraverse implements method in Callback; expected @Override
  public boolean shouldTraverse(
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean shouldTraverse('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-66/src/com/google/javascript/jscomp/TypeCheck.java:461: warning: [MissingOverride] visit implements method in Callback; expected @Override
  public void visit(NodeTraversal t, Node n, Node parent) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal t, Node n, Node parent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-66/src/com/google/javascript/jscomp/TypeCheck.java:1481: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
          baseConstructor != getNativeType(OBJECT_FUNCTION_TYPE) &&
                          ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean '!baseConstructor.equals(getNativeType(OBJECT_FUNCTION_TYPE)) &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-66/src/com/google/javascript/jscomp/TypeCheck.java:1614: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            parameter != null && parameter.isVarArgs())) {
                              ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(parameter != null && parameter.isVarArgs()))) {'?
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-68

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-68/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-68/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-68/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-68/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-68/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-68/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-68/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-68/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-68/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-68/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java:813: error: [MissingCasesInEnumSwitch] Non-exhaustive switch; either add a default or handle the remaining cases: AUTHOR, CONSTANT, CONSTRUCTOR, and 35 others
                    switch (annotation) {
                    ^
    (see http://errorprone.info/bugpattern/MissingCasesInEnumSwitch)
1 error

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-69

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-69/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-69/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-69/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-69/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-69/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-69/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-69/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-69/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-69/src/com/google/javascript/jscomp/TypeCheck.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-69/src/com/google/javascript/jscomp/TypeCheck.java:346: warning: [MissingOverride] process implements method in CompilerPass; expected @Override
  public void process(Node externsRoot, Node jsRoot) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void process(Node externsRoot, Node jsRoot) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-69/src/com/google/javascript/jscomp/TypeCheck.java:423: warning: [MissingOverride] shouldTraverse implements method in Callback; expected @Override
  public boolean shouldTraverse(
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean shouldTraverse('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-69/src/com/google/javascript/jscomp/TypeCheck.java:461: warning: [MissingOverride] visit implements method in Callback; expected @Override
  public void visit(NodeTraversal t, Node n, Node parent) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal t, Node n, Node parent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-69/src/com/google/javascript/jscomp/TypeCheck.java:1480: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
          baseConstructor != getNativeType(OBJECT_FUNCTION_TYPE) &&
                          ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean '!baseConstructor.equals(getNativeType(OBJECT_FUNCTION_TYPE)) &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-69/src/com/google/javascript/jscomp/TypeCheck.java:1606: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            parameter != null && parameter.isVarArgs())) {
                              ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(parameter != null && parameter.isVarArgs()))) {'?
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-7

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-7/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-7/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-7/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-7/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-7/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-7/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-7/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-7/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-70

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-70/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-70/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-70/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-70/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-70/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-70/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-70/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-70/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-70/src/com/google/javascript/jscomp/TypedScopeCreator.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-70/src/com/google/javascript/jscomp/TypedScopeCreator.java:180: warning: [MissingOverride] createScope implements method in ScopeCreator; expected @Override
  public Scope createScope(Node root, Scope parent) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Scope createScope(Node root, Scope parent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-70/src/com/google/javascript/jscomp/TypedScopeCreator.java:1496: warning: [MissingOverride] visit implements method in Callback; expected @Override
      public void visit(NodeTraversal t, Node n, Node parent) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal t, Node n, Node parent) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-71

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-71/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-71/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-71/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-71/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-71/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-71/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-71/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-71/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-71/src/com/google/javascript/jscomp/CheckAccessControls.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-71/src/com/google/javascript/jscomp/CheckAccessControls.java:128: warning: [MissingOverride] enterScope implements method in ScopedCallback; expected @Override
  public void enterScope(NodeTraversal t) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void enterScope(NodeTraversal t) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-71/src/com/google/javascript/jscomp/CheckAccessControls.java:143: warning: [MissingOverride] exitScope implements method in ScopedCallback; expected @Override
  public void exitScope(NodeTraversal t) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void exitScope(NodeTraversal t) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-71/src/com/google/javascript/jscomp/CheckAccessControls.java:210: warning: [MissingOverride] shouldTraverse implements method in Callback; expected @Override
  public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-71/src/com/google/javascript/jscomp/CheckAccessControls.java:214: warning: [MissingOverride] visit implements method in Callback; expected @Override
  public void visit(NodeTraversal t, Node n, Node parent) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal t, Node n, Node parent) {'?
4 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-73

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-73/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-73/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-73/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-73/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-73/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-73/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-73/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-73/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-73/src/com/google/javascript/jscomp/CodeGenerator.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-73/src/com/google/javascript/jscomp/CodeGenerator.java:48: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    if (outputCharset == null || outputCharset == Charsets.US_ASCII) {
                                               ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (outputCharset == null || outputCharset.equals(Charsets.US_ASCII)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-73/src/com/google/javascript/jscomp/CodeGenerator.java:517: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {
                                                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '|| (n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first))) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-72

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/src/com/google/javascript/jscomp/FunctionToBlockMutator.java


************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/src/com/google/javascript/jscomp/RenameLabels.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/src/com/google/javascript/jscomp/RenameLabels.java:136: warning: [MissingOverride] shouldTraverse implements method in Callback; expected @Override
    public boolean shouldTraverse(NodeTraversal nodeTraversal, Node node,
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean shouldTraverse(NodeTraversal nodeTraversal, Node node,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-72/src/com/google/javascript/jscomp/RenameLabels.java:167: warning: [MissingOverride] visit implements method in Callback; expected @Override
    public void visit(NodeTraversal nodeTraversal, Node node, Node parent) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal nodeTraversal, Node node, Node parent) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-74

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-74/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-74/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-74/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-74/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-74/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-74/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-74/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-74/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java:539: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
      if (lval && type == Token.OR ||
               ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((lval && type == Token.OR) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java:540: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          !lval && type == Token.AND) {
                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(!lval && type == Token.AND)) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-75

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/src/com/google/javascript/jscomp/NodeUtil.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/src/com/google/javascript/jscomp/NodeUtil.java:893: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/src/com/google/javascript/jscomp/NodeUtil.java:896: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> OBJECT_METHODS_WITHOUT_SIDEEFFECTS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> OBJECT_METHODS_WITHOUT_SIDEEFFECTS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/src/com/google/javascript/jscomp/NodeUtil.java:898: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> REGEXP_METHODS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> REGEXP_METHODS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/src/com/google/javascript/jscomp/NodeUtil.java:900: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> STRING_REGEXP_METHODS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> STRING_REGEXP_METHODS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/src/com/google/javascript/jscomp/NodeUtil.java:1191: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/src/com/google/javascript/jscomp/NodeUtil.java:1243: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/src/com/google/javascript/jscomp/NodeUtil.java:1304: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/src/com/google/javascript/jscomp/NodeUtil.java:2448: warning: [MissingOverride] visit implements method in Visitor; expected @Override
    public void visit(Node n) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/src/com/google/javascript/jscomp/NodeUtil.java:2556: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/src/com/google/javascript/jscomp/NodeUtil.java:2572: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/src/com/google/javascript/jscomp/NodeUtil.java:2582: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/src/com/google/javascript/jscomp/NodeUtil.java:2591: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-75/src/com/google/javascript/jscomp/NodeUtil.java:2600: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
13 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-76

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-76/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-76/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-76/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-76/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-76/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-76/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-76/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-76/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-77

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-77/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-77/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-77/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-77/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-77/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-77/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-77/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-77/src/com/google/javascript/jscomp/CodeGenerator.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-77/src/com/google/javascript/jscomp/CodeGenerator.java:48: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    if (outputCharset == null || outputCharset == Charsets.US_ASCII) {
                                               ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (outputCharset == null || outputCharset.equals(Charsets.US_ASCII)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-77/src/com/google/javascript/jscomp/CodeGenerator.java:513: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            || n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first)) {
                                                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '|| (n.getBooleanProp(Node.FREE_CALL) && NodeUtil.isGet(first))) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-78

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-78/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-78/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-78/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-78/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-78/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-78/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-78/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-78/src/com/google/javascript/jscomp/PeepholeFoldConstants.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-78/src/com/google/javascript/jscomp/PeepholeFoldConstants.java:539: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
      if (lval && type == Token.OR ||
               ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((lval && type == Token.OR) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-78/src/com/google/javascript/jscomp/PeepholeFoldConstants.java:540: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          !lval && type == Token.AND) {
                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(!lval && type == Token.AND)) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-8

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-8/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-8/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-8/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-8/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-8/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-8/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-8/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-8/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-8/src/com/google/javascript/jscomp/CollapseVariableDeclarations.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-79

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-79/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-79/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-79/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-79/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-79/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-79/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-79/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-79/src/com/google/javascript/jscomp/Normalize.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-79/src/com/google/javascript/jscomp/Normalize.java:754: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private final class ScopeTicklingCallback
                ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private static final class ScopeTicklingCallback'?
1 warning

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-79/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-79/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-79/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-79/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-79/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-79/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-79/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-79/src/com/google/javascript/jscomp/VarCheck.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-79/src/com/google/javascript/jscomp/VarCheck.java:228: warning: [MissingOverride] visit implements method in Callback; expected @Override
    public void visit(NodeTraversal t, Node n, Node parent) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal t, Node n, Node parent) {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-80

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/src/com/google/javascript/jscomp/NodeUtil.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/src/com/google/javascript/jscomp/NodeUtil.java:876: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/src/com/google/javascript/jscomp/NodeUtil.java:879: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> OBJECT_METHODS_WITHOUT_SIDEEFFECTS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> OBJECT_METHODS_WITHOUT_SIDEEFFECTS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/src/com/google/javascript/jscomp/NodeUtil.java:881: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> REGEXP_METHODS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> REGEXP_METHODS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/src/com/google/javascript/jscomp/NodeUtil.java:883: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> STRING_REGEXP_METHODS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> STRING_REGEXP_METHODS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/src/com/google/javascript/jscomp/NodeUtil.java:1175: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/src/com/google/javascript/jscomp/NodeUtil.java:1227: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/src/com/google/javascript/jscomp/NodeUtil.java:1287: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/src/com/google/javascript/jscomp/NodeUtil.java:2437: warning: [MissingOverride] visit implements method in Visitor; expected @Override
    public void visit(Node n) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/src/com/google/javascript/jscomp/NodeUtil.java:2545: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/src/com/google/javascript/jscomp/NodeUtil.java:2561: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/src/com/google/javascript/jscomp/NodeUtil.java:2571: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/src/com/google/javascript/jscomp/NodeUtil.java:2580: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-80/src/com/google/javascript/jscomp/NodeUtil.java:2589: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
13 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-81

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-81/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-81/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-81/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-81/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-81/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-81/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-81/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-81/src/com/google/javascript/jscomp/parsing/IRFactory.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-82

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-82/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-82/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-82/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-82/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-82/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-82/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-82/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-82/src/com/google/javascript/rhino/jstype/JSType.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-82/src/com/google/javascript/rhino/jstype/JSType.java:586: warning: [AmbiguousMethodReference] This method's reference is ambiguous, its name and functional interface type are the same as: getLeastSupertype(JSType, JSType)
  public JSType getLeastSupertype(JSType that) {
                ^
    (see http://errorprone.info/bugpattern/AmbiguousMethodReference)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-82/src/com/google/javascript/rhino/jstype/JSType.java:617: warning: [AmbiguousMethodReference] This method's reference is ambiguous, its name and functional interface type are the same as: getGreatestSubtype(JSType, JSType)
  public JSType getGreatestSubtype(JSType that) {
                ^
    (see http://errorprone.info/bugpattern/AmbiguousMethodReference)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-82/src/com/google/javascript/rhino/jstype/JSType.java:870: warning: [AmbiguousMethodReference] This method's reference is ambiguous, its name and functional interface type are the same as: isSubtype(JSType, JSType)
  public abstract boolean isSubtype(JSType that);
                          ^
    (see http://errorprone.info/bugpattern/AmbiguousMethodReference)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-82/src/com/google/javascript/rhino/jstype/JSType.java:91: warning: [MissingOverride] compare implements method in Comparator; expected @Override
    public int compare(JSType t1, JSType t2) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compare(JSType t1, JSType t2) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-82/src/com/google/javascript/rhino/jstype/JSType.java:335: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    return this == jsType;
                ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'return this.equals(jsType);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-82/src/com/google/javascript/rhino/jstype/JSType.java:340: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        typeA == typeB : typeA.isEquivalentTo(typeB);
              ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'Objects.equals(typeA, typeB) : typeA.isEquivalentTo(typeB);' or 'typeA.equals(typeB) : typeA.isEquivalentTo(typeB);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-82/src/com/google/javascript/rhino/jstype/JSType.java:828: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
    if (this.isNullType() && that.isNullType() ||
                          ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((this.isNullType() && that.isNullType()) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-82/src/com/google/javascript/rhino/jstype/JSType.java:829: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        this.isVoidType() && that.isVoidType()) {
                          ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(this.isVoidType() && that.isVoidType())) {'?
8 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-83

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-83/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-83/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-83/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-83/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-83/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-83/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-83/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-83/src/com/google/javascript/jscomp/CommandLineRunner.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-83/src/com/google/javascript/jscomp/CommandLineRunner.java:525: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final List<String> DEFAULT_EXTERNS_NAMES = ImmutableList.of(
                           ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableList<String> DEFAULT_EXTERNS_NAMES = ImmutableList.of('?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-85

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-85/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-85/lib/ant-launcher.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-85/lib/ant.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-85/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-85/lib/caja-r4314.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-85/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-85/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-85/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-85/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-85/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-85/lib/protobuf-java.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-84

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-84/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-84/lib/ant-launcher.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-84/lib/ant.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-84/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-84/lib/caja-r4314.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-84/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-84/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-84/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-84/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-84/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-84/lib/protobuf-java.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-84/src/com/google/javascript/jscomp/parsing/IRFactory.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-87

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-87/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-87/lib/ant-launcher.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-87/lib/ant.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-87/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-87/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-87/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-87/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-87/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-87/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-87/lib/protobuf-java.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java:174: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            result.checkTreeEqualsSilent(follow.getFirstChild())) &&
                                                                  ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '((result != null && follow.hasChildren() &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java:735: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          if (type == Token.OR && !rval ||
                               ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((type == Token.OR && !rval) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java:736: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
              type == Token.AND && rval) {
                                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(type == Token.AND && rval)) {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-86

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/lib/ant-launcher.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/lib/ant.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/lib/caja-r4314.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/lib/protobuf-java.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/src/com/google/javascript/jscomp/NodeUtil.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/src/com/google/javascript/jscomp/NodeUtil.java:707: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/src/com/google/javascript/jscomp/NodeUtil.java:710: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> OBJECT_METHODS_WITHOUT_SIDEEFFECTS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> OBJECT_METHODS_WITHOUT_SIDEEFFECTS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/src/com/google/javascript/jscomp/NodeUtil.java:712: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> REGEXP_METHODS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> REGEXP_METHODS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/src/com/google/javascript/jscomp/NodeUtil.java:714: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> STRING_REGEXP_METHODS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> STRING_REGEXP_METHODS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/src/com/google/javascript/jscomp/NodeUtil.java:1996: warning: [MissingOverride] visit implements method in Visitor; expected @Override
    public void visit(Node n) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/src/com/google/javascript/jscomp/NodeUtil.java:2105: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/src/com/google/javascript/jscomp/NodeUtil.java:2121: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/src/com/google/javascript/jscomp/NodeUtil.java:2131: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/src/com/google/javascript/jscomp/NodeUtil.java:2140: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-86/src/com/google/javascript/jscomp/NodeUtil.java:2149: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
10 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-88

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-88/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-88/lib/ant-launcher.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-88/lib/ant.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-88/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-88/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-88/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-88/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-88/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-88/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-88/lib/protobuf-java.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-9

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-9/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-9/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-9/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-9/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-9/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-9/lib/protobuf-java.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-9/build/lib/rhino.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-9/lib/ant.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java:256: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private class SuffixVarsCallback extends AbstractPostOrderCallback {
          ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private static class SuffixVarsCallback extends AbstractPostOrderCallback {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-89

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/lib/ant-launcher.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/lib/ant.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/lib/protobuf-java.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/src/com/google/javascript/jscomp/CollapseProperties.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/src/com/google/javascript/jscomp/CollapseProperties.java:642: warning: [MissingOverride] visit implements method in Callback; expected @Override
            public void visit(NodeTraversal t, Node n, Node parent) {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal t, Node n, Node parent) {'?
1 warning

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/lib/ant-launcher.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/lib/ant.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/lib/args4j.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/lib/guava.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/lib/protobuf-java.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/src/com/google/javascript/jscomp/GlobalNamespace.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/src/com/google/javascript/jscomp/GlobalNamespace.java:127: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/src/com/google/javascript/jscomp/GlobalNamespace.java:495: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
             (info.isConstructor() && valueNodeType == Token.FUNCTION ||
                                   ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '((info.isConstructor() && valueNodeType == Token.FUNCTION) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/src/com/google/javascript/jscomp/GlobalNamespace.java:496: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
              info.hasEnumParameterType() && valueNodeType == Token.OBJECTLIT);
                                          ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(info.hasEnumParameterType() && valueNodeType == Token.OBJECTLIT));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-89/src/com/google/javascript/jscomp/GlobalNamespace.java:892: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          (parent == null || parent.canCollapseUnannotatedChildNames()) &&
                                                                        ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '((parent == null || parent.canCollapseUnannotatedChildNames()) &&'?
4 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-91

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-91/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-91/lib/ant_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-91/lib/args4j_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-91/lib/guava-r06.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-91/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-91/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-91/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-91/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-91/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-91/lib/protobuf-java-2.3.0.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-91/src/com/google/javascript/jscomp/CheckGlobalThis.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-91/src/com/google/javascript/jscomp/CheckGlobalThis.java:82: warning: [MissingOverride] shouldTraverse implements method in Callback; expected @Override
  public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-91/src/com/google/javascript/jscomp/CheckGlobalThis.java:148: warning: [MissingOverride] visit implements method in Callback; expected @Override
  public void visit(NodeTraversal t, Node n, Node parent) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal t, Node n, Node parent) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-90

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/lib/ant_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/lib/args4j_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/lib/guava-r06.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/lib/protobuf-java-2.3.0.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/src/com/google/javascript/jscomp/FunctionTypeBuilder.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/src/com/google/javascript/jscomp/FunctionTypeBuilder.java:318: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (cType == Token.RETURN && current.getFirstChild() != null ||
                                  ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((cType == Token.RETURN && current.getFirstChild() != null) ||'?
1 warning

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/lib/ant_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/lib/args4j_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/lib/guava-r06.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/lib/protobuf-java-2.3.0.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/src/com/google/javascript/rhino/jstype/FunctionType.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/src/com/google/javascript/rhino/jstype/FunctionType.java:291: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    if (isConstructor() && prototype == getInstanceType()) {
                                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (isConstructor() && prototype.equals(getInstanceType())) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/src/com/google/javascript/rhino/jstype/FunctionType.java:664: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        return this == that;
                    ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'return this.equals(that);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/src/com/google/javascript/rhino/jstype/FunctionType.java:698: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    if (this == registry.getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE)) {
             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (this.equals(registry.getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE))) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/src/com/google/javascript/rhino/jstype/FunctionType.java:890: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
      changed |= (resolvedIface != iface);
                                ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'changed |= (!Objects.equals(resolvedIface, iface));' or 'changed |= (!resolvedIface.equals(iface));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/src/com/google/javascript/rhino/jstype/FunctionType.java:907: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    if (this == registry.getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE)) {
             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (this.equals(registry.getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE))) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-90/src/com/google/javascript/rhino/jstype/FunctionType.java:939: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
    if (type == this) {
             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(type, this)) {' or 'if (type.equals(this)) {'?
6 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-92

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-92/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-92/lib/ant_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-92/lib/args4j_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-92/lib/guava-r06.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-92/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-92/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-92/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-92/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-92/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-92/lib/protobuf-java-2.3.0.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java:443: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            parent.getLastChild() == scopeRoot &&
                                               ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(parent.getLastChild() == scopeRoot &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java:529: warning: [MissingOverride] get implements method in CssRenamingMap; expected @Override
          public String get(String value) {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String get(String value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java:905: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private class UnrecognizedRequire {
          ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private static class UnrecognizedRequire {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-93

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-93/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-93/lib/ant_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-93/lib/args4j_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-93/lib/guava-r06.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-93/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-93/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-93/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-93/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-93/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-93/lib/protobuf-java-2.3.0.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-93/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-93/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java:443: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            parent.getLastChild() == scopeRoot &&
                                               ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(parent.getLastChild() == scopeRoot &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-93/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java:529: warning: [MissingOverride] get implements method in CssRenamingMap; expected @Override
          public String get(String value) {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String get(String value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-93/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java:905: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
  private class UnrecognizedRequire {
          ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private static class UnrecognizedRequire {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-94

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/lib/ant_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/lib/args4j_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/lib/guava-r06.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/lib/protobuf-java-2.3.0.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/src/com/google/javascript/jscomp/NodeUtil.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/src/com/google/javascript/jscomp/NodeUtil.java:622: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/src/com/google/javascript/jscomp/NodeUtil.java:625: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> REGEXP_METHODS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> REGEXP_METHODS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/src/com/google/javascript/jscomp/NodeUtil.java:627: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
  private static final Set<String> STRING_REGEXP_METHODS =
                          ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<String> STRING_REGEXP_METHODS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/src/com/google/javascript/jscomp/NodeUtil.java:1833: warning: [MissingOverride] visit implements method in Visitor; expected @Override
    public void visit(Node n) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/src/com/google/javascript/jscomp/NodeUtil.java:1942: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/src/com/google/javascript/jscomp/NodeUtil.java:1958: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/src/com/google/javascript/jscomp/NodeUtil.java:1968: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/src/com/google/javascript/jscomp/NodeUtil.java:1977: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-94/src/com/google/javascript/jscomp/NodeUtil.java:1986: warning: [MissingOverride] apply implements method in Predicate; expected @Override
    public boolean apply(Node n) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean apply(Node n) {'?
9 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-95

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-95/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-95/lib/ant_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-95/lib/args4j_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-95/lib/guava-r06.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-95/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-95/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-95/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-95/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-95/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-95/lib/protobuf-java-2.3.0.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-95/src/com/google/javascript/jscomp/TypedScopeCreator.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-95/src/com/google/javascript/jscomp/TypedScopeCreator.java:156: warning: [MissingOverride] createScope implements method in ScopeCreator; expected @Override
  public Scope createScope(Node root, Scope parent) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Scope createScope(Node root, Scope parent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-95/src/com/google/javascript/jscomp/TypedScopeCreator.java:618: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          info != null && info.isConstructor()) {
                       ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(info != null && info.isConstructor())) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-95/src/com/google/javascript/jscomp/TypedScopeCreator.java:1268: warning: [MissingOverride] visit implements method in Callback; expected @Override
      public void visit(NodeTraversal t, Node n, Node parent) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal t, Node n, Node parent) {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-96

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-96/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-96/lib/ant_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-96/lib/args4j_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-96/lib/guava-r06.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-96/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-96/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-96/lib/jsr305.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-96/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-96/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-96/lib/protobuf_deploy.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-96/src/com/google/javascript/jscomp/TypeCheck.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-96/src/com/google/javascript/jscomp/TypeCheck.java:330: warning: [MissingOverride] process implements method in CompilerPass; expected @Override
  public void process(Node externsRoot, Node jsRoot) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void process(Node externsRoot, Node jsRoot) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-96/src/com/google/javascript/jscomp/TypeCheck.java:407: warning: [MissingOverride] shouldTraverse implements method in Callback; expected @Override
  public boolean shouldTraverse(
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean shouldTraverse('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-96/src/com/google/javascript/jscomp/TypeCheck.java:445: warning: [MissingOverride] visit implements method in Callback; expected @Override
  public void visit(NodeTraversal t, Node n, Node parent) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal t, Node n, Node parent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-96/src/com/google/javascript/jscomp/TypeCheck.java:1327: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
          baseConstructor != getNativeType(OBJECT_FUNCTION_TYPE) &&
                          ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean '!baseConstructor.equals(getNativeType(OBJECT_FUNCTION_TYPE)) &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-96/src/com/google/javascript/jscomp/TypeCheck.java:1328: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          (baseConstructor.isConstructor() && functionType.isInterface() ||
                                           ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '((baseConstructor.isConstructor() && functionType.isInterface()) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-96/src/com/google/javascript/jscomp/TypeCheck.java:1329: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
           baseConstructor.isInterface() && functionType.isConstructor())) {
                                         ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(baseConstructor.isInterface() && functionType.isConstructor()))) {'?
6 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-97

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-97/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-97/lib/ant_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-97/lib/args4j_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-97/lib/google_common_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-97/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-97/lib/json.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-97/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-97/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-97/lib/protobuf_deploy.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java:412: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
      if (lval && type == Token.OR ||
               ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((lval && type == Token.OR) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java:413: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          !lval && type == Token.AND) {
                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(!lval && type == Token.AND)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java:441: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (type == Token.OR && !rval ||
                             ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((type == Token.OR && !rval) ||'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java:442: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            type == Token.AND && rval) {
                              ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(type == Token.AND && rval)) {'?
4 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-98

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-98/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-98/lib/ant_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-98/lib/args4j_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-98/lib/google_common_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-98/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-98/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-98/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-98/lib/protobuf_deploy.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-98/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-98/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java:99: warning: [MissingOverride] process implements method in CompilerPass; expected @Override
  public void process(Node externs, Node root) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void process(Node externs, Node root) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-98/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java:114: warning: [MissingOverride] visit implements method in Callback; expected @Override
  public void visit(NodeTraversal t, Node n, Node parent) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal t, Node n, Node parent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-98/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java:131: warning: [MissingOverride] enterScope implements method in ScopedCallback; expected @Override
  public void enterScope(NodeTraversal t) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void enterScope(NodeTraversal t) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-98/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java:140: warning: [MissingOverride] exitScope implements method in ScopedCallback; expected @Override
  public void exitScope(NodeTraversal t) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void exitScope(NodeTraversal t) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-98/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java:148: warning: [MissingOverride] shouldTraverse implements method in Callback; expected @Override
  public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n,
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-98/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java:413: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)
    private static final Set<Integer> DECLARATION_PARENTS =
                            ^
    (see http://errorprone.info/bugpattern/MutableConstantField)
  Did you mean 'private static final ImmutableSet<Integer> DECLARATION_PARENTS ='?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-98/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java:449: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
          parent.getType() == Token.LP &&
                                       ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(parent.getType() == Token.LP &&'?
7 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Closure-99

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-99/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-99/lib/ant_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-99/lib/args4j_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-99/lib/google_common_deploy.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-99/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-99/lib/junit.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-99/lib/libtrunk_rhino_parser_jarjared.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-99/lib/protobuf_deploy.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-99/src/com/google/javascript/jscomp/CheckGlobalThis.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-99/src/com/google/javascript/jscomp/CheckGlobalThis.java:84: warning: [MissingOverride] shouldTraverse implements method in Callback; expected @Override
  public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Closure-99/src/com/google/javascript/jscomp/CheckGlobalThis.java:138: warning: [MissingOverride] visit implements method in Callback; expected @Override
  public void visit(NodeTraversal t, Node n, Node parent) {
              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visit(NodeTraversal t, Node n, Node parent) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-1

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-1/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:523: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                                                     ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '&& ((numeric.charAt(0) == '-' && isDigits(numeric.substring(1))) || isDigits(numeric))) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:725: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `str.startsWith("0x", pos)`.
        if (str.startsWith("0x", pos) || str.startsWith("0x", pos)) { // hex
                                      ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
1 error
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-11

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-11/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java:257: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            if (letters && Character.isLetter(ch)
                        ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((letters && Character.isLetter(ch))'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java:258: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                    || numbers && Character.isDigit(ch)
                               ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '|| (numbers && Character.isDigit(ch))'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java:259: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                    || !letters && !numbers) {
                                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '|| (!letters && !numbers)) {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-10

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-10/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-10/src/main/java/org/apache/commons/lang3/time/FastDateParser.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-12

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-12/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java:250: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            if (letters && Character.isLetter(ch)
                        ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((letters && Character.isLetter(ch))'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java:251: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                    || numbers && Character.isDigit(ch)
                               ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '|| (numbers && Character.isDigit(ch))'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java:252: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                    || !letters && !numbers) {
                                ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '|| (!letters && !numbers)) {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-13

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-13/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-13/src/main/java/org/apache/commons/lang3/SerializationUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-13/src/main/java/org/apache/commons/lang3/SerializationUtils.java:108: warning: [Finally] If you return or throw from a finally, then values returned or thrown from the try-catch block will be ignored. Consider using try-with-resources instead.
                throw new SerializationException("IOException on closing cloned object data InputStream.", ex);
                ^
    (see http://errorprone.info/bugpattern/Finally)
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-15

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-15/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java:157: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                    && isAssignable(((GenericArrayType) type).getGenericComponentType(), toClass
                    ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '|| (toClass.isArray()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-15/src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java:1082: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        return type instanceof GenericArrayType || type instanceof Class<?> && ((Class<?>) type).isArray();
                                                                            ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'return type instanceof GenericArrayType || (type instanceof Class<?> && ((Class<?>) type).isArray());'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-14

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-14/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-14/src/main/java/org/apache/commons/lang3/StringUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-14/src/main/java/org/apache/commons/lang3/StringUtils.java:2941: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (match || preserveAllTokens && lastMatch) {
                                       ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if (match || (preserveAllTokens && lastMatch)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-14/src/main/java/org/apache/commons/lang3/StringUtils.java:3117: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (match || preserveAllTokens && lastMatch) {
                                       ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if (match || (preserveAllTokens && lastMatch)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-14/src/main/java/org/apache/commons/lang3/StringUtils.java:5943: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (allStringsNull || longestStrLen == 0 && !anyStringNull) {
                                                 ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-14/src/main/java/org/apache/commons/lang3/StringUtils.java:6585: warning: [DefaultCharset] Implicit use of the platform default charset, which can result in e.g. non-ASCII characters being silently replaced with '?' in many environments
        return charsetName == null ? new String(bytes) : new String(bytes, charsetName);
                                     ^
    (see http://errorprone.info/bugpattern/DefaultCharset)
  Did you mean 'return charsetName == null ? new String(bytes, UTF_8) : new String(bytes, charsetName);' or 'return charsetName == null ? new String(bytes, Charset.defaultCharset()) : new String(bytes, charsetName);'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-14/src/main/java/org/apache/commons/lang3/StringUtils.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
4 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-16

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-16/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-16/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:504: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                                                     ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '&& ((numeric.charAt(0) == '-' && isDigits(numeric.substring(1))) || isDigits(numeric))) {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-17

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-17/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-19

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-19/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-19/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-18

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:600: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {
                     ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((c >= 'A' && c <= 'Z') || c >= 'a' && c <= 'z') {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:600: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {
                                             ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if (c >= 'A' && c <= 'Z' || (c >= 'a' && c <= 'z')) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:632: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                         (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')) {
                                   ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '((c >= 'A' && c <= 'Z') || c >= 'a' && c <= 'z')) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:632: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                         (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')) {
                                                           ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(c >= 'A' && c <= 'Z' || (c >= 'a' && c <= 'z'))) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:943: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:950: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:974: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:981: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1008: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1022: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1045: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1052: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1059: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1088: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1095: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1102: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1137: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1144: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1151: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1192: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1199: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1206: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1232: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1239: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1246: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1268: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1275: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1282: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1307: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1314: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1325: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public void appendTo(StringBuffer buffer, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1349: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1356: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1367: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public void appendTo(StringBuffer buffer, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1397: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1404: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1435: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-18/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1442: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
38 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-2

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-2/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-2/src/main/java/org/apache/commons/lang3/LocaleUtils.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-20

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-20/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-20/src/main/java/org/apache/commons/lang3/StringUtils.java

Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-20/src/main/java/org/apache/commons/lang3/StringUtils.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-21

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-21/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-21/src/main/java/org/apache/commons/lang3/time/DateUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-21/src/main/java/org/apache/commons/lang3/time/DateUtils.java:1843: warning: [MissingOverride] hasNext implements method in Iterator; expected @Override
        public boolean hasNext() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean hasNext() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-21/src/main/java/org/apache/commons/lang3/time/DateUtils.java:1852: warning: [MissingOverride] next implements method in Iterator; expected @Override
        public Calendar next() {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Calendar next() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-21/src/main/java/org/apache/commons/lang3/time/DateUtils.java:1866: warning: [MissingOverride] remove implements method in Iterator; expected @Override
        public void remove() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void remove() {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-22

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-22/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-22/src/main/java/org/apache/commons/lang3/math/Fraction.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-22/src/main/java/org/apache/commons/lang3/math/Fraction.java:881: warning: [MissingOverride] compareTo implements method in Comparable; expected @Override
    public int compareTo(Fraction other) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(Fraction other) {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-23

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-23/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-24

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-24/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:41: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Long LONG_ZERO = new Long(0L);
                                         ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Long LONG_ZERO = 0L;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:43: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Long LONG_ONE = new Long(1L);
                                        ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Long LONG_ONE = 1L;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:45: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Long LONG_MINUS_ONE = new Long(-1L);
                                              ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Long LONG_MINUS_ONE = -1L;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:47: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Integer INTEGER_ZERO = new Integer(0);
                                               ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Integer INTEGER_ZERO = 0;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:49: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Integer INTEGER_ONE = new Integer(1);
                                              ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Integer INTEGER_ONE = 1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:51: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);
                                                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Integer INTEGER_MINUS_ONE = -1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:53: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Short SHORT_ZERO = new Short((short) 0);
                                           ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Short SHORT_ZERO = (short) 0;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:55: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Short SHORT_ONE = new Short((short) 1);
                                          ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Short SHORT_ONE = (short) 1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:57: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Short SHORT_MINUS_ONE = new Short((short) -1);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Short SHORT_MINUS_ONE = (short) -1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:65: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Double DOUBLE_ZERO = new Double(0.0d);
                                             ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Double DOUBLE_ZERO = 0.0d;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:67: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Double DOUBLE_ONE = new Double(1.0d);
                                            ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Double DOUBLE_ONE = 1.0d;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:69: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);
                                                  ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Double DOUBLE_MINUS_ONE = -1.0d;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:71: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Float FLOAT_ZERO = new Float(0.0f);
                                           ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Float FLOAT_ZERO = 0.0f;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:73: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Float FLOAT_ONE = new Float(1.0f);
                                          ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Float FLOAT_ONE = 1.0f;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:75: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Float FLOAT_MINUS_ONE = -1.0f;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-24/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:512: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                                                     ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '&& ((numeric.charAt(0) == '-' && isDigits(numeric.substring(1))) || isDigits(numeric))) {'?
16 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-25

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:41: error: unmappable character (0xA9) for encoding UTF-8
        {"\u00A9", "&copy;"}, // � - copyright sign
                                 ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:46: error: unmappable character (0xAE) for encoding UTF-8
        {"\u00AE", "&reg;"}, // � - registered trademark sign
                                ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:64: error: unmappable character (0xC0) for encoding UTF-8
        {"\u00C0", "&Agrave;"}, // � - uppercase A, grave accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:65: error: unmappable character (0xC1) for encoding UTF-8
        {"\u00C1", "&Aacute;"}, // � - uppercase A, acute accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:66: error: unmappable character (0xC2) for encoding UTF-8
        {"\u00C2", "&Acirc;"}, // � - uppercase A, circumflex accent
                                  ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:67: error: unmappable character (0xC3) for encoding UTF-8
        {"\u00C3", "&Atilde;"}, // � - uppercase A, tilde
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:68: error: unmappable character (0xC4) for encoding UTF-8
        {"\u00C4", "&Auml;"}, // � - uppercase A, umlaut
                                 ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:69: error: unmappable character (0xC5) for encoding UTF-8
        {"\u00C5", "&Aring;"}, // � - uppercase A, ring
                                  ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:70: error: unmappable character (0xC6) for encoding UTF-8
        {"\u00C6", "&AElig;"}, // � - uppercase AE
                                  ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:71: error: unmappable character (0xC7) for encoding UTF-8
        {"\u00C7", "&Ccedil;"}, // � - uppercase C, cedilla
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:72: error: unmappable character (0xC8) for encoding UTF-8
        {"\u00C8", "&Egrave;"}, // � - uppercase E, grave accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:73: error: unmappable character (0xC9) for encoding UTF-8
        {"\u00C9", "&Eacute;"}, // � - uppercase E, acute accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:74: error: unmappable character (0xCA) for encoding UTF-8
        {"\u00CB", "&Ecirc;"}, // � - uppercase E, circumflex accent
                                  ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:75: error: unmappable character (0xCB) for encoding UTF-8
        {"\u00CC", "&Euml;"}, // � - uppercase E, umlaut
                                 ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:76: error: unmappable character (0xCC) for encoding UTF-8
        {"\u00CD", "&Igrave;"}, // � - uppercase I, grave accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:77: error: unmappable character (0xCD) for encoding UTF-8
        {"\u00CE", "&Iacute;"}, // � - uppercase I, acute accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:78: error: unmappable character (0xCE) for encoding UTF-8
        {"\u00CF", "&Icirc;"}, // � - uppercase I, circumflex accent
                                  ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:79: error: unmappable character (0xCF) for encoding UTF-8
        {"\u00D0", "&Iuml;"}, // � - uppercase I, umlaut
                                 ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:80: error: unmappable character (0xD0) for encoding UTF-8
        {"\u00D1", "&ETH;"}, // � - uppercase Eth, Icelandic
                                ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:81: error: unmappable character (0xD1) for encoding UTF-8
        {"\u00D2", "&Ntilde;"}, // � - uppercase N, tilde
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:82: error: unmappable character (0xD2) for encoding UTF-8
        {"\u00D3", "&Ograve;"}, // � - uppercase O, grave accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:83: error: unmappable character (0xD3) for encoding UTF-8
        {"\u00D4", "&Oacute;"}, // � - uppercase O, acute accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:84: error: unmappable character (0xD4) for encoding UTF-8
        {"\u00D5", "&Ocirc;"}, // � - uppercase O, circumflex accent
                                  ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:85: error: unmappable character (0xD5) for encoding UTF-8
        {"\u00D6", "&Otilde;"}, // � - uppercase O, tilde
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:86: error: unmappable character (0xD6) for encoding UTF-8
        {"\u00D7", "&Ouml;"}, // � - uppercase O, umlaut
                                 ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:88: error: unmappable character (0xD8) for encoding UTF-8
        {"\u00D9", "&Oslash;"}, // � - uppercase O, slash
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:89: error: unmappable character (0xD9) for encoding UTF-8
        {"\u00DA", "&Ugrave;"}, // � - uppercase U, grave accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:90: error: unmappable character (0xDA) for encoding UTF-8
        {"\u00DB", "&Uacute;"}, // � - uppercase U, acute accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:91: error: unmappable character (0xDB) for encoding UTF-8
        {"\u00DC", "&Ucirc;"}, // � - uppercase U, circumflex accent
                                  ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:92: error: unmappable character (0xDC) for encoding UTF-8
        {"\u00DD", "&Uuml;"}, // � - uppercase U, umlaut
                                 ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:93: error: unmappable character (0xDD) for encoding UTF-8
        {"\u00DE", "&Yacute;"}, // � - uppercase Y, acute accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:94: error: unmappable character (0xDE) for encoding UTF-8
        {"\u00DF", "&THORN;"}, // � - uppercase THORN, Icelandic
                                  ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:95: error: unmappable character (0xDF) for encoding UTF-8
        {"\u00E0", "&szlig;"}, // � - lowercase sharps, German
                                  ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:96: error: unmappable character (0xE0) for encoding UTF-8
        {"\u00E1", "&agrave;"}, // � - lowercase a, grave accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:97: error: unmappable character (0xE1) for encoding UTF-8
        {"\u00E2", "&aacute;"}, // � - lowercase a, acute accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:98: error: unmappable character (0xE2) for encoding UTF-8
        {"\u00E3", "&acirc;"}, // � - lowercase a, circumflex accent
                                  ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:99: error: unmappable character (0xE3) for encoding UTF-8
        {"\u00E4", "&atilde;"}, // � - lowercase a, tilde
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:100: error: unmappable character (0xE4) for encoding UTF-8
        {"\u00E5", "&auml;"}, // � - lowercase a, umlaut
                                 ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:101: error: unmappable character (0xE5) for encoding UTF-8
        {"\u00E5", "&aring;"}, // � - lowercase a, ring
                                  ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:102: error: unmappable character (0xE6) for encoding UTF-8
        {"\u00E6", "&aelig;"}, // � - lowercase ae
                                  ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:103: error: unmappable character (0xE7) for encoding UTF-8
        {"\u00E7", "&ccedil;"}, // � - lowercase c, cedilla
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:104: error: unmappable character (0xE8) for encoding UTF-8
        {"\u00E8", "&egrave;"}, // � - lowercase e, grave accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:105: error: unmappable character (0xE9) for encoding UTF-8
        {"\u00E9", "&eacute;"}, // � - lowercase e, acute accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:106: error: unmappable character (0xEA) for encoding UTF-8
        {"\u00EA", "&ecirc;"}, // � - lowercase e, circumflex accent
                                  ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:107: error: unmappable character (0xEB) for encoding UTF-8
        {"\u00EB", "&euml;"}, // � - lowercase e, umlaut
                                 ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:108: error: unmappable character (0xEC) for encoding UTF-8
        {"\u00EC", "&igrave;"}, // � - lowercase i, grave accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:109: error: unmappable character (0xED) for encoding UTF-8
        {"\u00ED", "&iacute;"}, // � - lowercase i, acute accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:110: error: unmappable character (0xEE) for encoding UTF-8
        {"\u00EE", "&icirc;"}, // � - lowercase i, circumflex accent
                                  ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:111: error: unmappable character (0xEF) for encoding UTF-8
        {"\u00EF", "&iuml;"}, // � - lowercase i, umlaut
                                 ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:112: error: unmappable character (0xF0) for encoding UTF-8
        {"\u00F0", "&eth;"}, // � - lowercase eth, Icelandic
                                ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:113: error: unmappable character (0xF1) for encoding UTF-8
        {"\u00F1", "&ntilde;"}, // � - lowercase n, tilde
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:114: error: unmappable character (0xF2) for encoding UTF-8
        {"\u00F2", "&ograve;"}, // � - lowercase o, grave accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:115: error: unmappable character (0xF3) for encoding UTF-8
        {"\u00F3", "&oacute;"}, // � - lowercase o, acute accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:116: error: unmappable character (0xF4) for encoding UTF-8
        {"\u00F4", "&ocirc;"}, // � - lowercase o, circumflex accent
                                  ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:117: error: unmappable character (0xF5) for encoding UTF-8
        {"\u00F5", "&otilde;"}, // � - lowercase o, tilde
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:118: error: unmappable character (0xF6) for encoding UTF-8
        {"\u00F6", "&ouml;"}, // � - lowercase o, umlaut
                                 ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:120: error: unmappable character (0xF8) for encoding UTF-8
        {"\u00F8", "&oslash;"}, // � - lowercase o, slash
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:121: error: unmappable character (0xF9) for encoding UTF-8
        {"\u00F9", "&ugrave;"}, // � - lowercase u, grave accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:122: error: unmappable character (0xFA) for encoding UTF-8
        {"\u00FA", "&uacute;"}, // � - lowercase u, acute accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:123: error: unmappable character (0xFB) for encoding UTF-8
        {"\u00FB", "&ucirc;"}, // � - lowercase u, circumflex accent
                                  ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:124: error: unmappable character (0xFC) for encoding UTF-8
        {"\u00FC", "&uuml;"}, // � - lowercase u, umlaut
                                 ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:125: error: unmappable character (0xFD) for encoding UTF-8
        {"\u00FD", "&yacute;"}, // � - lowercase y, acute accent
                                   ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:126: error: unmappable character (0xFE) for encoding UTF-8
        {"\u00FE", "&thorn;"}, // � - lowercase thorn, Icelandic
                                  ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-25/src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java:127: error: unmappable character (0xFF) for encoding UTF-8
        {"\u00FF", "&yuml;"}, // � - lowercase y, umlaut
                                 ^

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-26

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:714: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {
                     ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((c >= 'A' && c <= 'Z') || c >= 'a' && c <= 'z') {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:714: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {
                                             ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if (c >= 'A' && c <= 'Z' || (c >= 'a' && c <= 'z')) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:746: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                         (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')) {
                                   ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '((c >= 'A' && c <= 'Z') || c >= 'a' && c <= 'z')) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:746: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                         (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')) {
                                                           ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(c >= 'A' && c <= 'Z' || (c >= 'a' && c <= 'z'))) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:985: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            (mPattern == other.mPattern || mPattern.equals(other.mPattern)) &&
                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean '(mPattern.equals(other.mPattern)) &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:987: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            (mLocale == other.mLocale || mLocale.equals(other.mLocale)) &&
                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean '(mLocale.equals(other.mLocale)) &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1091: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1098: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1122: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1129: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1156: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1170: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1193: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1200: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1207: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1236: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1243: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1250: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1285: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1292: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1299: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1340: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1347: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1354: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1380: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1387: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1394: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1416: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1423: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1430: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1455: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1462: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1473: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public void appendTo(StringBuffer buffer, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1497: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1504: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1515: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public void appendTo(StringBuffer buffer, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1557: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1570: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1610: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-26/src/main/java/org/apache/commons/lang3/time/FastDateFormat.java:1617: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
40 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-27

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-27/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:41: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Long LONG_ZERO = new Long(0L);
                                         ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Long LONG_ZERO = 0L;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:43: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Long LONG_ONE = new Long(1L);
                                        ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Long LONG_ONE = 1L;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:45: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Long LONG_MINUS_ONE = new Long(-1L);
                                              ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Long LONG_MINUS_ONE = -1L;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:47: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Integer INTEGER_ZERO = new Integer(0);
                                               ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Integer INTEGER_ZERO = 0;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:49: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Integer INTEGER_ONE = new Integer(1);
                                              ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Integer INTEGER_ONE = 1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:51: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);
                                                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Integer INTEGER_MINUS_ONE = -1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:53: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Short SHORT_ZERO = new Short((short) 0);
                                           ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Short SHORT_ZERO = (short) 0;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:55: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Short SHORT_ONE = new Short((short) 1);
                                          ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Short SHORT_ONE = (short) 1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:57: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Short SHORT_MINUS_ONE = new Short((short) -1);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Short SHORT_MINUS_ONE = (short) -1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:65: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Double DOUBLE_ZERO = new Double(0.0d);
                                             ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Double DOUBLE_ZERO = 0.0d;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:67: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Double DOUBLE_ONE = new Double(1.0d);
                                            ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Double DOUBLE_ONE = 1.0d;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:69: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);
                                                  ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Double DOUBLE_MINUS_ONE = -1.0d;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:71: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Float FLOAT_ZERO = new Float(0.0f);
                                           ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Float FLOAT_ZERO = 0.0f;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:73: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Float FLOAT_ONE = new Float(1.0f);
                                          ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Float FLOAT_ONE = 1.0f;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:75: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Float FLOAT_MINUS_ONE = -1.0f;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:509: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                                                     ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '&& ((numeric.charAt(0) == '-' && isDigits(numeric.substring(1))) || isDigits(numeric))) {'?
16 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-28

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-28/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-29

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-29/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-29/src/main/java/org/apache/commons/lang3/SystemUtils.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-3

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-3/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:523: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                                                     ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '&& ((numeric.charAt(0) == '-' && isDigits(numeric.substring(1))) || isDigits(numeric))) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-3/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:721: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `str.startsWith("0x", pos)`.
        if (str.startsWith("0x", pos) || str.startsWith("0x", pos)) { // hex
                                      ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
1 error
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-30

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-30/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-30/src/main/java/org/apache/commons/lang3/StringUtils.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-31

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-31/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-31/src/main/java/org/apache/commons/lang3/StringUtils.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-32

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-32/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-32/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-33

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-33/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-33/src/main/java/org/apache/commons/lang3/ClassUtils.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-34

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-34/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-34/src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-35

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-35/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-35/src/main/java/org/apache/commons/lang3/ArrayUtils.java

Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-35/src/main/java/org/apache/commons/lang3/ArrayUtils.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-36

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-36/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-36/src/java/org/apache/commons/lang3/math/NumberUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-36/src/java/org/apache/commons/lang3/math/NumberUtils.java:41: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Long LONG_ZERO = new Long(0L);
                                         ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Long LONG_ZERO = 0L;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-36/src/java/org/apache/commons/lang3/math/NumberUtils.java:43: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Long LONG_ONE = new Long(1L);
                                        ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Long LONG_ONE = 1L;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-36/src/java/org/apache/commons/lang3/math/NumberUtils.java:45: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Long LONG_MINUS_ONE = new Long(-1L);
                                              ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Long LONG_MINUS_ONE = -1L;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-36/src/java/org/apache/commons/lang3/math/NumberUtils.java:47: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Integer INTEGER_ZERO = new Integer(0);
                                               ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Integer INTEGER_ZERO = 0;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-36/src/java/org/apache/commons/lang3/math/NumberUtils.java:49: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Integer INTEGER_ONE = new Integer(1);
                                              ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Integer INTEGER_ONE = 1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-36/src/java/org/apache/commons/lang3/math/NumberUtils.java:51: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);
                                                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Integer INTEGER_MINUS_ONE = -1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-36/src/java/org/apache/commons/lang3/math/NumberUtils.java:53: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Short SHORT_ZERO = new Short((short) 0);
                                           ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Short SHORT_ZERO = (short) 0;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-36/src/java/org/apache/commons/lang3/math/NumberUtils.java:55: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Short SHORT_ONE = new Short((short) 1);
                                          ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Short SHORT_ONE = (short) 1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-36/src/java/org/apache/commons/lang3/math/NumberUtils.java:57: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Short SHORT_MINUS_ONE = new Short((short) -1);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Short SHORT_MINUS_ONE = (short) -1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-36/src/java/org/apache/commons/lang3/math/NumberUtils.java:65: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Double DOUBLE_ZERO = new Double(0.0d);
                                             ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Double DOUBLE_ZERO = 0.0d;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-36/src/java/org/apache/commons/lang3/math/NumberUtils.java:67: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Double DOUBLE_ONE = new Double(1.0d);
                                            ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Double DOUBLE_ONE = 1.0d;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-36/src/java/org/apache/commons/lang3/math/NumberUtils.java:69: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);
                                                  ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Double DOUBLE_MINUS_ONE = -1.0d;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-36/src/java/org/apache/commons/lang3/math/NumberUtils.java:71: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Float FLOAT_ZERO = new Float(0.0f);
                                           ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Float FLOAT_ZERO = 0.0f;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-36/src/java/org/apache/commons/lang3/math/NumberUtils.java:73: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Float FLOAT_ONE = new Float(1.0f);
                                          ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Float FLOAT_ONE = 1.0f;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-36/src/java/org/apache/commons/lang3/math/NumberUtils.java:75: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Float FLOAT_MINUS_ONE = -1.0f;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-36/src/java/org/apache/commons/lang3/math/NumberUtils.java:505: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                                                     ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '&& ((numeric.charAt(0) == '-' && isDigits(numeric.substring(1))) || isDigits(numeric))) {'?
16 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-38

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:714: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {
                     ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((c >= 'A' && c <= 'Z') || c >= 'a' && c <= 'z') {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:714: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {
                                             ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if (c >= 'A' && c <= 'Z' || (c >= 'a' && c <= 'z')) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:746: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                         (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')) {
                                   ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '((c >= 'A' && c <= 'Z') || c >= 'a' && c <= 'z')) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:746: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                         (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')) {
                                                           ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(c >= 'A' && c <= 'Z' || (c >= 'a' && c <= 'z'))) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:984: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            (mPattern == other.mPattern || mPattern.equals(other.mPattern)) &&
                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean '(mPattern.equals(other.mPattern)) &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:986: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            (mLocale == other.mLocale || mLocale.equals(other.mLocale)) &&
                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean '(mLocale.equals(other.mLocale)) &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1090: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1097: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1121: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1128: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1155: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1169: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1192: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1199: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1206: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1235: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1242: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1249: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1284: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1291: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1298: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1339: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1346: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1353: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1379: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1386: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1393: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1415: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1422: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1429: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1454: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1461: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1472: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public void appendTo(StringBuffer buffer, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1496: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1503: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1514: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public void appendTo(StringBuffer buffer, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1556: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1569: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1609: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-38/src/java/org/apache/commons/lang3/time/FastDateFormat.java:1616: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
40 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-37

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-37/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-37/src/java/org/apache/commons/lang3/ArrayUtils.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-4

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-4/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-4/src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-39

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-39/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-39/src/java/org/apache/commons/lang3/StringUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-39/src/java/org/apache/commons/lang3/StringUtils.java:5361: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (str1 == str2) {
                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(str1, str2)) {' or 'if (str1.equals(str2)) {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-39/src/java/org/apache/commons/lang3/StringUtils.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-40

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-40/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-40/src/java/org/apache/commons/lang/StringUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-40/src/java/org/apache/commons/lang/StringUtils.java:5291: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (str1 == str2) {
                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(str1, str2)) {' or 'if (str1.equals(str2)) {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-41

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-41/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-41/src/java/org/apache/commons/lang/ClassUtils.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-42

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:64: error: unmappable character (0xA9) for encoding UTF-8
        {"copy", "169"}, // � - copyright sign
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:69: error: unmappable character (0xAE) for encoding UTF-8
        {"reg", "174"}, // � - registered trademark sign
                           ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:87: error: unmappable character (0xC0) for encoding UTF-8
        {"Agrave", "192"}, // � - uppercase A, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:88: error: unmappable character (0xC1) for encoding UTF-8
        {"Aacute", "193"}, // � - uppercase A, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:89: error: unmappable character (0xC2) for encoding UTF-8
        {"Acirc", "194"}, // � - uppercase A, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:90: error: unmappable character (0xC3) for encoding UTF-8
        {"Atilde", "195"}, // � - uppercase A, tilde
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:91: error: unmappable character (0xC4) for encoding UTF-8
        {"Auml", "196"}, // � - uppercase A, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:92: error: unmappable character (0xC5) for encoding UTF-8
        {"Aring", "197"}, // � - uppercase A, ring
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:93: error: unmappable character (0xC6) for encoding UTF-8
        {"AElig", "198"}, // � - uppercase AE
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:94: error: unmappable character (0xC7) for encoding UTF-8
        {"Ccedil", "199"}, // � - uppercase C, cedilla
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:95: error: unmappable character (0xC8) for encoding UTF-8
        {"Egrave", "200"}, // � - uppercase E, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:96: error: unmappable character (0xC9) for encoding UTF-8
        {"Eacute", "201"}, // � - uppercase E, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:97: error: unmappable character (0xCA) for encoding UTF-8
        {"Ecirc", "202"}, // � - uppercase E, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:98: error: unmappable character (0xCB) for encoding UTF-8
        {"Euml", "203"}, // � - uppercase E, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:99: error: unmappable character (0xCC) for encoding UTF-8
        {"Igrave", "204"}, // � - uppercase I, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:100: error: unmappable character (0xCD) for encoding UTF-8
        {"Iacute", "205"}, // � - uppercase I, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:101: error: unmappable character (0xCE) for encoding UTF-8
        {"Icirc", "206"}, // � - uppercase I, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:102: error: unmappable character (0xCF) for encoding UTF-8
        {"Iuml", "207"}, // � - uppercase I, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:103: error: unmappable character (0xD0) for encoding UTF-8
        {"ETH", "208"}, // � - uppercase Eth, Icelandic
                           ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:104: error: unmappable character (0xD1) for encoding UTF-8
        {"Ntilde", "209"}, // � - uppercase N, tilde
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:105: error: unmappable character (0xD2) for encoding UTF-8
        {"Ograve", "210"}, // � - uppercase O, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:106: error: unmappable character (0xD3) for encoding UTF-8
        {"Oacute", "211"}, // � - uppercase O, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:107: error: unmappable character (0xD4) for encoding UTF-8
        {"Ocirc", "212"}, // � - uppercase O, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:108: error: unmappable character (0xD5) for encoding UTF-8
        {"Otilde", "213"}, // � - uppercase O, tilde
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:109: error: unmappable character (0xD6) for encoding UTF-8
        {"Ouml", "214"}, // � - uppercase O, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:111: error: unmappable character (0xD8) for encoding UTF-8
        {"Oslash", "216"}, // � - uppercase O, slash
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:112: error: unmappable character (0xD9) for encoding UTF-8
        {"Ugrave", "217"}, // � - uppercase U, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:113: error: unmappable character (0xDA) for encoding UTF-8
        {"Uacute", "218"}, // � - uppercase U, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:114: error: unmappable character (0xDB) for encoding UTF-8
        {"Ucirc", "219"}, // � - uppercase U, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:115: error: unmappable character (0xDC) for encoding UTF-8
        {"Uuml", "220"}, // � - uppercase U, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:116: error: unmappable character (0xDD) for encoding UTF-8
        {"Yacute", "221"}, // � - uppercase Y, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:117: error: unmappable character (0xDE) for encoding UTF-8
        {"THORN", "222"}, // � - uppercase THORN, Icelandic
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:118: error: unmappable character (0xDF) for encoding UTF-8
        {"szlig", "223"}, // � - lowercase sharps, German
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:119: error: unmappable character (0xE0) for encoding UTF-8
        {"agrave", "224"}, // � - lowercase a, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:120: error: unmappable character (0xE1) for encoding UTF-8
        {"aacute", "225"}, // � - lowercase a, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:121: error: unmappable character (0xE2) for encoding UTF-8
        {"acirc", "226"}, // � - lowercase a, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:122: error: unmappable character (0xE3) for encoding UTF-8
        {"atilde", "227"}, // � - lowercase a, tilde
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:123: error: unmappable character (0xE4) for encoding UTF-8
        {"auml", "228"}, // � - lowercase a, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:124: error: unmappable character (0xE5) for encoding UTF-8
        {"aring", "229"}, // � - lowercase a, ring
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:125: error: unmappable character (0xE6) for encoding UTF-8
        {"aelig", "230"}, // � - lowercase ae
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:126: error: unmappable character (0xE7) for encoding UTF-8
        {"ccedil", "231"}, // � - lowercase c, cedilla
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:127: error: unmappable character (0xE8) for encoding UTF-8
        {"egrave", "232"}, // � - lowercase e, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:128: error: unmappable character (0xE9) for encoding UTF-8
        {"eacute", "233"}, // � - lowercase e, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:129: error: unmappable character (0xEA) for encoding UTF-8
        {"ecirc", "234"}, // � - lowercase e, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:130: error: unmappable character (0xEB) for encoding UTF-8
        {"euml", "235"}, // � - lowercase e, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:131: error: unmappable character (0xEC) for encoding UTF-8
        {"igrave", "236"}, // � - lowercase i, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:132: error: unmappable character (0xED) for encoding UTF-8
        {"iacute", "237"}, // � - lowercase i, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:133: error: unmappable character (0xEE) for encoding UTF-8
        {"icirc", "238"}, // � - lowercase i, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:134: error: unmappable character (0xEF) for encoding UTF-8
        {"iuml", "239"}, // � - lowercase i, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:135: error: unmappable character (0xF0) for encoding UTF-8
        {"eth", "240"}, // � - lowercase eth, Icelandic
                           ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:136: error: unmappable character (0xF1) for encoding UTF-8
        {"ntilde", "241"}, // � - lowercase n, tilde
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:137: error: unmappable character (0xF2) for encoding UTF-8
        {"ograve", "242"}, // � - lowercase o, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:138: error: unmappable character (0xF3) for encoding UTF-8
        {"oacute", "243"}, // � - lowercase o, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:139: error: unmappable character (0xF4) for encoding UTF-8
        {"ocirc", "244"}, // � - lowercase o, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:140: error: unmappable character (0xF5) for encoding UTF-8
        {"otilde", "245"}, // � - lowercase o, tilde
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:141: error: unmappable character (0xF6) for encoding UTF-8
        {"ouml", "246"}, // � - lowercase o, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:143: error: unmappable character (0xF8) for encoding UTF-8
        {"oslash", "248"}, // � - lowercase o, slash
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:144: error: unmappable character (0xF9) for encoding UTF-8
        {"ugrave", "249"}, // � - lowercase u, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:145: error: unmappable character (0xFA) for encoding UTF-8
        {"uacute", "250"}, // � - lowercase u, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:146: error: unmappable character (0xFB) for encoding UTF-8
        {"ucirc", "251"}, // � - lowercase u, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:147: error: unmappable character (0xFC) for encoding UTF-8
        {"uuml", "252"}, // � - lowercase u, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:148: error: unmappable character (0xFD) for encoding UTF-8
        {"yacute", "253"}, // � - lowercase y, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:149: error: unmappable character (0xFE) for encoding UTF-8
        {"thorn", "254"}, // � - lowercase thorn, Icelandic
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:150: error: unmappable character (0xFF) for encoding UTF-8
        {"yuml", "255"}, // � - lowercase y, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:448: warning: [MissingOverride] add implements method in EntityMap; expected @Override
        public void add(String name, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void add(String name, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:449: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            mapNameToValue.put(name, new Integer(value));
                                     ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'mapNameToValue.put(name, Integer.valueOf(value));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:456: warning: [MissingOverride] name implements method in EntityMap; expected @Override
        public String name(int value) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String name(int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:463: warning: [MissingOverride] value implements method in EntityMap; expected @Override
        public int value(String name) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int value(String name) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:480: warning: [MissingOverride] add implements method in EntityMap; expected @Override
        public void add(String name, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void add(String name, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:481: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            mapNameToValue.put(name, new Integer(value));
                                     ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'mapNameToValue.put(name, Integer.valueOf(value));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:482: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            mapValueToName.put(new Integer(value), name);
                               ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'mapValueToName.put(Integer.valueOf(value), name);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:488: warning: [MissingOverride] name implements method in EntityMap; expected @Override
        public String name(int value) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String name(int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:489: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            return (String) mapValueToName.get(new Integer(value));
                                               ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return (String) mapValueToName.get(Integer.valueOf(value));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:495: warning: [MissingOverride] value implements method in EntityMap; expected @Override
        public int value(String name) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int value(String name) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:532: warning: [MissingOverride] name overrides method in PrimitiveEntityMap; expected @Override
        public String name(int value) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String name(int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:599: warning: [MissingOverride] add implements method in EntityMap; expected @Override
        public void add(String name, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void add(String name, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:627: warning: [MissingOverride] name implements method in EntityMap; expected @Override
        public String name(int value) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String name(int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:639: warning: [MissingOverride] value implements method in EntityMap; expected @Override
        public int value(String name) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int value(String name) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:699: warning: [MissingOverride] add overrides method in ArrayEntityMap; expected @Override
        public void add(String name, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void add(String name, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java:716: warning: [MissingOverride] name overrides method in ArrayEntityMap; expected @Override
        public String name(int value) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String name(int value) {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-42/src/java/org/apache/commons/lang/Entities.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
16 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-43

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-43/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java:133: warning: [MissingOverride] toPattern overrides method in MessageFormat; expected @Override
    public String toPattern() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toPattern() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java:142: warning: [MissingOverride] applyPattern overrides method in MessageFormat; expected @Override
    public final void applyPattern(String pattern) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void applyPattern(String pattern) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java:212: warning: [MissingOverride] setFormat overrides method in MessageFormat; expected @Override
    public void setFormat(int formatElementIndex, Format newFormat) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setFormat(int formatElementIndex, Format newFormat) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java:220: warning: [MissingOverride] setFormatByArgumentIndex overrides method in MessageFormat; expected @Override
    public void setFormatByArgumentIndex(int argumentIndex, Format newFormat) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setFormatByArgumentIndex(int argumentIndex, Format newFormat) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java:228: warning: [MissingOverride] setFormats overrides method in MessageFormat; expected @Override
    public void setFormats(Format[] newFormats) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setFormats(Format[] newFormats) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java:236: warning: [MissingOverride] setFormatsByArgumentIndex overrides method in MessageFormat; expected @Override
    public void setFormatsByArgumentIndex(Format[] newFormats) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setFormatsByArgumentIndex(Format[] newFormats) {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-43/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
6 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-44

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-44/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-44/src/java/org/apache/commons/lang/NumberUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-44/src/java/org/apache/commons/lang/NumberUtils.java:195: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                                                     ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '&& ((numeric.charAt(0) == '-' && isDigits(numeric.substring(1))) || isDigits(numeric))) {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-45

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-45/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-45/src/java/org/apache/commons/lang/WordUtils.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-46

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-46/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-46/src/java/org/apache/commons/lang/StringEscapeUtils.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-47

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2424: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this == other) {
                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (this.equals(other)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2449: warning: [NonOverridingEquals] equals method doesn't override Object.equals; if this is a type-specific helper for a method that does override Object.equals, either inline it into the callers or rename it to avoid ambiguity
    public boolean equals(StrBuilder other) {
                   ^
    (see http://errorprone.info/bugpattern/NonOverridingEquals)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2450: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this == other) {
                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (this.equals(other)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2473: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2485: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2504: warning: [MissingOverride] toString overrides method in Object; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2565: warning: [MissingOverride] tokenize overrides method in StrTokenizer; expected @Override
        protected List tokenize(char[] chars, int offset, int count) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected List tokenize(char[] chars, int offset, int count) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2574: warning: [MissingOverride] getContent overrides method in StrTokenizer; expected @Override
        public String getContent() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getContent() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2600: warning: [MissingOverride] close implements method in Reader; expected @Override
        public void close() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void close() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2605: warning: [MissingOverride] read overrides method in Reader; expected @Override
        public int read() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int read() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2613: warning: [MissingOverride] read implements method in Reader; expected @Override
        public int read(char b[], int off, int len) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int read(char b[], int off, int len) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2633: warning: [MissingOverride] skip overrides method in Reader; expected @Override
        public long skip(long n) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long skip(long n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2635: warning: [IntLongMath] Expression of type int may overflow before being assigned to a long
                n = StrBuilder.this.size() - pos;
                                           ^
    (see http://errorprone.info/bugpattern/IntLongMath)
  Did you mean 'n = (long) StrBuilder.this.size() - pos;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2640: warning: [NarrowingCompoundAssignment] Compound assignments from long to int hide lossy casts
            pos += n;
                ^
    (see http://errorprone.info/bugpattern/NarrowingCompoundAssignment)
  Did you mean 'pos = (int) (pos + n);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2645: warning: [MissingOverride] ready overrides method in Reader; expected @Override
        public boolean ready() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean ready() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2650: warning: [MissingOverride] markSupported overrides method in Reader; expected @Override
        public boolean markSupported() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean markSupported() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2655: warning: [MissingOverride] mark overrides method in Reader; expected @Override
        public void mark(int readAheadLimit) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void mark(int readAheadLimit) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2660: warning: [MissingOverride] reset overrides method in Reader; expected @Override
        public void reset() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void reset() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2677: warning: [MissingOverride] close implements method in Writer; expected @Override
        public void close() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void close() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2682: warning: [MissingOverride] flush implements method in Writer; expected @Override
        public void flush() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void flush() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2687: warning: [MissingOverride] write overrides method in Writer; expected @Override
        public void write(int c) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(int c) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2692: warning: [MissingOverride] write overrides method in Writer; expected @Override
        public void write(char[] cbuf) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(char[] cbuf) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2697: warning: [MissingOverride] write implements method in Writer; expected @Override
        public void write(char[] cbuf, int off, int len) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(char[] cbuf, int off, int len) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2702: warning: [MissingOverride] write overrides method in Writer; expected @Override
        public void write(String str) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(String str) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-47/src/java/org/apache/commons/lang/text/StrBuilder.java:2707: warning: [MissingOverride] write overrides method in Writer; expected @Override
        public void write(String str, int off, int len) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(String str, int off, int len) {'?
25 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-48

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-48/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-49

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-49/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-49/src/java/org/apache/commons/lang/math/Fraction.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-49/src/java/org/apache/commons/lang/math/Fraction.java:419: warning: [MissingOverride] intValue implements method in Number; expected @Override
    public int intValue() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int intValue() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-49/src/java/org/apache/commons/lang/math/Fraction.java:429: warning: [MissingOverride] longValue implements method in Number; expected @Override
    public long longValue() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long longValue() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-49/src/java/org/apache/commons/lang/math/Fraction.java:439: warning: [MissingOverride] floatValue implements method in Number; expected @Override
    public float floatValue() {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public float floatValue() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-49/src/java/org/apache/commons/lang/math/Fraction.java:449: warning: [MissingOverride] doubleValue implements method in Number; expected @Override
    public double doubleValue() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double doubleValue() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-49/src/java/org/apache/commons/lang/math/Fraction.java:829: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-49/src/java/org/apache/commons/lang/math/Fraction.java:846: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-49/src/java/org/apache/commons/lang/math/Fraction.java:866: warning: [MissingOverride] compareTo implements method in Comparable; expected @Override
    public int compareTo(Object object) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(Object object) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-49/src/java/org/apache/commons/lang/math/Fraction.java:894: warning: [MissingOverride] toString overrides method in Object; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
8 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-5

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-5/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-5/src/main/java/org/apache/commons/lang3/LocaleUtils.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-50

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:280: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Object key = new Integer(style);
                     ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Object key = style;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:367: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Object key = new Integer(style);
                     ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Object key = style;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:461: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));
                              ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Object key = new Pair(dateStyle, new Integer(timeStyle));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:461: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));
                                                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Object key = new Pair(new Integer(dateStyle), timeStyle);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:717: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {
                     ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((c >= 'A' && c <= 'Z') || c >= 'a' && c <= 'z') {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:717: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {
                                             ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if (c >= 'A' && c <= 'Z' || (c >= 'a' && c <= 'z')) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:749: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                         (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')) {
                                   ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '((c >= 'A' && c <= 'Z') || c >= 'a' && c <= 'z')) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:749: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                         (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')) {
                                                           ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(c >= 'A' && c <= 'Z' || (c >= 'a' && c <= 'z'))) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:791: warning: [MissingOverride] format implements method in Format; expected @Override
    public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos) {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:906: warning: [MissingOverride] parseObject implements method in Format; expected @Override
    public Object parseObject(String source, ParsePosition pos) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object parseObject(String source, ParsePosition pos) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:978: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:984: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            (mPattern == other.mPattern || mPattern.equals(other.mPattern)) &&
                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean '(mPattern.equals(other.mPattern)) &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:986: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            (mLocale == other.mLocale || mLocale.equals(other.mLocale)) &&
                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean '(mLocale.equals(other.mLocale)) &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1000: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1015: warning: [MissingOverride] toString overrides method in Object; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1088: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1095: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1119: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1126: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1153: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1167: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1192: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1199: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1206: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1235: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1242: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1249: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1284: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1291: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1298: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1339: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1346: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1353: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1379: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1386: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1393: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1415: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1422: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1429: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1454: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1461: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1472: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public void appendTo(StringBuffer buffer, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1496: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1503: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1514: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public void appendTo(StringBuffer buffer, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1556: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1569: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1609: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1616: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1670: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
        public int hashCode() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1677: warning: [MissingOverride] equals overrides method in Object; expected @Override
        public boolean equals(Object obj) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1716: warning: [MissingOverride] equals overrides method in Object; expected @Override
        public boolean equals(Object obj) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1737: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
        public int hashCode() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java:1746: warning: [MissingOverride] toString overrides method in Object; expected @Override
        public String toString() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-50/src/java/org/apache/commons/lang/time/FastDateFormat.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
54 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-51

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-51/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-51/src/java/org/apache/commons/lang/BooleanUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-51/src/java/org/apache/commons/lang/BooleanUtils.java:656: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (str == "true") {
                ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if ("true".equals(str)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-51/src/java/org/apache/commons/lang/BooleanUtils.java:683: error: [FallThrough] Execution may fall through from the previous case; add a `// fall through` comment before this line if it was deliberate
            case 4: {
            ^
    (see http://errorprone.info/bugpattern/FallThrough)
1 error
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-52

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-52/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-52/src/java/org/apache/commons/lang/StringEscapeUtils.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-53

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-53/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-53/src/java/org/apache/commons/lang/time/DateUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-53/src/java/org/apache/commons/lang/time/DateUtils.java:933: warning: [MissingOverride] hasNext implements method in Iterator; expected @Override
        public boolean hasNext() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean hasNext() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-53/src/java/org/apache/commons/lang/time/DateUtils.java:942: warning: [MissingOverride] next implements method in Iterator; expected @Override
        public Object next() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object next() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-53/src/java/org/apache/commons/lang/time/DateUtils.java:956: warning: [MissingOverride] remove implements method in Iterator; expected @Override
        public void remove() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void remove() {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-54

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-54/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-54/src/java/org/apache/commons/lang/LocaleUtils.java

Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-54/src/java/org/apache/commons/lang/LocaleUtils.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-55

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-55/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-55/src/java/org/apache/commons/lang/time/StopWatch.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-55/src/java/org/apache/commons/lang/time/StopWatch.java:246: warning: [MissingOverride] toString overrides method in Object; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-57

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-57/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-57/src/java/org/apache/commons/lang/LocaleUtils.java

Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-57/src/java/org/apache/commons/lang/LocaleUtils.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-56

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:281: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Object key = new Integer(style);
                     ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Object key = style;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:367: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Object key = new Integer(style);
                     ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Object key = style;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:461: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));
                              ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Object key = new Pair(dateStyle, new Integer(timeStyle));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:461: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));
                                                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'Object key = new Pair(new Integer(dateStyle), timeStyle);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:718: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {
                     ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((c >= 'A' && c <= 'Z') || c >= 'a' && c <= 'z') {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:718: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {
                                             ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if (c >= 'A' && c <= 'Z' || (c >= 'a' && c <= 'z')) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:750: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                         (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')) {
                                   ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '((c >= 'A' && c <= 'Z') || c >= 'a' && c <= 'z')) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:750: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                         (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')) {
                                                           ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(c >= 'A' && c <= 'Z' || (c >= 'a' && c <= 'z'))) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:792: warning: [MissingOverride] format implements method in Format; expected @Override
    public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos) {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:907: warning: [MissingOverride] parseObject implements method in Format; expected @Override
    public Object parseObject(String source, ParsePosition pos) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object parseObject(String source, ParsePosition pos) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:979: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:985: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            (mPattern == other.mPattern || mPattern.equals(other.mPattern)) &&
                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean '(mPattern.equals(other.mPattern)) &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:987: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            (mLocale == other.mLocale || mLocale.equals(other.mLocale)) &&
                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean '(mLocale.equals(other.mLocale)) &&'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1001: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1016: warning: [MissingOverride] toString overrides method in Object; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1077: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1084: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1108: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1115: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1142: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1156: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1181: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1188: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1195: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1224: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1231: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1238: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1273: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1280: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1287: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1328: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1335: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1342: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1368: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1375: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1382: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1404: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1411: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1418: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public final void appendTo(StringBuffer buffer, int value) {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1443: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1450: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1461: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public void appendTo(StringBuffer buffer, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1485: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1492: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1503: warning: [MissingOverride] appendTo implements method in NumberRule; expected @Override
        public void appendTo(StringBuffer buffer, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1545: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1558: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1598: warning: [MissingOverride] estimateLength implements method in Rule; expected @Override
        public int estimateLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1605: warning: [MissingOverride] appendTo implements method in Rule; expected @Override
        public void appendTo(StringBuffer buffer, Calendar calendar) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void appendTo(StringBuffer buffer, Calendar calendar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1659: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
        public int hashCode() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1666: warning: [MissingOverride] equals overrides method in Object; expected @Override
        public boolean equals(Object obj) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1705: warning: [MissingOverride] equals overrides method in Object; expected @Override
        public boolean equals(Object obj) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1726: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
        public int hashCode() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java:1735: warning: [MissingOverride] toString overrides method in Object; expected @Override
        public String toString() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-56/src/java/org/apache/commons/lang/time/FastDateFormat.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
54 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-58

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java:41: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Long LONG_ZERO = new Long(0L);
                                         ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Long LONG_ZERO = 0L;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java:43: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Long LONG_ONE = new Long(1L);
                                        ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Long LONG_ONE = 1L;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java:45: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Long LONG_MINUS_ONE = new Long(-1L);
                                              ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Long LONG_MINUS_ONE = -1L;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java:47: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Integer INTEGER_ZERO = new Integer(0);
                                               ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Integer INTEGER_ZERO = 0;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java:49: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Integer INTEGER_ONE = new Integer(1);
                                              ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Integer INTEGER_ONE = 1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java:51: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);
                                                    ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Integer INTEGER_MINUS_ONE = -1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java:53: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Short SHORT_ZERO = new Short((short) 0);
                                           ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Short SHORT_ZERO = (short) 0;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java:55: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Short SHORT_ONE = new Short((short) 1);
                                          ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Short SHORT_ONE = (short) 1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java:57: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Short SHORT_MINUS_ONE = new Short((short) -1);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Short SHORT_MINUS_ONE = (short) -1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java:59: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Byte BYTE_ZERO = new Byte((byte) 0);
                                         ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Byte BYTE_ZERO = (byte) 0;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java:61: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Byte BYTE_ONE = new Byte((byte) 1);
                                        ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Byte BYTE_ONE = (byte) 1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java:63: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Byte BYTE_MINUS_ONE = new Byte((byte) -1);
                                              ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Byte BYTE_MINUS_ONE = (byte) -1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java:65: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Double DOUBLE_ZERO = new Double(0.0d);
                                             ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Double DOUBLE_ZERO = 0.0d;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java:67: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Double DOUBLE_ONE = new Double(1.0d);
                                            ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Double DOUBLE_ONE = 1.0d;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java:69: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);
                                                  ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Double DOUBLE_MINUS_ONE = -1.0d;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java:71: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Float FLOAT_ZERO = new Float(0.0f);
                                           ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Float FLOAT_ZERO = 0.0f;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java:73: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Float FLOAT_ONE = new Float(1.0f);
                                          ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Float FLOAT_ONE = 1.0f;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-58/src/java/org/apache/commons/lang/math/NumberUtils.java:75: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);
                                                ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'public static final Float FLOAT_MINUS_ONE = -1.0f;'?
18 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-59

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2076: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this == other) {
                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (this.equals(other)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2101: warning: [NonOverridingEquals] equals method doesn't override Object.equals; if this is a type-specific helper for a method that does override Object.equals, either inline it into the callers or rename it to avoid ambiguity
    public boolean equals(StrBuilder other) {
                   ^
    (see http://errorprone.info/bugpattern/NonOverridingEquals)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2102: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this == other) {
                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (this.equals(other)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2125: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2137: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2156: warning: [MissingOverride] toString overrides method in Object; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2217: warning: [MissingOverride] tokenize overrides method in StrTokenizer; expected @Override
        protected List tokenize(char[] chars, int offset, int count) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected List tokenize(char[] chars, int offset, int count) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2226: warning: [MissingOverride] getContent overrides method in StrTokenizer; expected @Override
        public String getContent() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getContent() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2252: warning: [MissingOverride] close implements method in Reader; expected @Override
        public void close() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void close() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2257: warning: [MissingOverride] read overrides method in Reader; expected @Override
        public int read() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int read() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2265: warning: [MissingOverride] read implements method in Reader; expected @Override
        public int read(char b[], int off, int len) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int read(char b[], int off, int len) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2285: warning: [MissingOverride] skip overrides method in Reader; expected @Override
        public long skip(long n) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long skip(long n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2287: warning: [IntLongMath] Expression of type int may overflow before being assigned to a long
                n = StrBuilder.this.size() - pos;
                                           ^
    (see http://errorprone.info/bugpattern/IntLongMath)
  Did you mean 'n = (long) StrBuilder.this.size() - pos;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2292: warning: [NarrowingCompoundAssignment] Compound assignments from long to int hide lossy casts
            pos += n;
                ^
    (see http://errorprone.info/bugpattern/NarrowingCompoundAssignment)
  Did you mean 'pos = (int) (pos + n);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2297: warning: [MissingOverride] ready overrides method in Reader; expected @Override
        public boolean ready() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean ready() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2302: warning: [MissingOverride] markSupported overrides method in Reader; expected @Override
        public boolean markSupported() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean markSupported() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2307: warning: [MissingOverride] mark overrides method in Reader; expected @Override
        public void mark(int readAheadLimit) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void mark(int readAheadLimit) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2312: warning: [MissingOverride] reset overrides method in Reader; expected @Override
        public void reset() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void reset() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2329: warning: [MissingOverride] close implements method in Writer; expected @Override
        public void close() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void close() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2334: warning: [MissingOverride] flush implements method in Writer; expected @Override
        public void flush() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void flush() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2339: warning: [MissingOverride] write overrides method in Writer; expected @Override
        public void write(int c) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(int c) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2344: warning: [MissingOverride] write overrides method in Writer; expected @Override
        public void write(char[] cbuf) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(char[] cbuf) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2349: warning: [MissingOverride] write implements method in Writer; expected @Override
        public void write(char[] cbuf, int off, int len) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(char[] cbuf, int off, int len) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2354: warning: [MissingOverride] write overrides method in Writer; expected @Override
        public void write(String str) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(String str) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-59/src/java/org/apache/commons/lang/text/StrBuilder.java:2359: warning: [MissingOverride] write overrides method in Writer; expected @Override
        public void write(String str, int off, int len) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(String str, int off, int len) {'?
25 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-6

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-6/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-60

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2076: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this == other) {
                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (this.equals(other)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2101: warning: [NonOverridingEquals] equals method doesn't override Object.equals; if this is a type-specific helper for a method that does override Object.equals, either inline it into the callers or rename it to avoid ambiguity
    public boolean equals(StrBuilder other) {
                   ^
    (see http://errorprone.info/bugpattern/NonOverridingEquals)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2102: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this == other) {
                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (this.equals(other)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2125: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2137: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2156: warning: [MissingOverride] toString overrides method in Object; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2217: warning: [MissingOverride] tokenize overrides method in StrTokenizer; expected @Override
        protected List tokenize(char[] chars, int offset, int count) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected List tokenize(char[] chars, int offset, int count) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2226: warning: [MissingOverride] getContent overrides method in StrTokenizer; expected @Override
        public String getContent() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getContent() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2252: warning: [MissingOverride] close implements method in Reader; expected @Override
        public void close() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void close() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2257: warning: [MissingOverride] read overrides method in Reader; expected @Override
        public int read() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int read() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2265: warning: [MissingOverride] read implements method in Reader; expected @Override
        public int read(char b[], int off, int len) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int read(char b[], int off, int len) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2285: warning: [MissingOverride] skip overrides method in Reader; expected @Override
        public long skip(long n) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long skip(long n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2287: warning: [IntLongMath] Expression of type int may overflow before being assigned to a long
                n = StrBuilder.this.size() - pos;
                                           ^
    (see http://errorprone.info/bugpattern/IntLongMath)
  Did you mean 'n = (long) StrBuilder.this.size() - pos;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2292: warning: [NarrowingCompoundAssignment] Compound assignments from long to int hide lossy casts
            pos += n;
                ^
    (see http://errorprone.info/bugpattern/NarrowingCompoundAssignment)
  Did you mean 'pos = (int) (pos + n);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2297: warning: [MissingOverride] ready overrides method in Reader; expected @Override
        public boolean ready() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean ready() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2302: warning: [MissingOverride] markSupported overrides method in Reader; expected @Override
        public boolean markSupported() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean markSupported() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2307: warning: [MissingOverride] mark overrides method in Reader; expected @Override
        public void mark(int readAheadLimit) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void mark(int readAheadLimit) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2312: warning: [MissingOverride] reset overrides method in Reader; expected @Override
        public void reset() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void reset() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2329: warning: [MissingOverride] close implements method in Writer; expected @Override
        public void close() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void close() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2334: warning: [MissingOverride] flush implements method in Writer; expected @Override
        public void flush() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void flush() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2339: warning: [MissingOverride] write overrides method in Writer; expected @Override
        public void write(int c) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(int c) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2344: warning: [MissingOverride] write overrides method in Writer; expected @Override
        public void write(char[] cbuf) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(char[] cbuf) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2349: warning: [MissingOverride] write implements method in Writer; expected @Override
        public void write(char[] cbuf, int off, int len) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(char[] cbuf, int off, int len) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2354: warning: [MissingOverride] write overrides method in Writer; expected @Override
        public void write(String str) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(String str) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-60/src/java/org/apache/commons/lang/text/StrBuilder.java:2359: warning: [MissingOverride] write overrides method in Writer; expected @Override
        public void write(String str, int off, int len) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(String str, int off, int len) {'?
25 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-61

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2076: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this == other) {
                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (this.equals(other)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2101: warning: [NonOverridingEquals] equals method doesn't override Object.equals; if this is a type-specific helper for a method that does override Object.equals, either inline it into the callers or rename it to avoid ambiguity
    public boolean equals(StrBuilder other) {
                   ^
    (see http://errorprone.info/bugpattern/NonOverridingEquals)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2102: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this == other) {
                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (this.equals(other)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2125: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2137: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2156: warning: [MissingOverride] toString overrides method in Object; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2217: warning: [MissingOverride] tokenize overrides method in StrTokenizer; expected @Override
        protected List tokenize(char[] chars, int offset, int count) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected List tokenize(char[] chars, int offset, int count) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2226: warning: [MissingOverride] getContent overrides method in StrTokenizer; expected @Override
        public String getContent() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getContent() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2252: warning: [MissingOverride] close implements method in Reader; expected @Override
        public void close() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void close() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2257: warning: [MissingOverride] read overrides method in Reader; expected @Override
        public int read() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int read() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2265: warning: [MissingOverride] read implements method in Reader; expected @Override
        public int read(char b[], int off, int len) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int read(char b[], int off, int len) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2285: warning: [MissingOverride] skip overrides method in Reader; expected @Override
        public long skip(long n) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long skip(long n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2287: warning: [IntLongMath] Expression of type int may overflow before being assigned to a long
                n = StrBuilder.this.size() - pos;
                                           ^
    (see http://errorprone.info/bugpattern/IntLongMath)
  Did you mean 'n = (long) StrBuilder.this.size() - pos;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2292: warning: [NarrowingCompoundAssignment] Compound assignments from long to int hide lossy casts
            pos += n;
                ^
    (see http://errorprone.info/bugpattern/NarrowingCompoundAssignment)
  Did you mean 'pos = (int) (pos + n);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2297: warning: [MissingOverride] ready overrides method in Reader; expected @Override
        public boolean ready() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean ready() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2302: warning: [MissingOverride] markSupported overrides method in Reader; expected @Override
        public boolean markSupported() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean markSupported() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2307: warning: [MissingOverride] mark overrides method in Reader; expected @Override
        public void mark(int readAheadLimit) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void mark(int readAheadLimit) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2312: warning: [MissingOverride] reset overrides method in Reader; expected @Override
        public void reset() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void reset() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2329: warning: [MissingOverride] close implements method in Writer; expected @Override
        public void close() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void close() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2334: warning: [MissingOverride] flush implements method in Writer; expected @Override
        public void flush() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void flush() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2339: warning: [MissingOverride] write overrides method in Writer; expected @Override
        public void write(int c) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(int c) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2344: warning: [MissingOverride] write overrides method in Writer; expected @Override
        public void write(char[] cbuf) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(char[] cbuf) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2349: warning: [MissingOverride] write implements method in Writer; expected @Override
        public void write(char[] cbuf, int off, int len) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(char[] cbuf, int off, int len) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2354: warning: [MissingOverride] write overrides method in Writer; expected @Override
        public void write(String str) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(String str) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-61/src/java/org/apache/commons/lang/text/StrBuilder.java:2359: warning: [MissingOverride] write overrides method in Writer; expected @Override
        public void write(String str, int off, int len) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void write(String str, int off, int len) {'?
25 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-62

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:63: error: unmappable character (0xA9) for encoding UTF-8
        {"copy", "169"}, // � - copyright sign
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:68: error: unmappable character (0xAE) for encoding UTF-8
        {"reg", "174"}, // � - registered trademark sign
                           ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:86: error: unmappable character (0xC0) for encoding UTF-8
        {"Agrave", "192"}, // � - uppercase A, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:87: error: unmappable character (0xC1) for encoding UTF-8
        {"Aacute", "193"}, // � - uppercase A, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:88: error: unmappable character (0xC2) for encoding UTF-8
        {"Acirc", "194"}, // � - uppercase A, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:89: error: unmappable character (0xC3) for encoding UTF-8
        {"Atilde", "195"}, // � - uppercase A, tilde
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:90: error: unmappable character (0xC4) for encoding UTF-8
        {"Auml", "196"}, // � - uppercase A, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:91: error: unmappable character (0xC5) for encoding UTF-8
        {"Aring", "197"}, // � - uppercase A, ring
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:92: error: unmappable character (0xC6) for encoding UTF-8
        {"AElig", "198"}, // � - uppercase AE
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:93: error: unmappable character (0xC7) for encoding UTF-8
        {"Ccedil", "199"}, // � - uppercase C, cedilla
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:94: error: unmappable character (0xC8) for encoding UTF-8
        {"Egrave", "200"}, // � - uppercase E, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:95: error: unmappable character (0xC9) for encoding UTF-8
        {"Eacute", "201"}, // � - uppercase E, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:96: error: unmappable character (0xCA) for encoding UTF-8
        {"Ecirc", "202"}, // � - uppercase E, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:97: error: unmappable character (0xCB) for encoding UTF-8
        {"Euml", "203"}, // � - uppercase E, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:98: error: unmappable character (0xCC) for encoding UTF-8
        {"Igrave", "204"}, // � - uppercase I, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:99: error: unmappable character (0xCD) for encoding UTF-8
        {"Iacute", "205"}, // � - uppercase I, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:100: error: unmappable character (0xCE) for encoding UTF-8
        {"Icirc", "206"}, // � - uppercase I, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:101: error: unmappable character (0xCF) for encoding UTF-8
        {"Iuml", "207"}, // � - uppercase I, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:102: error: unmappable character (0xD0) for encoding UTF-8
        {"ETH", "208"}, // � - uppercase Eth, Icelandic
                           ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:103: error: unmappable character (0xD1) for encoding UTF-8
        {"Ntilde", "209"}, // � - uppercase N, tilde
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:104: error: unmappable character (0xD2) for encoding UTF-8
        {"Ograve", "210"}, // � - uppercase O, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:105: error: unmappable character (0xD3) for encoding UTF-8
        {"Oacute", "211"}, // � - uppercase O, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:106: error: unmappable character (0xD4) for encoding UTF-8
        {"Ocirc", "212"}, // � - uppercase O, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:107: error: unmappable character (0xD5) for encoding UTF-8
        {"Otilde", "213"}, // � - uppercase O, tilde
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:108: error: unmappable character (0xD6) for encoding UTF-8
        {"Ouml", "214"}, // � - uppercase O, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:110: error: unmappable character (0xD8) for encoding UTF-8
        {"Oslash", "216"}, // � - uppercase O, slash
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:111: error: unmappable character (0xD9) for encoding UTF-8
        {"Ugrave", "217"}, // � - uppercase U, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:112: error: unmappable character (0xDA) for encoding UTF-8
        {"Uacute", "218"}, // � - uppercase U, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:113: error: unmappable character (0xDB) for encoding UTF-8
        {"Ucirc", "219"}, // � - uppercase U, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:114: error: unmappable character (0xDC) for encoding UTF-8
        {"Uuml", "220"}, // � - uppercase U, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:115: error: unmappable character (0xDD) for encoding UTF-8
        {"Yacute", "221"}, // � - uppercase Y, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:116: error: unmappable character (0xDE) for encoding UTF-8
        {"THORN", "222"}, // � - uppercase THORN, Icelandic
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:117: error: unmappable character (0xDF) for encoding UTF-8
        {"szlig", "223"}, // � - lowercase sharps, German
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:118: error: unmappable character (0xE0) for encoding UTF-8
        {"agrave", "224"}, // � - lowercase a, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:119: error: unmappable character (0xE1) for encoding UTF-8
        {"aacute", "225"}, // � - lowercase a, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:120: error: unmappable character (0xE2) for encoding UTF-8
        {"acirc", "226"}, // � - lowercase a, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:121: error: unmappable character (0xE3) for encoding UTF-8
        {"atilde", "227"}, // � - lowercase a, tilde
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:122: error: unmappable character (0xE4) for encoding UTF-8
        {"auml", "228"}, // � - lowercase a, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:123: error: unmappable character (0xE5) for encoding UTF-8
        {"aring", "229"}, // � - lowercase a, ring
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:124: error: unmappable character (0xE6) for encoding UTF-8
        {"aelig", "230"}, // � - lowercase ae
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:125: error: unmappable character (0xE7) for encoding UTF-8
        {"ccedil", "231"}, // � - lowercase c, cedilla
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:126: error: unmappable character (0xE8) for encoding UTF-8
        {"egrave", "232"}, // � - lowercase e, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:127: error: unmappable character (0xE9) for encoding UTF-8
        {"eacute", "233"}, // � - lowercase e, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:128: error: unmappable character (0xEA) for encoding UTF-8
        {"ecirc", "234"}, // � - lowercase e, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:129: error: unmappable character (0xEB) for encoding UTF-8
        {"euml", "235"}, // � - lowercase e, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:130: error: unmappable character (0xEC) for encoding UTF-8
        {"igrave", "236"}, // � - lowercase i, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:131: error: unmappable character (0xED) for encoding UTF-8
        {"iacute", "237"}, // � - lowercase i, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:132: error: unmappable character (0xEE) for encoding UTF-8
        {"icirc", "238"}, // � - lowercase i, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:133: error: unmappable character (0xEF) for encoding UTF-8
        {"iuml", "239"}, // � - lowercase i, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:134: error: unmappable character (0xF0) for encoding UTF-8
        {"eth", "240"}, // � - lowercase eth, Icelandic
                           ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:135: error: unmappable character (0xF1) for encoding UTF-8
        {"ntilde", "241"}, // � - lowercase n, tilde
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:136: error: unmappable character (0xF2) for encoding UTF-8
        {"ograve", "242"}, // � - lowercase o, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:137: error: unmappable character (0xF3) for encoding UTF-8
        {"oacute", "243"}, // � - lowercase o, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:138: error: unmappable character (0xF4) for encoding UTF-8
        {"ocirc", "244"}, // � - lowercase o, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:139: error: unmappable character (0xF5) for encoding UTF-8
        {"otilde", "245"}, // � - lowercase o, tilde
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:140: error: unmappable character (0xF6) for encoding UTF-8
        {"ouml", "246"}, // � - lowercase o, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:142: error: unmappable character (0xF8) for encoding UTF-8
        {"oslash", "248"}, // � - lowercase o, slash
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:143: error: unmappable character (0xF9) for encoding UTF-8
        {"ugrave", "249"}, // � - lowercase u, grave accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:144: error: unmappable character (0xFA) for encoding UTF-8
        {"uacute", "250"}, // � - lowercase u, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:145: error: unmappable character (0xFB) for encoding UTF-8
        {"ucirc", "251"}, // � - lowercase u, circumflex accent
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:146: error: unmappable character (0xFC) for encoding UTF-8
        {"uuml", "252"}, // � - lowercase u, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:147: error: unmappable character (0xFD) for encoding UTF-8
        {"yacute", "253"}, // � - lowercase y, acute accent
                              ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:148: error: unmappable character (0xFE) for encoding UTF-8
        {"thorn", "254"}, // � - lowercase thorn, Icelandic
                             ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:149: error: unmappable character (0xFF) for encoding UTF-8
        {"yuml", "255"}, // � - lowercase y, umlaut
                            ^
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:426: warning: [MissingOverride] add implements method in EntityMap; expected @Override
        public void add(String name, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void add(String name, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:427: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            mapNameToValue.put(name, new Integer(value));
                                     ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'mapNameToValue.put(name, Integer.valueOf(value));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:434: warning: [MissingOverride] name implements method in EntityMap; expected @Override
        public String name(int value) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String name(int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:441: warning: [MissingOverride] value implements method in EntityMap; expected @Override
        public int value(String name) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int value(String name) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:458: warning: [MissingOverride] add implements method in EntityMap; expected @Override
        public void add(String name, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void add(String name, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:459: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            mapNameToValue.put(name, new Integer(value));
                                     ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'mapNameToValue.put(name, Integer.valueOf(value));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:460: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            mapValueToName.put(new Integer(value), name);
                               ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'mapValueToName.put(Integer.valueOf(value), name);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:466: warning: [MissingOverride] name implements method in EntityMap; expected @Override
        public String name(int value) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String name(int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:467: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
            return (String) mapValueToName.get(new Integer(value));
                                               ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return (String) mapValueToName.get(Integer.valueOf(value));'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:473: warning: [MissingOverride] value implements method in EntityMap; expected @Override
        public int value(String name) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int value(String name) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:509: warning: [MissingOverride] name overrides method in PrimitiveEntityMap; expected @Override
        public String name(int value) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String name(int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:569: warning: [MissingOverride] add implements method in EntityMap; expected @Override
        public void add(String name, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void add(String name, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:596: warning: [MissingOverride] name implements method in EntityMap; expected @Override
        public String name(int value) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String name(int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:608: warning: [MissingOverride] value implements method in EntityMap; expected @Override
        public int value(String name) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int value(String name) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:666: warning: [MissingOverride] add overrides method in ArrayEntityMap; expected @Override
        public void add(String name, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void add(String name, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:683: warning: [MissingOverride] name overrides method in ArrayEntityMap; expected @Override
        public String name(int value) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String name(int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java:921: error: [FallThrough] Execution may fall through from the previous case; add a `// fall through` comment before this line if it was deliberate
                                    default : {
                                    ^
    (see http://errorprone.info/bugpattern/FallThrough)
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-62/src/java/org/apache/commons/lang/Entities.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
1 error
16 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-63

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-63/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java:593: warning: [MissingOverride] equals overrides method in Object; expected @Override
        public boolean equals(Object obj2) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj2) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java:621: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
        public int hashCode() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java:630: warning: [MissingOverride] toString overrides method in Object; expected @Override
        public String toString() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-64

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-64/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-64/src/java/org/apache/commons/lang/enums/ValuedEnum.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-64/src/java/org/apache/commons/lang/enums/ValuedEnum.java:182: warning: [MissingOverride] compareTo overrides method in Enum; expected @Override
    public int compareTo(Object other) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(Object other) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-64/src/java/org/apache/commons/lang/enums/ValuedEnum.java:203: warning: [MissingOverride] toString overrides method in Enum; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-65

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-65/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-65/src/java/org/apache/commons/lang/time/DateUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-65/src/java/org/apache/commons/lang/time/DateUtils.java:902: warning: [MissingOverride] hasNext implements method in Iterator; expected @Override
        public boolean hasNext() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean hasNext() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-65/src/java/org/apache/commons/lang/time/DateUtils.java:911: warning: [MissingOverride] next implements method in Iterator; expected @Override
        public Object next() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object next() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-65/src/java/org/apache/commons/lang/time/DateUtils.java:925: warning: [MissingOverride] remove implements method in Iterator; expected @Override
        public void remove() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void remove() {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-7

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-7/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java:508: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                                                     ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '&& ((numeric.charAt(0) == '-' && isDigits(numeric.substring(1))) || isDigits(numeric))) {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-8

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-8/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java:304: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {
                     ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if ((c >= 'A' && c <= 'Z') || c >= 'a' && c <= 'z') {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java:304: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {
                                             ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if (c >= 'A' && c <= 'Z' || (c >= 'a' && c <= 'z')) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java:336: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                         (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')) {
                                   ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '((c >= 'A' && c <= 'Z') || c >= 'a' && c <= 'z')) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-8/src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java:336: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
                         (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')) {
                                                           ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean '(c >= 'A' && c <= 'Z' || (c >= 'a' && c <= 'z'))) {'?
4 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Lang-9

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-9/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Lang-9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-10

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-10/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-10/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-1

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java:509: warning: [MissingOverride] add implements method in FieldElement; expected @Override
    public BigFraction add(final BigFraction fraction) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigFraction add(final BigFraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java:596: warning: [MissingOverride] compareTo implements method in Comparable; expected @Override
    public int compareTo(final BigFraction object) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(final BigFraction object) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java:662: warning: [MissingOverride] divide implements method in FieldElement; expected @Override
    public BigFraction divide(final BigFraction fraction) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigFraction divide(final BigFraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java:883: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public BigFraction multiply(final int i) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigFraction multiply(final int i) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java:911: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public BigFraction multiply(final BigFraction fraction) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigFraction multiply(final BigFraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java:931: warning: [MissingOverride] negate implements method in FieldElement; expected @Override
    public BigFraction negate() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigFraction negate() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java:1026: warning: [MissingOverride] reciprocal implements method in FieldElement; expected @Override
    public BigFraction reciprocal() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigFraction reciprocal() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java:1096: warning: [MissingOverride] subtract implements method in FieldElement; expected @Override
    public BigFraction subtract(final BigFraction fraction) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigFraction subtract(final BigFraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java:1140: warning: [MissingOverride] getField implements method in FieldElement; expected @Override
    public BigFractionField getField() {
                            ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigFractionField getField() {'?
9 warnings

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/Fraction.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/Fraction.java:311: warning: [MissingOverride] compareTo implements method in Comparable; expected @Override
    public int compareTo(Fraction object) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(Fraction object) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/Fraction.java:410: warning: [MissingOverride] negate implements method in FieldElement; expected @Override
    public Fraction negate() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction negate() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/Fraction.java:421: warning: [MissingOverride] reciprocal implements method in FieldElement; expected @Override
    public Fraction reciprocal() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction reciprocal() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/Fraction.java:435: warning: [MissingOverride] add implements method in FieldElement; expected @Override
    public Fraction add(Fraction fraction) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction add(Fraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/Fraction.java:458: warning: [MissingOverride] subtract implements method in FieldElement; expected @Override
    public Fraction subtract(Fraction fraction) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction subtract(Fraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/Fraction.java:538: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public Fraction multiply(Fraction fraction) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction multiply(Fraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/Fraction.java:559: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public Fraction multiply(final int i) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction multiply(final int i) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/Fraction.java:573: warning: [MissingOverride] divide implements method in FieldElement; expected @Override
    public Fraction divide(Fraction fraction) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction divide(Fraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-1/src/main/java/org/apache/commons/math3/fraction/Fraction.java:667: warning: [MissingOverride] getField implements method in FieldElement; expected @Override
    public FractionField getField() {
                         ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public FractionField getField() {'?
9 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-100

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-100/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java:101: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                                          new Object[] { new Integer(maxCostEval) });
                                                         ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'new Object[] { maxCostEval });'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java:126: warning: [MissingOverride] getRMS implements method in Estimator; expected @Override
    public double getRMS(EstimationProblem problem) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getRMS(EstimationProblem problem) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java:158: warning: [MissingOverride] getCovariances implements method in Estimator; expected @Override
    public double[][] getCovariances(EstimationProblem problem)
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[][] getCovariances(EstimationProblem problem)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java:199: warning: [MissingOverride] guessParametersErrors implements method in Estimator; expected @Override
    public double[] guessParametersErrors(EstimationProblem problem)
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] guessParametersErrors(EstimationProblem problem)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java:205: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                                          new Object[] { new Integer(m), new Integer(p)});
                                                         ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'new Object[] { m, new Integer(p)});'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java:205: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                                          new Object[] { new Integer(m), new Integer(p)});
                                                                         ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'new Object[] { new Integer(m), p});'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java:257: warning: [MissingOverride] estimate implements method in Estimator; expected @Override
    public abstract void estimate(EstimationProblem problem)
                         ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public abstract void estimate(EstimationProblem problem)'?
7 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-101

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-101/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-101/src/java/org/apache/commons/math/complex/ComplexFormat.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-101/src/java/org/apache/commons/math/complex/ComplexFormat.java:174: warning: [MissingOverride] format implements method in Format; expected @Override
    public StringBuffer format(Object obj, StringBuffer toAppendTo,
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public StringBuffer format(Object obj, StringBuffer toAppendTo,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-101/src/java/org/apache/commons/math/complex/ComplexFormat.java:452: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                ret = new Double(value);
                      ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'ret = value;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-101/src/java/org/apache/commons/math/complex/ComplexFormat.java:498: warning: [MissingOverride] parseObject implements method in Format; expected @Override
    public Object parseObject(String source, ParsePosition pos) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object parseObject(String source, ParsePosition pos) {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-102

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-102/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java:64: warning: [MissingOverride] chiSquare implements method in ChiSquareTest; expected @Override
    public double chiSquare(double[] expected, long[] observed)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double chiSquare(double[] expected, long[] observed)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java:95: warning: [MissingOverride] chiSquareTest implements method in ChiSquareTest; expected @Override
    public double chiSquareTest(double[] expected, long[] observed)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double chiSquareTest(double[] expected, long[] observed)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java:116: warning: [MissingOverride] chiSquareTest implements method in ChiSquareTest; expected @Override
    public boolean chiSquareTest(double[] expected, long[] observed, 
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean chiSquareTest(double[] expected, long[] observed,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java:130: warning: [MissingOverride] chiSquare implements method in ChiSquareTest; expected @Override
    public double chiSquare(long[][] counts) throws IllegalArgumentException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double chiSquare(long[][] counts) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java:167: warning: [MissingOverride] chiSquareTest implements method in ChiSquareTest; expected @Override
    public double chiSquareTest(long[][] counts)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double chiSquareTest(long[][] counts)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java:183: warning: [MissingOverride] chiSquareTest implements method in ChiSquareTest; expected @Override
    public boolean chiSquareTest(long[][] counts, double alpha)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean chiSquareTest(long[][] counts, double alpha)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java:197: warning: [MissingOverride] chiSquareDataSetsComparison implements method in UnknownDistributionChiSquareTest; expected @Override
    public double chiSquareDataSetsComparison(long[] observed1, long[] observed2)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double chiSquareDataSetsComparison(long[] observed1, long[] observed2)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java:259: warning: [MissingOverride] chiSquareTestDataSetsComparison implements method in UnknownDistributionChiSquareTest; expected @Override
    public double chiSquareTestDataSetsComparison(long[] observed1, long[] observed2)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double chiSquareTestDataSetsComparison(long[] observed1, long[] observed2)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java:275: warning: [MissingOverride] chiSquareTestDataSetsComparison implements method in UnknownDistributionChiSquareTest; expected @Override
    public boolean chiSquareTestDataSetsComparison(long[] observed1, long[] observed2,
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean chiSquareTestDataSetsComparison(long[] observed1, long[] observed2,'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-102/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
9 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-103

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-103/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java:67: warning: [MissingOverride] getMean implements method in NormalDistribution; expected @Override
    public double getMean() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getMean() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java:75: warning: [MissingOverride] setMean implements method in NormalDistribution; expected @Override
    public void setMean(double mean) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setMean(double mean) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java:83: warning: [MissingOverride] getStandardDeviation implements method in NormalDistribution; expected @Override
    public double getStandardDeviation() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getStandardDeviation() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java:92: warning: [MissingOverride] setStandardDeviation implements method in NormalDistribution; expected @Override
    public void setStandardDeviation(double sd) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setStandardDeviation(double sd) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java:108: warning: [MissingOverride] cumulativeProbability implements method in Distribution; expected @Override
    public double cumulativeProbability(double x) throws MathException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double cumulativeProbability(double x) throws MathException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java:127: warning: [MissingOverride] inverseCumulativeProbability overrides method in AbstractContinuousDistribution; expected @Override
    public double inverseCumulativeProbability(final double p) 
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double inverseCumulativeProbability(final double p)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java:147: warning: [MissingOverride] getDomainLowerBound implements method in AbstractContinuousDistribution; expected @Override
    protected double getDomainLowerBound(double p) {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected double getDomainLowerBound(double p) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java:168: warning: [MissingOverride] getDomainUpperBound implements method in AbstractContinuousDistribution; expected @Override
    protected double getDomainUpperBound(double p) {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected double getDomainUpperBound(double p) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java:188: warning: [MissingOverride] getInitialDomain implements method in AbstractContinuousDistribution; expected @Override
    protected double getInitialDomain(double p) {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected double getInitialDomain(double p) {'?
9 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-104

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/src/java/org/apache/commons/math/special/Gamma.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/src/java/org/apache/commons/math/special/Gamma.java:42: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
        0.99999999999999709182,
        ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean '0.9999999999999971,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/src/java/org/apache/commons/math/special/Gamma.java:43: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
        57.156235665862923517,
        ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean '57.15623566586292,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/src/java/org/apache/commons/math/special/Gamma.java:44: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
        -59.597960355475491248,
         ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean '-59.59796035547549,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/src/java/org/apache/commons/math/special/Gamma.java:45: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
        14.136097974741747174,
        ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean '14.136097974741746,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/src/java/org/apache/commons/math/special/Gamma.java:46: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
        -0.49191381609762019978,
         ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean '-0.4919138160976202,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/src/java/org/apache/commons/math/special/Gamma.java:47: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
        .33994649984811888699e-4,
        ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean '0.00003399464998481189,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/src/java/org/apache/commons/math/special/Gamma.java:48: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
        .46523628927048575665e-4,
        ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean '0.00004652362892704858,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/src/java/org/apache/commons/math/special/Gamma.java:49: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
        -.98374475304879564677e-4,
         ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean '-0.00009837447530487956,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/src/java/org/apache/commons/math/special/Gamma.java:50: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
        .15808870322491248884e-3,
        ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean '0.0001580887032249125,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/src/java/org/apache/commons/math/special/Gamma.java:51: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
        -.21026444172410488319e-3,
         ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean '-0.00021026444172410488,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/src/java/org/apache/commons/math/special/Gamma.java:52: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
        .21743961811521264320e-3,
        ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean '0.00021743961811521265,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/src/java/org/apache/commons/math/special/Gamma.java:53: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
        -.16431810653676389022e-3,
         ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean '-0.0001643181065367639,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/src/java/org/apache/commons/math/special/Gamma.java:54: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
        .84418223983852743293e-4,
        ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean '0.00008441822398385275,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/src/java/org/apache/commons/math/special/Gamma.java:55: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
        -.26190838401581408670e-4,
         ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean '-0.000026190838401581408,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/src/java/org/apache/commons/math/special/Gamma.java:56: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
        .36899182659531622704e-5,
        ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean '0.0000036899182659531625,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/src/java/org/apache/commons/math/special/Gamma.java:247: warning: [MissingOverride] getA implements method in ContinuedFraction; expected @Override
                protected double getA(int n, double x) {
                                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected double getA(int n, double x) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-104/src/java/org/apache/commons/math/special/Gamma.java:251: warning: [MissingOverride] getB implements method in ContinuedFraction; expected @Override
                protected double getB(int n, double x) {
                                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected double getB(int n, double x) {'?
17 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-105

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-105/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-106

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-106/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java:86: warning: [MissingOverride] format overrides method in FractionFormat; expected @Override
    public StringBuffer format(Fraction fraction, StringBuffer toAppendTo,
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public StringBuffer format(Fraction fraction, StringBuffer toAppendTo,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-106/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java:130: warning: [MissingOverride] parse overrides method in FractionFormat; expected @Override
    public Fraction parse(String source, ParsePosition pos) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction parse(String source, ParsePosition pos) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-11

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-11/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java:177: warning: [MissingOverride] density implements method in MultivariateRealDistribution; expected @Override
    public double density(final double[] vals) throws DimensionMismatchException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double density(final double[] vals) throws DimensionMismatchException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-11/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java:205: warning: [MissingOverride] sample implements method in AbstractMultivariateRealDistribution; expected @Override
    public double[] sample() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] sample() {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-12

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-12/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java:42: warning: [MissingOverride] setSeed implements method in RandomGenerator; expected @Override
    public abstract void setSeed(int seed);
                         ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public abstract void setSeed(int seed);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java:45: warning: [MissingOverride] setSeed implements method in RandomGenerator; expected @Override
    public abstract void setSeed(int[] seed);
                         ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public abstract void setSeed(int[] seed);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java:48: warning: [MissingOverride] setSeed implements method in RandomGenerator; expected @Override
    public abstract void setSeed(long seed);
                         ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public abstract void setSeed(long seed);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java:62: warning: [MissingOverride] nextBoolean implements method in RandomGenerator; expected @Override
    public boolean nextBoolean() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean nextBoolean() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java:67: warning: [MissingOverride] nextBytes implements method in RandomGenerator; expected @Override
    public void nextBytes(byte[] bytes) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void nextBytes(byte[] bytes) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java:86: warning: [MissingOverride] nextDouble implements method in RandomGenerator; expected @Override
    public double nextDouble() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double nextDouble() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java:93: warning: [MissingOverride] nextFloat implements method in RandomGenerator; expected @Override
    public float nextFloat() {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public float nextFloat() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java:98: warning: [MissingOverride] nextGaussian implements method in RandomGenerator; expected @Override
    public double nextGaussian() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double nextGaussian() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java:120: warning: [MissingOverride] nextInt implements method in RandomGenerator; expected @Override
    public int nextInt() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int nextInt() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java:139: warning: [MissingOverride] nextInt implements method in RandomGenerator; expected @Override
    public int nextInt(int n) throws IllegalArgumentException {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int nextInt(int n) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java:156: warning: [MissingOverride] nextLong implements method in RandomGenerator; expected @Override
    public long nextLong() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long nextLong() {'?
11 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-13

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-13/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java

Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-14

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-14/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java


************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-14/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-14/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-15

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:85: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
    public static final double PI = 105414357.0 / 33554432.0 + 1.984187159361080883e-9;
                                                               ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'public static final double PI = 105414357.0 / 33554432.0 + 1.984187159361081E-9;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:88: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
    public static final double E = 2850325.0 / 1048576.0 + 8.254840070411028747e-8;
                                                           ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'public static final double E = 2850325.0 / 1048576.0 + 8.254840070411029E-8;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:109: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
    private static final double LN_2_A = 0.693147063255310059;
                                         ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'private static final double LN_2_A = 0.6931470632553101;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:112: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
    private static final double LN_2_B = 1.17304635250823482e-7;
                                         ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'private static final double LN_2_B = 1.1730463525082348E-7;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:386: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
      if (x != x) {
            ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:456: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
      if (x != x) {
            ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:582: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
      if (x != x) {
            ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:872: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
                final double result = exp(x+1.494140625, extra, hiPrec) / 4.455505956692756620;
                                                                          ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'final double result = exp(x+1.494140625, extra, hiPrec) / 4.455505956692757;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:874: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
                    hiPrec[0] /= 4.455505956692756620;
                                 ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'hiPrec[0] /= 4.455505956692757;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:875: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
                    hiPrec[1] /= 4.455505956692756620;
                                 ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'hiPrec[1] /= 4.455505956692757;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:971: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
        if (x != x || x == 0.0) { // NaN or zero
              ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:1135: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
        if ((bits & 0x8000000000000000L) != 0 || x != x) {
                                                   ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:1448: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
        if (x != x) { // X is NaN
              ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:1479: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(y)`.
            if (y != y) { // y is NaN
                  ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:1502: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(y)`.
            if (y != y) { // y is NaN
                  ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:1561: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
            double tmp1 = y * 9.31322574615478515625E-10;
                              ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'double tmp1 = y * 9.313225746154785E-10;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:1562: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
            double tmp2 = tmp1 * 9.31322574615478515625E-10;
                                 ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'double tmp2 = tmp1 * 9.313225746154785E-10;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:2245: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(xa)`.
        if (xa != xa || xa == Double.POSITIVE_INFINITY) {
               ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:2299: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(xa)`.
        if (xa != xa || xa == Double.POSITIVE_INFINITY) {
               ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:2364: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(xa)`.
        if (xa != xa || xa == Double.POSITIVE_INFINITY) {
               ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:2451: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
            idx = (int) (((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);
                            ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'idx = (int) (((-1.7168146928204135 * xa * xa + 8.0) * xa) + 0.5);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:2454: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
            idx = (int) (-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);
                             ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'idx = (int) (-((-1.7168146928204135 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:2578: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
        if (x != x || y != y) {
              ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:2578: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(y)`.
        if (x != x || y != y) {
                        ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:2699: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
      if (x != x) {
            ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:2775: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
      if (x != x) {
            ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:3329: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
        if (x != x) { // NaN
              ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-15/src/main/java/org/apache/commons/math3/util/FastMath.java:3356: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
        if (x != x) { // NaN
              ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
17 errors
11 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-16

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:84: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
    public static final double PI = 105414357.0 / 33554432.0 + 1.984187159361080883e-9;
                                                               ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'public static final double PI = 105414357.0 / 33554432.0 + 1.984187159361081E-9;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:87: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
    public static final double E = 2850325.0 / 1048576.0 + 8.254840070411028747e-8;
                                                           ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'public static final double E = 2850325.0 / 1048576.0 + 8.254840070411029E-8;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:108: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
    private static final double LN_2_A = 0.693147063255310059;
                                         ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'private static final double LN_2_A = 0.6931470632553101;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:111: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
    private static final double LN_2_B = 1.17304635250823482e-7;
                                         ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'private static final double LN_2_B = 1.1730463525082348E-7;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:384: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
      if (x != x) {
            ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:445: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
      if (x != x) {
            ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:562: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
      if (x != x) {
            ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:852: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
                final double result = exp(x+1.494140625, extra, hiPrec) / 4.455505956692756620;
                                                                          ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'final double result = exp(x+1.494140625, extra, hiPrec) / 4.455505956692757;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:854: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
                    hiPrec[0] /= 4.455505956692756620;
                                 ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'hiPrec[0] /= 4.455505956692757;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:855: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
                    hiPrec[1] /= 4.455505956692756620;
                                 ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'hiPrec[1] /= 4.455505956692757;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:951: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
        if (x != x || x == 0.0) { // NaN or zero
              ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:1115: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
        if ((bits & 0x8000000000000000L) != 0 || x != x) {
                                                   ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:1428: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
        if (x != x) { // X is NaN
              ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:1459: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(y)`.
            if (y != y) { // y is NaN
                  ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:1482: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(y)`.
            if (y != y) { // y is NaN
                  ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:1541: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
            double tmp1 = y * 9.31322574615478515625E-10;
                              ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'double tmp1 = y * 9.313225746154785E-10;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:1542: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
            double tmp2 = tmp1 * 9.31322574615478515625E-10;
                                 ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'double tmp2 = tmp1 * 9.313225746154785E-10;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:2225: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(xa)`.
        if (xa != xa || xa == Double.POSITIVE_INFINITY) {
               ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:2279: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(xa)`.
        if (xa != xa || xa == Double.POSITIVE_INFINITY) {
               ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:2344: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(xa)`.
        if (xa != xa || xa == Double.POSITIVE_INFINITY) {
               ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:2431: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
            idx = (int) (((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);
                            ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'idx = (int) (((-1.7168146928204135 * xa * xa + 8.0) * xa) + 0.5);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:2434: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
            idx = (int) (-((-1.7168146928204136 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);
                             ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'idx = (int) (-((-1.7168146928204135 * oneOverXa * oneOverXa + 8.0) * oneOverXa) + 13.07);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:2558: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
        if (x != x || y != y) {
              ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:2558: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(y)`.
        if (x != x || y != y) {
                        ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:2679: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
      if (x != x) {
            ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:2755: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
      if (x != x) {
            ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:3309: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
        if (x != x) { // NaN
              ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-16/src/main/java/org/apache/commons/math3/util/FastMath.java:3336: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
        if (x != x) { // NaN
              ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
17 errors
11 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-17

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-17/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-17/src/main/java/org/apache/commons/math3/dfp/Dfp.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-17/src/main/java/org/apache/commons/math3/dfp/Dfp.java:291: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
            if (x != x) {
                  ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-17/src/main/java/org/apache/commons/math3/dfp/Dfp.java:634: warning: [MissingOverride] getField implements method in FieldElement; expected @Override
    public DfpField getField() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DfpField getField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-17/src/main/java/org/apache/commons/math3/dfp/Dfp.java:1251: warning: [MissingOverride] add implements method in FieldElement; expected @Override
    public Dfp add(final Dfp x) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Dfp add(final Dfp x) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-17/src/main/java/org/apache/commons/math3/dfp/Dfp.java:1399: warning: [MissingOverride] negate implements method in FieldElement; expected @Override
    public Dfp negate() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Dfp negate() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-17/src/main/java/org/apache/commons/math3/dfp/Dfp.java:1409: warning: [MissingOverride] subtract implements method in FieldElement; expected @Override
    public Dfp subtract(final Dfp x) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Dfp subtract(final Dfp x) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-17/src/main/java/org/apache/commons/math3/dfp/Dfp.java:1496: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public Dfp multiply(final Dfp x) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Dfp multiply(final Dfp x) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-17/src/main/java/org/apache/commons/math3/dfp/Dfp.java:1602: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public Dfp multiply(final int x) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Dfp multiply(final int x) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-17/src/main/java/org/apache/commons/math3/dfp/Dfp.java:1673: warning: [MissingOverride] divide implements method in FieldElement; expected @Override
    public Dfp divide(Dfp divisor) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Dfp divide(Dfp divisor) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-17/src/main/java/org/apache/commons/math3/dfp/Dfp.java:1949: warning: [MissingOverride] reciprocal implements method in FieldElement; expected @Override
    public Dfp reciprocal() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Dfp reciprocal() {'?
1 error
8 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-18

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-18/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java:871: warning: [MissingOverride] compareTo implements method in Comparable; expected @Override
        public int compareTo(DoubleIndex o) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(DoubleIndex o) {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-19

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-19/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java:858: warning: [MissingOverride] compareTo implements method in Comparable; expected @Override
        public int compareTo(DoubleIndex o) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(DoubleIndex o) {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-2

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-2/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java:114: warning: [MissingOverride] cumulativeProbability implements method in IntegerDistribution; expected @Override
    public double cumulativeProbability(int x) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double cumulativeProbability(int x) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java:195: warning: [MissingOverride] probability implements method in IntegerDistribution; expected @Override
    public double probability(int x) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double probability(int x) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java:267: warning: [MissingOverride] getNumericalMean implements method in IntegerDistribution; expected @Override
    public double getNumericalMean() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getNumericalMean() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java:278: warning: [MissingOverride] getNumericalVariance implements method in IntegerDistribution; expected @Override
    public double getNumericalVariance() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getNumericalVariance() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java:307: warning: [MissingOverride] getSupportLowerBound implements method in IntegerDistribution; expected @Override
    public int getSupportLowerBound() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getSupportLowerBound() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java:320: warning: [MissingOverride] getSupportUpperBound implements method in IntegerDistribution; expected @Override
    public int getSupportUpperBound() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getSupportUpperBound() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java:331: warning: [MissingOverride] isSupportConnected implements method in IntegerDistribution; expected @Override
    public boolean isSupportConnected() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isSupportConnected() {'?
7 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-20

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-20/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-20/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java:850: warning: [MissingOverride] compareTo implements method in Comparable; expected @Override
        public int compareTo(DoubleIndex o) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(DoubleIndex o) {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-21

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-21/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-21/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-23

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-23/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-22

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java:108: warning: [MissingOverride] density implements method in RealDistribution; expected @Override
    public double density(double x) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double density(double x) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java:116: warning: [MissingOverride] cumulativeProbability implements method in RealDistribution; expected @Override
    public double cumulativeProbability(double x)  {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double cumulativeProbability(double x)  {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java:138: warning: [MissingOverride] getNumericalMean implements method in RealDistribution; expected @Override
    public double getNumericalMean() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getNumericalMean() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java:148: warning: [MissingOverride] getNumericalVariance implements method in RealDistribution; expected @Override
    public double getNumericalVariance() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getNumericalVariance() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java:161: warning: [MissingOverride] getSupportLowerBound implements method in RealDistribution; expected @Override
    public double getSupportLowerBound() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getSupportLowerBound() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java:173: warning: [MissingOverride] getSupportUpperBound implements method in RealDistribution; expected @Override
    public double getSupportUpperBound() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getSupportUpperBound() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java:178: warning: [MissingOverride] isSupportLowerBoundInclusive implements method in RealDistribution; expected @Override
    public boolean isSupportLowerBoundInclusive() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isSupportLowerBoundInclusive() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java:183: warning: [MissingOverride] isSupportUpperBoundInclusive implements method in RealDistribution; expected @Override
    public boolean isSupportUpperBoundInclusive() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isSupportUpperBoundInclusive() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java:194: warning: [MissingOverride] isSupportConnected implements method in RealDistribution; expected @Override
    public boolean isSupportConnected() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isSupportConnected() {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
9 warnings

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java:128: warning: [MissingOverride] density implements method in RealDistribution; expected @Override
    public double density(double x) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double density(double x) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java:152: warning: [MissingOverride] cumulativeProbability implements method in RealDistribution; expected @Override
    public double cumulativeProbability(double x)  {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double cumulativeProbability(double x)  {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java:200: warning: [MissingOverride] getNumericalMean implements method in RealDistribution; expected @Override
    public double getNumericalMean() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getNumericalMean() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java:223: warning: [MissingOverride] getNumericalVariance implements method in RealDistribution; expected @Override
    public double getNumericalVariance() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getNumericalVariance() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java:257: warning: [MissingOverride] getSupportLowerBound implements method in RealDistribution; expected @Override
    public double getSupportLowerBound() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getSupportLowerBound() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java:269: warning: [MissingOverride] getSupportUpperBound implements method in RealDistribution; expected @Override
    public double getSupportUpperBound() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getSupportUpperBound() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java:274: warning: [MissingOverride] isSupportLowerBoundInclusive implements method in RealDistribution; expected @Override
    public boolean isSupportLowerBoundInclusive() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isSupportLowerBoundInclusive() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java:279: warning: [MissingOverride] isSupportUpperBoundInclusive implements method in RealDistribution; expected @Override
    public boolean isSupportUpperBoundInclusive() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isSupportUpperBoundInclusive() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java:290: warning: [MissingOverride] isSupportConnected implements method in RealDistribution; expected @Override
    public boolean isSupportConnected() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isSupportConnected() {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
9 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-24

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-24/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-25

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-25/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-25/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-26

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-26/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-26/src/main/java/org/apache/commons/math3/fraction/Fraction.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-26/src/main/java/org/apache/commons/math3/fraction/Fraction.java:306: warning: [MissingOverride] compareTo implements method in Comparable; expected @Override
    public int compareTo(Fraction object) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(Fraction object) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-26/src/main/java/org/apache/commons/math3/fraction/Fraction.java:405: warning: [MissingOverride] negate implements method in FieldElement; expected @Override
    public Fraction negate() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction negate() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-26/src/main/java/org/apache/commons/math3/fraction/Fraction.java:416: warning: [MissingOverride] reciprocal implements method in FieldElement; expected @Override
    public Fraction reciprocal() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction reciprocal() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-26/src/main/java/org/apache/commons/math3/fraction/Fraction.java:430: warning: [MissingOverride] add implements method in FieldElement; expected @Override
    public Fraction add(Fraction fraction) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction add(Fraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-26/src/main/java/org/apache/commons/math3/fraction/Fraction.java:453: warning: [MissingOverride] subtract implements method in FieldElement; expected @Override
    public Fraction subtract(Fraction fraction) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction subtract(Fraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-26/src/main/java/org/apache/commons/math3/fraction/Fraction.java:533: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public Fraction multiply(Fraction fraction) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction multiply(Fraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-26/src/main/java/org/apache/commons/math3/fraction/Fraction.java:554: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public Fraction multiply(final int i) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction multiply(final int i) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-26/src/main/java/org/apache/commons/math3/fraction/Fraction.java:568: warning: [MissingOverride] divide implements method in FieldElement; expected @Override
    public Fraction divide(Fraction fraction) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction divide(Fraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-26/src/main/java/org/apache/commons/math3/fraction/Fraction.java:662: warning: [MissingOverride] getField implements method in FieldElement; expected @Override
    public FractionField getField() {
                         ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public FractionField getField() {'?
9 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-27

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-27/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-27/src/main/java/org/apache/commons/math3/fraction/Fraction.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-27/src/main/java/org/apache/commons/math3/fraction/Fraction.java:306: warning: [MissingOverride] compareTo implements method in Comparable; expected @Override
    public int compareTo(Fraction object) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(Fraction object) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-27/src/main/java/org/apache/commons/math3/fraction/Fraction.java:405: warning: [MissingOverride] negate implements method in FieldElement; expected @Override
    public Fraction negate() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction negate() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-27/src/main/java/org/apache/commons/math3/fraction/Fraction.java:416: warning: [MissingOverride] reciprocal implements method in FieldElement; expected @Override
    public Fraction reciprocal() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction reciprocal() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-27/src/main/java/org/apache/commons/math3/fraction/Fraction.java:430: warning: [MissingOverride] add implements method in FieldElement; expected @Override
    public Fraction add(Fraction fraction) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction add(Fraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-27/src/main/java/org/apache/commons/math3/fraction/Fraction.java:453: warning: [MissingOverride] subtract implements method in FieldElement; expected @Override
    public Fraction subtract(Fraction fraction) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction subtract(Fraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-27/src/main/java/org/apache/commons/math3/fraction/Fraction.java:533: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public Fraction multiply(Fraction fraction) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction multiply(Fraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-27/src/main/java/org/apache/commons/math3/fraction/Fraction.java:554: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public Fraction multiply(final int i) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction multiply(final int i) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-27/src/main/java/org/apache/commons/math3/fraction/Fraction.java:568: warning: [MissingOverride] divide implements method in FieldElement; expected @Override
    public Fraction divide(Fraction fraction) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Fraction divide(Fraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-27/src/main/java/org/apache/commons/math3/fraction/Fraction.java:662: warning: [MissingOverride] getField implements method in FieldElement; expected @Override
    public FractionField getField() {
                         ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public FractionField getField() {'?
9 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-28

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-28/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java:142: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                    for (; i < tableau.getWidth() - 1 && minRow != row; i++) {
                                                                ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'for (; i < tableau.getWidth() - 1 && !Objects.equals(minRow, row); i++) {' or 'for (; i < tableau.getWidth() - 1 && !minRow.equals(row); i++) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java:143: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
                        if (row == tableau.getBasicRow(i)) {
                                ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(row, tableau.getBasicRow(i))) {' or 'if (row.equals(tableau.getBasicRow(i))) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-29

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-29/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java:818: warning: [MissingOverride] hasNext implements method in Iterator; expected @Override
        public boolean hasNext() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean hasNext() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java:823: warning: [MissingOverride] next implements method in Iterator; expected @Override
        public Entry next() {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Entry next() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java:829: warning: [MissingOverride] remove implements method in Iterator; expected @Override
        public void remove() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void remove() {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-3

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-3/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-3/src/main/java/org/apache/commons/math3/util/MathArrays.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-3/src/main/java/org/apache/commons/math3/util/MathArrays.java:710: warning: [MissingOverride] compare implements method in Comparator; expected @Override
            public int compare(Pair<Double, Integer> o1,
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compare(Pair<Double, Integer> o1,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-3/src/main/java/org/apache/commons/math3/util/MathArrays.java:715: warning: [MissingOverride] compare implements method in Comparator; expected @Override
            public int compare(Pair<Double, Integer> o1,
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compare(Pair<Double, Integer> o1,'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-30

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-30/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-31

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-31/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-32

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-32/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java:385: warning: [MissingOverride] compareTo implements method in Comparable; expected @Override
        public int compareTo(final ComparableSegment o) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(final ComparableSegment o) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java:422: warning: [MissingOverride] visitOrder implements method in BSPTreeVisitor; expected @Override
        public Order visitOrder(final BSPTree<Euclidean2D> node) {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Order visitOrder(final BSPTree<Euclidean2D> node) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java:427: warning: [MissingOverride] visitInternalNode implements method in BSPTreeVisitor; expected @Override
        public void visitInternalNode(final BSPTree<Euclidean2D> node) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visitInternalNode(final BSPTree<Euclidean2D> node) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java:439: warning: [MissingOverride] visitLeafNode implements method in BSPTreeVisitor; expected @Override
        public void visitLeafNode(final BSPTree<Euclidean2D> node) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void visitLeafNode(final BSPTree<Euclidean2D> node) {'?
4 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-33

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-33/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-33/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-34

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-34/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java:137: warning: [MissingOverride] addChromosome implements method in Population; expected @Override
    public void addChromosome(final Chromosome chromosome) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void addChromosome(final Chromosome chromosome) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java:149: warning: [MissingOverride] getFittestChromosome implements method in Population; expected @Override
    public Chromosome getFittestChromosome() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chromosome getFittestChromosome() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java:165: warning: [MissingOverride] getPopulationLimit implements method in Population; expected @Override
    public int getPopulationLimit() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getPopulationLimit() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java:190: warning: [MissingOverride] getPopulationSize implements method in Population; expected @Override
    public int getPopulationSize() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getPopulationSize() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java:208: warning: [MissingOverride] iterator implements method in Iterable; expected @Override
    public Iterator<Chromosome> iterator() {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Iterator<Chromosome> iterator() {'?
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-35

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-35/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-35/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java:74: warning: [MissingOverride] nextGeneration implements method in Population; expected @Override
    public Population nextGeneration() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Population nextGeneration() {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-36

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-36/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-36/src/main/java/org/apache/commons/math/fraction/BigFraction.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-36/src/main/java/org/apache/commons/math/fraction/BigFraction.java:506: warning: [MissingOverride] add implements method in FieldElement; expected @Override
    public BigFraction add(final BigFraction fraction) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigFraction add(final BigFraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-36/src/main/java/org/apache/commons/math/fraction/BigFraction.java:593: warning: [MissingOverride] compareTo implements method in Comparable; expected @Override
    public int compareTo(final BigFraction object) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(final BigFraction object) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-36/src/main/java/org/apache/commons/math/fraction/BigFraction.java:663: warning: [MissingOverride] divide implements method in FieldElement; expected @Override
    public BigFraction divide(final BigFraction fraction) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigFraction divide(final BigFraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-36/src/main/java/org/apache/commons/math/fraction/BigFraction.java:872: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public BigFraction multiply(final int i) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigFraction multiply(final int i) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-36/src/main/java/org/apache/commons/math/fraction/BigFraction.java:900: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public BigFraction multiply(final BigFraction fraction) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigFraction multiply(final BigFraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-36/src/main/java/org/apache/commons/math/fraction/BigFraction.java:920: warning: [MissingOverride] negate implements method in FieldElement; expected @Override
    public BigFraction negate() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigFraction negate() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-36/src/main/java/org/apache/commons/math/fraction/BigFraction.java:1015: warning: [MissingOverride] reciprocal implements method in FieldElement; expected @Override
    public BigFraction reciprocal() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigFraction reciprocal() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-36/src/main/java/org/apache/commons/math/fraction/BigFraction.java:1085: warning: [MissingOverride] subtract implements method in FieldElement; expected @Override
    public BigFraction subtract(final BigFraction fraction) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigFraction subtract(final BigFraction fraction) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-36/src/main/java/org/apache/commons/math/fraction/BigFraction.java:1129: warning: [MissingOverride] getField implements method in FieldElement; expected @Override
    public BigFractionField getField() {
                            ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigFractionField getField() {'?
9 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-37

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-37/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-37/src/main/java/org/apache/commons/math/complex/Complex.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-37/src/main/java/org/apache/commons/math/complex/Complex.java:156: warning: [MissingOverride] add implements method in FieldElement; expected @Override
    public Complex add(Complex addend) throws NullArgumentException {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex add(Complex addend) throws NullArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-37/src/main/java/org/apache/commons/math/complex/Complex.java:246: warning: [MissingOverride] divide implements method in FieldElement; expected @Override
    public Complex divide(Complex divisor)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex divide(Complex divisor)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-37/src/main/java/org/apache/commons/math/complex/Complex.java:299: warning: [MissingOverride] reciprocal implements method in FieldElement; expected @Override
    public Complex reciprocal() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex reciprocal() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-37/src/main/java/org/apache/commons/math/complex/Complex.java:436: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public Complex multiply(Complex factor)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex multiply(Complex factor)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-37/src/main/java/org/apache/commons/math/complex/Complex.java:461: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public Complex multiply(final int factor) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex multiply(final int factor) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-37/src/main/java/org/apache/commons/math/complex/Complex.java:500: warning: [MissingOverride] negate implements method in FieldElement; expected @Override
    public Complex negate() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex negate() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-37/src/main/java/org/apache/commons/math/complex/Complex.java:526: warning: [MissingOverride] subtract implements method in FieldElement; expected @Override
    public Complex subtract(Complex subtrahend)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex subtract(Complex subtrahend)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-37/src/main/java/org/apache/commons/math/complex/Complex.java:1211: warning: [MissingOverride] getField implements method in FieldElement; expected @Override
    public ComplexField getField() {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public ComplexField getField() {'?
8 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-39

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-39/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-38

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-38/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java:480: error: [FallThrough] Execution may fall through from the previous case; add a `// fall through` comment before this line if it was deliberate
        case 60: {
        ^
    (see http://errorprone.info/bugpattern/FallThrough)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java:554: error: [FallThrough] Execution may fall through from the previous case; add a `// fall through` comment before this line if it was deliberate
        case 90: {
        ^
    (see http://errorprone.info/bugpattern/FallThrough)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java:685: error: [FallThrough] Execution may fall through from the previous case; add a `// fall through` comment before this line if it was deliberate
        case 230: {
        ^
    (see http://errorprone.info/bugpattern/FallThrough)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java:808: error: [FallThrough] Execution may fall through from the previous case; add a `// fall through` comment before this line if it was deliberate
        case 360: {
        ^
    (see http://errorprone.info/bugpattern/FallThrough)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java:1117: error: [FallThrough] Execution may fall through from the previous case; add a `// fall through` comment before this line if it was deliberate
        case 650: {
        ^
    (see http://errorprone.info/bugpattern/FallThrough)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java:1169: error: [FallThrough] Execution may fall through from the previous case; add a `// fall through` comment before this line if it was deliberate
        case 680: {
        ^
    (see http://errorprone.info/bugpattern/FallThrough)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java:1194: error: [FallThrough] Execution may fall through from the previous case; add a `// fall through` comment before this line if it was deliberate
        case 720: {
        ^
    (see http://errorprone.info/bugpattern/FallThrough)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java:1883: error: [FallThrough] Execution may fall through from the previous case; add a `// fall through` comment before this line if it was deliberate
        case 30: {
        ^
    (see http://errorprone.info/bugpattern/FallThrough)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java:2024: error: [FallThrough] Execution may fall through from the previous case; add a `// fall through` comment before this line if it was deliberate
        case 90: {
        ^
    (see http://errorprone.info/bugpattern/FallThrough)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java:2033: error: [FallThrough] Execution may fall through from the previous case; add a `// fall through` comment before this line if it was deliberate
        case 100: {
        ^
    (see http://errorprone.info/bugpattern/FallThrough)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java:2216: error: [FallThrough] Execution may fall through from the previous case; add a `// fall through` comment before this line if it was deliberate
        case 190: {
        ^
    (see http://errorprone.info/bugpattern/FallThrough)
11 errors

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-40

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-40/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java:383: warning: [MissingOverride] solve implements method in BracketedUnivariateRealSolver; expected @Override
    public double solve(int maxEval, UnivariateFunction f, double min,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double solve(int maxEval, UnivariateFunction f, double min,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java:390: warning: [MissingOverride] solve implements method in BracketedUnivariateRealSolver; expected @Override
    public double solve(int maxEval, UnivariateFunction f, double min,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double solve(int maxEval, UnivariateFunction f, double min,'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-4

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-4/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-4/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java


************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-4/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-4/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-41

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-41/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java:195: warning: [MissingOverride] getN implements method in StorelessUnivariateStatistic; expected @Override
    public long getN() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getN() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java:313: warning: [MissingOverride] evaluate implements method in WeightedEvaluation; expected @Override
    public double evaluate(final double[] values, final double[] weights,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double evaluate(final double[] values, final double[] weights,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-41/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java:369: warning: [MissingOverride] evaluate implements method in WeightedEvaluation; expected @Override
    public double evaluate(final double[] values, final double[] weights) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double evaluate(final double[] values, final double[] weights) {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-42

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-42/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-43

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-43/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-43/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-43/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java:174: warning: [MissingOverride] getN implements method in StatisticalSummary; expected @Override
    public long getN() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getN() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-43/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java:182: warning: [MissingOverride] getSum implements method in StatisticalSummary; expected @Override
    public double getSum() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getSum() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-43/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java:204: warning: [MissingOverride] getMean implements method in StatisticalSummary; expected @Override
    public double getMean() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getMean() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-43/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java:215: warning: [MissingOverride] getStandardDeviation implements method in StatisticalSummary; expected @Override
    public double getStandardDeviation() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getStandardDeviation() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-43/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java:238: warning: [MissingOverride] getVariance implements method in StatisticalSummary; expected @Override
    public double getVariance() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getVariance() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-43/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java:263: warning: [MissingOverride] getMax implements method in StatisticalSummary; expected @Override
    public double getMax() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getMax() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-43/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java:274: warning: [MissingOverride] getMin implements method in StatisticalSummary; expected @Override
    public double getMin() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getMin() {'?
7 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-44

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-44/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java:104: warning: [MissingOverride] getName implements method in ODEIntegrator; expected @Override
    public String getName() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getName() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java:109: warning: [MissingOverride] addStepHandler implements method in ODEIntegrator; expected @Override
    public void addStepHandler(final StepHandler handler) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void addStepHandler(final StepHandler handler) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java:114: warning: [MissingOverride] getStepHandlers implements method in ODEIntegrator; expected @Override
    public Collection<StepHandler> getStepHandlers() {
                                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Collection<StepHandler> getStepHandlers() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java:119: warning: [MissingOverride] clearStepHandlers implements method in ODEIntegrator; expected @Override
    public void clearStepHandlers() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void clearStepHandlers() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java:124: warning: [MissingOverride] addEventHandler implements method in ODEIntegrator; expected @Override
    public void addEventHandler(final EventHandler handler,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void addEventHandler(final EventHandler handler,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java:134: warning: [MissingOverride] addEventHandler implements method in ODEIntegrator; expected @Override
    public void addEventHandler(final EventHandler handler,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void addEventHandler(final EventHandler handler,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java:144: warning: [MissingOverride] getEventHandlers implements method in ODEIntegrator; expected @Override
    public Collection<EventHandler> getEventHandlers() {
                                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Collection<EventHandler> getEventHandlers() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java:153: warning: [MissingOverride] clearEventHandlers implements method in ODEIntegrator; expected @Override
    public void clearEventHandlers() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void clearEventHandlers() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java:158: warning: [MissingOverride] getCurrentStepStart implements method in ODEIntegrator; expected @Override
    public double getCurrentStepStart() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getCurrentStepStart() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java:163: warning: [MissingOverride] getCurrentSignedStepsize implements method in ODEIntegrator; expected @Override
    public double getCurrentSignedStepsize() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getCurrentSignedStepsize() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java:168: warning: [MissingOverride] setMaxEvaluations implements method in ODEIntegrator; expected @Override
    public void setMaxEvaluations(int maxEvaluations) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setMaxEvaluations(int maxEvaluations) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java:173: warning: [MissingOverride] getMaxEvaluations implements method in ODEIntegrator; expected @Override
    public int getMaxEvaluations() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaxEvaluations() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java:178: warning: [MissingOverride] getEvaluations implements method in ODEIntegrator; expected @Override
    public int getEvaluations() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getEvaluations() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java:196: warning: [MissingOverride] integrate implements method in FirstOrderIntegrator; expected @Override
    public double integrate(final FirstOrderDifferentialEquations equations,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double integrate(final FirstOrderDifferentialEquations equations,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java:295: warning: [MissingOverride] compare implements method in Comparator; expected @Override
                public int compare(EventState es0, EventState es1) {
                           ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compare(EventState es0, EventState es1) {'?
15 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-45

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-45/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-45/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-46

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-46/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-46/src/main/java/org/apache/commons/math/complex/Complex.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-46/src/main/java/org/apache/commons/math/complex/Complex.java:158: warning: [MissingOverride] add implements method in FieldElement; expected @Override
    public Complex add(Complex addend) throws NullArgumentException {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex add(Complex addend) throws NullArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-46/src/main/java/org/apache/commons/math/complex/Complex.java:251: warning: [MissingOverride] divide implements method in FieldElement; expected @Override
    public Complex divide(Complex divisor)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex divide(Complex divisor)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-46/src/main/java/org/apache/commons/math/complex/Complex.java:419: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public Complex multiply(Complex factor)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex multiply(Complex factor)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-46/src/main/java/org/apache/commons/math/complex/Complex.java:490: warning: [MissingOverride] subtract implements method in FieldElement; expected @Override
    public Complex subtract(Complex subtrahend)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex subtract(Complex subtrahend)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-46/src/main/java/org/apache/commons/math/complex/Complex.java:1176: warning: [MissingOverride] getField implements method in FieldElement; expected @Override
    public ComplexField getField() {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public ComplexField getField() {'?
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-47

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-47/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-47/src/main/java/org/apache/commons/math/complex/Complex.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-47/src/main/java/org/apache/commons/math/complex/Complex.java:156: warning: [MissingOverride] add implements method in FieldElement; expected @Override
    public Complex add(Complex addend) throws NullArgumentException {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex add(Complex addend) throws NullArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-47/src/main/java/org/apache/commons/math/complex/Complex.java:249: warning: [MissingOverride] divide implements method in FieldElement; expected @Override
    public Complex divide(Complex divisor)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex divide(Complex divisor)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-47/src/main/java/org/apache/commons/math/complex/Complex.java:415: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public Complex multiply(Complex factor)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex multiply(Complex factor)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-47/src/main/java/org/apache/commons/math/complex/Complex.java:486: warning: [MissingOverride] subtract implements method in FieldElement; expected @Override
    public Complex subtract(Complex subtrahend)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex subtract(Complex subtrahend)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-47/src/main/java/org/apache/commons/math/complex/Complex.java:1172: warning: [MissingOverride] getField implements method in FieldElement; expected @Override
    public ComplexField getField() {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public ComplexField getField() {'?
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-48

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-48/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java:107: warning: [MissingOverride] solve implements method in BracketedUnivariateRealSolver; expected @Override
    public double solve(final int maxEval, final UnivariateRealFunction f,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double solve(final int maxEval, final UnivariateRealFunction f,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java:114: warning: [MissingOverride] solve implements method in BracketedUnivariateRealSolver; expected @Override
    public double solve(final int maxEval, final UnivariateRealFunction f,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double solve(final int maxEval, final UnivariateRealFunction f,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java:129: warning: [MissingOverride] doSolve implements method in BaseAbstractUnivariateRealSolver; expected @Override
    protected final double doSolve() {
                           ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected final double doSolve() {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-49

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-49/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:277: warning: [MissingOverride] append implements method in RealVector; expected @Override
    public OpenMapRealVector append(RealVector v) {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector append(RealVector v) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:285: warning: [MissingOverride] append implements method in RealVector; expected @Override
    public OpenMapRealVector append(double d) {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector append(double d) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:292: warning: [MissingOverride] append implements method in RealVector; expected @Override
    public OpenMapRealVector append(double[] a) {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector append(double[] a) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:342: warning: [MissingOverride] ebeDivide implements method in RealVector; expected @Override
    public OpenMapRealVector ebeDivide(RealVector v) {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector ebeDivide(RealVector v) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:367: warning: [MissingOverride] ebeMultiply implements method in RealVector; expected @Override
    public OpenMapRealVector ebeMultiply(RealVector v) {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector ebeMultiply(RealVector v) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:392: warning: [MissingOverride] getSubVector implements method in RealVector; expected @Override
    public OpenMapRealVector getSubVector(int index, int n) {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector getSubVector(int index, int n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:421: warning: [MissingOverride] getDimension implements method in RealVector; expected @Override
    public int getDimension() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getDimension() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:478: warning: [MissingOverride] getEntry implements method in RealVector; expected @Override
    public double getEntry(int index) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getEntry(int index) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:588: warning: [MissingOverride] isInfinite implements method in RealVector; expected @Override
    public boolean isInfinite() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isInfinite() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:605: warning: [MissingOverride] isNaN implements method in RealVector; expected @Override
    public boolean isNaN() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isNaN() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:649: warning: [MissingOverride] projection implements method in RealVector; expected @Override
    public RealVector projection(RealVector v) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector projection(RealVector v) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:662: warning: [MissingOverride] setEntry implements method in RealVector; expected @Override
    public void setEntry(int index, double value) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setEntry(int index, double value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:910: warning: [MissingOverride] hasNext implements method in Iterator; expected @Override
        public boolean hasNext() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean hasNext() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:915: warning: [MissingOverride] next implements method in Iterator; expected @Override
        public Entry next() {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Entry next() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:921: warning: [MissingOverride] remove implements method in Iterator; expected @Override
        public void remove() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void remove() {'?
15 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-5

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-5/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-5/src/main/java/org/apache/commons/math3/complex/Complex.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-5/src/main/java/org/apache/commons/math3/complex/Complex.java:156: warning: [MissingOverride] add implements method in FieldElement; expected @Override
    public Complex add(Complex addend) throws NullArgumentException {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex add(Complex addend) throws NullArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-5/src/main/java/org/apache/commons/math3/complex/Complex.java:246: warning: [MissingOverride] divide implements method in FieldElement; expected @Override
    public Complex divide(Complex divisor)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex divide(Complex divisor)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-5/src/main/java/org/apache/commons/math3/complex/Complex.java:299: warning: [MissingOverride] reciprocal implements method in FieldElement; expected @Override
    public Complex reciprocal() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex reciprocal() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-5/src/main/java/org/apache/commons/math3/complex/Complex.java:436: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public Complex multiply(Complex factor)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex multiply(Complex factor)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-5/src/main/java/org/apache/commons/math3/complex/Complex.java:461: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public Complex multiply(final int factor) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex multiply(final int factor) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-5/src/main/java/org/apache/commons/math3/complex/Complex.java:500: warning: [MissingOverride] negate implements method in FieldElement; expected @Override
    public Complex negate() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex negate() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-5/src/main/java/org/apache/commons/math3/complex/Complex.java:526: warning: [MissingOverride] subtract implements method in FieldElement; expected @Override
    public Complex subtract(Complex subtrahend)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex subtract(Complex subtrahend)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-5/src/main/java/org/apache/commons/math3/complex/Complex.java:1221: warning: [MissingOverride] getField implements method in FieldElement; expected @Override
    public ComplexField getField() {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public ComplexField getField() {'?
8 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-50

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-50/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java:106: warning: [MissingOverride] solve implements method in BracketedUnivariateRealSolver; expected @Override
    public double solve(final int maxEval, final UnivariateRealFunction f,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double solve(final int maxEval, final UnivariateRealFunction f,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java:113: warning: [MissingOverride] solve implements method in BracketedUnivariateRealSolver; expected @Override
    public double solve(final int maxEval, final UnivariateRealFunction f,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double solve(final int maxEval, final UnivariateRealFunction f,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java:128: warning: [MissingOverride] doSolve implements method in BaseAbstractUnivariateRealSolver; expected @Override
    protected final double doSolve() {
                           ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected final double doSolve() {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-51

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-51/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java:106: warning: [MissingOverride] solve implements method in BracketedUnivariateRealSolver; expected @Override
    public double solve(final int maxEval, final UnivariateRealFunction f,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double solve(final int maxEval, final UnivariateRealFunction f,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java:113: warning: [MissingOverride] solve implements method in BracketedUnivariateRealSolver; expected @Override
    public double solve(final int maxEval, final UnivariateRealFunction f,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double solve(final int maxEval, final UnivariateRealFunction f,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-51/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java:128: warning: [MissingOverride] doSolve implements method in BaseAbstractUnivariateRealSolver; expected @Override
    protected final double doSolve() {
                           ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected final double doSolve() {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-52

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-52/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-52/src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-53

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-53/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-53/src/main/java/org/apache/commons/math/complex/Complex.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-53/src/main/java/org/apache/commons/math/complex/Complex.java:150: warning: [MissingOverride] add implements method in FieldElement; expected @Override
    public Complex add(Complex rhs)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex add(Complex rhs)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-53/src/main/java/org/apache/commons/math/complex/Complex.java:213: warning: [MissingOverride] divide implements method in FieldElement; expected @Override
    public Complex divide(Complex rhs)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex divide(Complex rhs)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-53/src/main/java/org/apache/commons/math/complex/Complex.java:362: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public Complex multiply(Complex rhs)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex multiply(Complex rhs)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-53/src/main/java/org/apache/commons/math/complex/Complex.java:449: warning: [MissingOverride] subtract implements method in FieldElement; expected @Override
    public Complex subtract(Complex rhs)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Complex subtract(Complex rhs)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-53/src/main/java/org/apache/commons/math/complex/Complex.java:1011: warning: [MissingOverride] getField implements method in FieldElement; expected @Override
    public ComplexField getField() {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public ComplexField getField() {'?
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-54

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-54/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-54/src/main/java/org/apache/commons/math/dfp/Dfp.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-54/src/main/java/org/apache/commons/math/dfp/Dfp.java:288: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
            if (x != x) {
                  ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-54/src/main/java/org/apache/commons/math/dfp/Dfp.java:632: warning: [MissingOverride] getField implements method in FieldElement; expected @Override
    public DfpField getField() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DfpField getField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-54/src/main/java/org/apache/commons/math/dfp/Dfp.java:1165: warning: [MissingOverride] add implements method in FieldElement; expected @Override
    public Dfp add(final Dfp x) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Dfp add(final Dfp x) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-54/src/main/java/org/apache/commons/math/dfp/Dfp.java:1323: warning: [MissingOverride] subtract implements method in FieldElement; expected @Override
    public Dfp subtract(final Dfp x) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Dfp subtract(final Dfp x) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-54/src/main/java/org/apache/commons/math/dfp/Dfp.java:1410: warning: [MissingOverride] multiply implements method in FieldElement; expected @Override
    public Dfp multiply(final Dfp x) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Dfp multiply(final Dfp x) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-54/src/main/java/org/apache/commons/math/dfp/Dfp.java:1579: warning: [MissingOverride] divide implements method in FieldElement; expected @Override
    public Dfp divide(Dfp divisor) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Dfp divide(Dfp divisor) {'?
1 error
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-55

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-55/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-55/src/main/java/org/apache/commons/math/geometry/Vector3D.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-56

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-56/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-56/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-56/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java:92: warning: [MissingOverride] hasNext implements method in Iterator; expected @Override
        public boolean hasNext() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean hasNext() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-56/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java:105: warning: [MissingOverride] next implements method in Iterator; expected @Override
        public Integer next() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Integer next() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-56/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java:153: warning: [MissingOverride] remove implements method in Iterator; expected @Override
        public void remove() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void remove() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-56/src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java:195: warning: [MissingOverride] iterator implements method in Iterable; expected @Override
    public Iterator iterator() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Iterator iterator() {'?
4 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-57

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-57/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java:180: warning: [NarrowingCompoundAssignment] Compound assignments from double to int hide lossy casts
                sum += d * d;
                    ^
    (see http://errorprone.info/bugpattern/NarrowingCompoundAssignment)
  Did you mean 'sum = (int) (sum + d * d);'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-58

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-58/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java:87: warning: [MissingOverride] value implements method in ParametricUnivariateRealFunction; expected @Override
                public double value(double x, double[] p) {
                              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double value(double x, double[] p) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java:87: warning: [Overrides] Varargs doesn't agree for overridden method
                public double value(double x, double[] p) {
                              ^
    (see http://errorprone.info/bugpattern/Overrides)
  Did you mean 'public double value(double x, double... p) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java:97: warning: [MissingOverride] gradient implements method in ParametricUnivariateRealFunction; expected @Override
                public double[] gradient(double x, double[] p) {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] gradient(double x, double[] p) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java:97: warning: [Overrides] Varargs doesn't agree for overridden method
                public double[] gradient(double x, double[] p) {
                                ^
    (see http://errorprone.info/bugpattern/Overrides)
  Did you mean 'public double[] gradient(double x, double... p) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-58/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java:303: warning: [MissingOverride] compare implements method in Comparator; expected @Override
                public int compare(WeightedObservedPoint p1, WeightedObservedPoint p2) {
                           ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compare(WeightedObservedPoint p1, WeightedObservedPoint p2) {'?
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-59

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:27: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
    public static final double PI = 105414357.0 / 33554432.0 + 1.984187159361080883e-9;
                                                               ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'public static final double PI = 105414357.0 / 33554432.0 + 1.984187159361081E-9;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:30: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
    public static final double E = 2850325.0 / 1048576.0 + 8.254840070411028747e-8;
                                                           ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'public static final double E = 2850325.0 / 1048576.0 + 8.254840070411029E-8;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:59: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
    private static final double LN_2_A = 0.693147063255310059;
                                         ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'private static final double LN_2_A = 0.6931470632553101;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:62: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
    private static final double LN_2_B = 1.17304635250823482e-7;
                                         ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'private static final double LN_2_B = 1.1730463525082348E-7;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:227: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
      if (x != x) {
            ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:282: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
      if (x != x) {
            ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:393: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
      if (x != x) {
            ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:663: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
                final double result = exp(x+1.494140625, extra, hiPrec) / 4.455505956692756620;
                                                                          ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'final double result = exp(x+1.494140625, extra, hiPrec) / 4.455505956692757;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:665: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
                    hiPrec[0] /= 4.455505956692756620;
                                 ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'hiPrec[0] /= 4.455505956692757;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:666: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
                    hiPrec[1] /= 4.455505956692756620;
                                 ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'hiPrec[1] /= 4.455505956692757;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:762: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
        if (x != x || x == 0.0) { // NaN or zero
              ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:950: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
            final double a = d * 9.31322574615478515625E-10;
                                 ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'final double a = d * 9.313225746154785E-10;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:969: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
            double z = c * 9.31322574615478515625E-10;
                           ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'double z = c * 9.313225746154785E-10;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:1030: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(result[1])`.
        if (result[1] != result[1]) { // can happen if result[1] is NAN
                      ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:1168: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
        if ((bits & 0x8000000000000000L) != 0 || x != x) {
                                                   ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:1455: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
        if (x != x) { // X is NaN
              ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:1490: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(y)`.
            if (y != y) { // y is NaN
                  ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:1512: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(y)`.
            if (y != y) { // y is NaN
                  ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:1571: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
            double tmp1 = y * 9.31322574615478515625E-10;
                              ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'double tmp1 = y * 9.313225746154785E-10;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:1572: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
            double tmp2 = tmp1 * 9.31322574615478515625E-10;
                                 ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'double tmp2 = tmp1 * 9.313225746154785E-10;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:2427: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(xa)`.
        if (xa != xa || xa == Double.POSITIVE_INFINITY) {
               ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:2511: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(xa)`.
        if (xa != xa || xa == Double.POSITIVE_INFINITY) {
               ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:2606: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(xa)`.
        if (xa != xa || xa == Double.POSITIVE_INFINITY) {
               ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:2720: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
            idx = (int) (((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);
                            ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'idx = (int) (((-1.7168146928204135 * xa * xa + 8.0) * xa) + 0.5);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:2723: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
            idx = (int) (-((-1.7168146928204136 * temp * temp + 8.0) * temp) + 13.07);
                             ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'idx = (int) (-((-1.7168146928204135 * temp * temp + 8.0) * temp) + 13.07);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:2850: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
        if (x !=x || y != y) {
              ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:2850: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(y)`.
        if (x !=x || y != y) {
                       ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:2867: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(result)`.
            if (result != result) { // y must be infinite
                       ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:2938: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
            x *= 9.31322574615478515625E-10;
                 ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'x *= 9.313225746154785E-10;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:2939: warning: [FloatingPointLiteralPrecision] Floating point literal loses precision
            y *= 9.31322574615478515625E-10;
                 ^
    (see http://errorprone.info/bugpattern/FloatingPointLiteralPrecision)
  Did you mean 'y *= 9.313225746154785E-10;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:2970: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
      if (x != x) {
            ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:3042: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
      if (x != x) {
            ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:3341: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
        if (x != x) { // NaN
              ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-59/src/main/java/org/apache/commons/math/util/FastMath.java:3368: error: [IdentityBinaryExpression] A binary expression where both operands are the same is usually incorrect; the value of this expression is equivalent to `!Double.isNan(x)`.
        if (x != x) { // NaN
              ^
    (see http://errorprone.info/bugpattern/IdentityBinaryExpression)
19 errors
15 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-60

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-60/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java:94: warning: [MissingOverride] getMean implements method in NormalDistribution; expected @Override
    public double getMean() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getMean() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java:101: warning: [MissingOverride] getStandardDeviation implements method in NormalDistribution; expected @Override
    public double getStandardDeviation() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getStandardDeviation() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java:124: warning: [MissingOverride] cumulativeProbability implements method in Distribution; expected @Override
    public double cumulativeProbability(double x) throws MathException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double cumulativeProbability(double x) throws MathException {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-60/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-61

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-61/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java:129: warning: [MissingOverride] getMean implements method in PoissonDistribution; expected @Override
    public double getMean() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getMean() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java:140: warning: [MissingOverride] probability implements method in IntegerDistribution; expected @Override
    public double probability(int x) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double probability(int x) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java:189: warning: [MissingOverride] normalApproximateProbability implements method in PoissonDistribution; expected @Override
    public double normalApproximateProbability(int x) throws MathException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double normalApproximateProbability(int x) throws MathException {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-62

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-62/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-62/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-62/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java:81: warning: [MissingOverride] setConvergenceChecker implements method in BaseOptimizer; expected @Override
    public void setConvergenceChecker(ConvergenceChecker<UnivariateRealPointValuePair> checker) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setConvergenceChecker(ConvergenceChecker<UnivariateRealPointValuePair> checker) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-62/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java:88: warning: [MissingOverride] getConvergenceChecker implements method in BaseOptimizer; expected @Override
    public ConvergenceChecker<UnivariateRealPointValuePair> getConvergenceChecker() {
                                                            ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public ConvergenceChecker<UnivariateRealPointValuePair> getConvergenceChecker() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-62/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java:93: warning: [MissingOverride] getMaxEvaluations implements method in BaseOptimizer; expected @Override
    public int getMaxEvaluations() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaxEvaluations() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-62/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java:98: warning: [MissingOverride] getEvaluations implements method in BaseOptimizer; expected @Override
    public int getEvaluations() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getEvaluations() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-62/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java:103: warning: [MissingOverride] setMaxEvaluations implements method in BaseOptimizer; expected @Override
    public void setMaxEvaluations(int maxEvaluations) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setMaxEvaluations(int maxEvaluations) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-62/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java:142: warning: [MissingOverride] optimize implements method in BaseUnivariateRealOptimizer; expected @Override
    public UnivariateRealPointValuePair optimize(final FUNC f,
                                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public UnivariateRealPointValuePair optimize(final FUNC f,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-62/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java:150: warning: [MissingOverride] optimize implements method in BaseUnivariateRealOptimizer; expected @Override
    public UnivariateRealPointValuePair optimize(final FUNC f, final GoalType goal,
                                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public UnivariateRealPointValuePair optimize(final FUNC f, final GoalType goal,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-62/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java:192: warning: [MissingOverride] compare implements method in Comparator; expected @Override
                public int compare(final UnivariateRealPointValuePair o1,
                           ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compare(final UnivariateRealPointValuePair o1,'?
8 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-63

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-63/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-63/src/main/java/org/apache/commons/math/util/MathUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-63/src/main/java/org/apache/commons/math/util/MathUtils.java:843: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        return new Double(value).hashCode();
               ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return Double.hashCode(value);'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-64

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-64/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-65

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-65/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java:123: warning: [MissingOverride] setMaxIterations implements method in DifferentiableMultivariateVectorialOptimizer; expected @Override
    public void setMaxIterations(int maxIterations) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setMaxIterations(int maxIterations) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java:128: warning: [MissingOverride] getMaxIterations implements method in DifferentiableMultivariateVectorialOptimizer; expected @Override
    public int getMaxIterations() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaxIterations() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java:133: warning: [MissingOverride] getIterations implements method in DifferentiableMultivariateVectorialOptimizer; expected @Override
    public int getIterations() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getIterations() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java:138: warning: [MissingOverride] setMaxEvaluations implements method in DifferentiableMultivariateVectorialOptimizer; expected @Override
    public void setMaxEvaluations(int maxEvaluations) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setMaxEvaluations(int maxEvaluations) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java:143: warning: [MissingOverride] getMaxEvaluations implements method in DifferentiableMultivariateVectorialOptimizer; expected @Override
    public int getMaxEvaluations() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaxEvaluations() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java:148: warning: [MissingOverride] getEvaluations implements method in DifferentiableMultivariateVectorialOptimizer; expected @Override
    public int getEvaluations() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getEvaluations() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java:153: warning: [MissingOverride] getJacobianEvaluations implements method in DifferentiableMultivariateVectorialOptimizer; expected @Override
    public int getJacobianEvaluations() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getJacobianEvaluations() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java:158: warning: [MissingOverride] setConvergenceChecker implements method in DifferentiableMultivariateVectorialOptimizer; expected @Override
    public void setConvergenceChecker(VectorialConvergenceChecker convergenceChecker) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setConvergenceChecker(VectorialConvergenceChecker convergenceChecker) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java:163: warning: [MissingOverride] getConvergenceChecker implements method in DifferentiableMultivariateVectorialOptimizer; expected @Override
    public VectorialConvergenceChecker getConvergenceChecker() {
                                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public VectorialConvergenceChecker getConvergenceChecker() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-65/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java:327: warning: [MissingOverride] optimize implements method in DifferentiableMultivariateVectorialOptimizer; expected @Override
    public VectorialPointValuePair optimize(final DifferentiableMultivariateVectorialFunction f,
                                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public VectorialPointValuePair optimize(final DifferentiableMultivariateVectorialFunction f,'?
10 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-6

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java:189: warning: [OvershadowingSubclassFields] Overshadowing variables of superclass causes confusion and errors. This variable is overshadowing a variable in superclass:  BaseOptimizer
    private int iterations;
                ^
    (see http://errorprone.info/bugpattern/OvershadowingSubclassFields)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java:849: warning: [MissingOverride] compareTo implements method in Comparable; expected @Override
        public int compareTo(DoubleIndex o) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(DoubleIndex o) {'?
2 warnings

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java


************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java:345: warning: [MissingOverride] precondition implements method in Preconditioner; expected @Override
        public double[] precondition(double[] variables, double[] r) {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] precondition(double[] variables, double[] r) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java:377: warning: [MissingOverride] value implements method in UnivariateFunction; expected @Override
        public double value(double x) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double value(double x) {'?
2 warnings

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java:212: warning: [MissingOverride] trigger implements method in MaxCountExceededCallback; expected @Override
        public void trigger(int max) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void trigger(int max) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java:227: warning: [MissingOverride] trigger implements method in MaxCountExceededCallback; expected @Override
        public void trigger(int max) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void trigger(int max) {'?
2 warnings

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java


************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java:134: warning: [MissingOverride] value implements method in MultivariateFunction; expected @Override
                public double value(double[] point) {
                              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double value(double[] point) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java:142: warning: [MissingOverride] compare implements method in Comparator; expected @Override
            public int compare(final PointValuePair o1,
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compare(final PointValuePair o1,'?
2 warnings

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-6/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java:347: warning: [MissingOverride] value implements method in UnivariateFunction; expected @Override
                    public double value(double alpha) {
                                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double value(double alpha) {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-66

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-66/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java:55: warning: [MissingOverride] doOptimize implements method in AbstractUnivariateRealOptimizer; expected @Override
    protected double doOptimize()
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected double doOptimize()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java:59: warning: [MissingOverride] optimize overrides method in AbstractUnivariateRealOptimizer; expected @Override
    public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws MaxIterationsExceededException, FunctionEvaluationException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws MaxIterationsExceededException, FunctionEvaluationException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java:65: warning: [MissingOverride] optimize overrides method in AbstractUnivariateRealOptimizer; expected @Override
    public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max) throws MaxIterationsExceededException, FunctionEvaluationException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max) throws MaxIterationsExceededException, FunctionEvaluationException {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-66/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-67

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java:91: warning: [MissingOverride] getFunctionValue implements method in UnivariateRealOptimizer; expected @Override
    public double getFunctionValue() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getFunctionValue() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java:96: warning: [MissingOverride] getResult implements method in UnivariateRealOptimizer; expected @Override
    public double getResult() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getResult() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java:101: warning: [MissingOverride] getAbsoluteAccuracy implements method in ConvergingAlgorithm; expected @Override
    public double getAbsoluteAccuracy() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getAbsoluteAccuracy() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java:106: warning: [MissingOverride] getIterationCount implements method in ConvergingAlgorithm; expected @Override
    public int getIterationCount() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getIterationCount() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java:111: warning: [MissingOverride] getMaximalIterationCount implements method in ConvergingAlgorithm; expected @Override
    public int getMaximalIterationCount() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximalIterationCount() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java:116: warning: [MissingOverride] getMaxEvaluations implements method in UnivariateRealOptimizer; expected @Override
    public int getMaxEvaluations() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaxEvaluations() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java:121: warning: [MissingOverride] getEvaluations implements method in UnivariateRealOptimizer; expected @Override
    public int getEvaluations() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getEvaluations() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java:126: warning: [MissingOverride] getRelativeAccuracy implements method in ConvergingAlgorithm; expected @Override
    public double getRelativeAccuracy() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getRelativeAccuracy() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java:131: warning: [MissingOverride] resetAbsoluteAccuracy implements method in ConvergingAlgorithm; expected @Override
    public void resetAbsoluteAccuracy() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void resetAbsoluteAccuracy() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java:136: warning: [MissingOverride] resetMaximalIterationCount implements method in ConvergingAlgorithm; expected @Override
    public void resetMaximalIterationCount() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void resetMaximalIterationCount() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java:141: warning: [MissingOverride] resetRelativeAccuracy implements method in ConvergingAlgorithm; expected @Override
    public void resetRelativeAccuracy() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void resetRelativeAccuracy() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java:146: warning: [MissingOverride] setAbsoluteAccuracy implements method in ConvergingAlgorithm; expected @Override
    public void setAbsoluteAccuracy(double accuracy) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setAbsoluteAccuracy(double accuracy) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java:151: warning: [MissingOverride] setMaximalIterationCount implements method in ConvergingAlgorithm; expected @Override
    public void setMaximalIterationCount(int count) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setMaximalIterationCount(int count) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java:156: warning: [MissingOverride] setMaxEvaluations implements method in UnivariateRealOptimizer; expected @Override
    public void setMaxEvaluations(int maxEvaluations) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setMaxEvaluations(int maxEvaluations) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java:161: warning: [MissingOverride] setRelativeAccuracy implements method in ConvergingAlgorithm; expected @Override
    public void setRelativeAccuracy(double accuracy) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setRelativeAccuracy(double accuracy) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java:226: warning: [MissingOverride] optimize implements method in UnivariateRealOptimizer; expected @Override
    public double optimize(final UnivariateRealFunction f, final GoalType goalType,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double optimize(final UnivariateRealFunction f, final GoalType goalType,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-67/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java:313: warning: [MissingOverride] optimize implements method in UnivariateRealOptimizer; expected @Override
    public double optimize(final UnivariateRealFunction f, final GoalType goalType,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double optimize(final UnivariateRealFunction f, final GoalType goalType,'?
17 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-68

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-68/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-68/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-69

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-69/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-7

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-7/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java:103: warning: [MissingOverride] getName implements method in ODEIntegrator; expected @Override
    public String getName() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getName() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java:108: warning: [MissingOverride] addStepHandler implements method in ODEIntegrator; expected @Override
    public void addStepHandler(final StepHandler handler) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void addStepHandler(final StepHandler handler) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java:113: warning: [MissingOverride] getStepHandlers implements method in ODEIntegrator; expected @Override
    public Collection<StepHandler> getStepHandlers() {
                                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Collection<StepHandler> getStepHandlers() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java:118: warning: [MissingOverride] clearStepHandlers implements method in ODEIntegrator; expected @Override
    public void clearStepHandlers() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void clearStepHandlers() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java:123: warning: [MissingOverride] addEventHandler implements method in ODEIntegrator; expected @Override
    public void addEventHandler(final EventHandler handler,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void addEventHandler(final EventHandler handler,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java:133: warning: [MissingOverride] addEventHandler implements method in ODEIntegrator; expected @Override
    public void addEventHandler(final EventHandler handler,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void addEventHandler(final EventHandler handler,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java:143: warning: [MissingOverride] getEventHandlers implements method in ODEIntegrator; expected @Override
    public Collection<EventHandler> getEventHandlers() {
                                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Collection<EventHandler> getEventHandlers() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java:152: warning: [MissingOverride] clearEventHandlers implements method in ODEIntegrator; expected @Override
    public void clearEventHandlers() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void clearEventHandlers() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java:157: warning: [MissingOverride] getCurrentStepStart implements method in ODEIntegrator; expected @Override
    public double getCurrentStepStart() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getCurrentStepStart() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java:162: warning: [MissingOverride] getCurrentSignedStepsize implements method in ODEIntegrator; expected @Override
    public double getCurrentSignedStepsize() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getCurrentSignedStepsize() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java:167: warning: [MissingOverride] setMaxEvaluations implements method in ODEIntegrator; expected @Override
    public void setMaxEvaluations(int maxEvaluations) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setMaxEvaluations(int maxEvaluations) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java:172: warning: [MissingOverride] getMaxEvaluations implements method in ODEIntegrator; expected @Override
    public int getMaxEvaluations() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaxEvaluations() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java:177: warning: [MissingOverride] getEvaluations implements method in ODEIntegrator; expected @Override
    public int getEvaluations() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getEvaluations() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java:210: warning: [MissingOverride] integrate implements method in FirstOrderIntegrator; expected @Override
    public double integrate(final FirstOrderDifferentialEquations equations,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double integrate(final FirstOrderDifferentialEquations equations,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java:316: warning: [MissingOverride] compare implements method in Comparator; expected @Override
                public int compare(EventState es0, EventState es1) {
                           ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compare(EventState es0, EventState es1) {'?
15 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-70

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-70/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-70/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-70/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java:70: warning: [MissingOverride] solve implements method in UnivariateRealSolver; expected @Override
    public double solve(final UnivariateRealFunction f, double min, double max, double initial)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double solve(final UnivariateRealFunction f, double min, double max, double initial)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-70/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java:76: warning: [MissingOverride] solve implements method in UnivariateRealSolver; expected @Override
    public double solve(final UnivariateRealFunction f, double min, double max)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double solve(final UnivariateRealFunction f, double min, double max)'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-72

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-72/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java:98: warning: [MissingOverride] solve implements method in UnivariateRealSolver; expected @Override
    public double solve(final UnivariateRealFunction f,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double solve(final UnivariateRealFunction f,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java:163: warning: [MissingOverride] solve implements method in UnivariateRealSolver; expected @Override
    public double solve(final UnivariateRealFunction f,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double solve(final UnivariateRealFunction f,'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-71

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-71/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java


************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-71/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java:95: warning: [MissingOverride] integrate implements method in FirstOrderIntegrator; expected @Override
  public double integrate(final FirstOrderDifferentialEquations equations,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double integrate(final FirstOrderDifferentialEquations equations,'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-73

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-73/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java:98: warning: [MissingOverride] solve implements method in UnivariateRealSolver; expected @Override
    public double solve(final UnivariateRealFunction f,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double solve(final UnivariateRealFunction f,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-73/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java:159: warning: [MissingOverride] solve implements method in UnivariateRealSolver; expected @Override
    public double solve(final UnivariateRealFunction f,
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double solve(final UnivariateRealFunction f,'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-74

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-74/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-74/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-75

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-75/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-75/src/main/java/org/apache/commons/math/stat/Frequency.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-75/src/main/java/org/apache/commons/math/stat/Frequency.java:560: warning: [MissingOverride] compare implements method in Comparator; expected @Override
        public int compare(Comparable<T> o1, Comparable<T> o2) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override @SuppressWarnings("unchecked")'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-76

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-76/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java:153: warning: [MissingOverride] getU implements method in SingularValueDecomposition; expected @Override
    public RealMatrix getU()
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getU()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java:201: warning: [MissingOverride] getUT implements method in SingularValueDecomposition; expected @Override
    public RealMatrix getUT()
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getUT()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java:214: warning: [MissingOverride] getS implements method in SingularValueDecomposition; expected @Override
    public RealMatrix getS()
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getS()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java:227: warning: [MissingOverride] getSingularValues implements method in SingularValueDecomposition; expected @Override
    public double[] getSingularValues()
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] getSingularValues()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java:233: warning: [MissingOverride] getV implements method in SingularValueDecomposition; expected @Override
    public RealMatrix getV()
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getV()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java:280: warning: [MissingOverride] getVT implements method in SingularValueDecomposition; expected @Override
    public RealMatrix getVT()
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getVT()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java:293: warning: [MissingOverride] getCovariance implements method in SingularValueDecomposition; expected @Override
    public RealMatrix getCovariance(final double minSingularValue) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getCovariance(final double minSingularValue) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java:323: warning: [MissingOverride] getNorm implements method in SingularValueDecomposition; expected @Override
    public double getNorm()
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getNorm()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java:329: warning: [MissingOverride] getConditionNumber implements method in SingularValueDecomposition; expected @Override
    public double getConditionNumber()
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getConditionNumber()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java:335: warning: [MissingOverride] getRank implements method in SingularValueDecomposition; expected @Override
    public int getRank()
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getRank()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java:350: warning: [MissingOverride] getSolver implements method in SingularValueDecomposition; expected @Override
    public DecompositionSolver getSolver() {
                               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DecompositionSolver getSolver() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java:392: warning: [MissingOverride] solve implements method in DecompositionSolver; expected @Override
        public double[] solve(final double[] b)
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] solve(final double[] b)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java:404: warning: [MissingOverride] solve implements method in DecompositionSolver; expected @Override
        public RealVector solve(final RealVector b)
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector solve(final RealVector b)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java:416: warning: [MissingOverride] solve implements method in DecompositionSolver; expected @Override
        public RealMatrix solve(final RealMatrix b)
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix solve(final RealMatrix b)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java:425: warning: [MissingOverride] isNonSingular implements method in DecompositionSolver; expected @Override
        public boolean isNonSingular() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isNonSingular() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-76/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java:432: warning: [MissingOverride] getInverse implements method in DecompositionSolver; expected @Override
        public RealMatrix getInverse() {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getInverse() {'?
16 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-78

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-78/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-78/src/main/java/org/apache/commons/math/ode/events/EventState.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-78/src/main/java/org/apache/commons/math/ode/events/EventState.java:204: warning: [MissingOverride] value implements method in UnivariateRealFunction; expected @Override
                        public double value(final double t) throws FunctionEvaluationException {
                                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double value(final double t) throws FunctionEvaluationException {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-77

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:263: warning: [MissingOverride] copy overrides method in AbstractRealVector; expected @Override
    public AbstractRealVector copy() {
                              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public AbstractRealVector copy() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:268: warning: [MissingOverride] add overrides method in AbstractRealVector; expected @Override
    public RealVector add(RealVector v)
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector add(RealVector v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:285: warning: [MissingOverride] add overrides method in AbstractRealVector; expected @Override
    public RealVector add(double[] v)
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector add(double[] v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:307: warning: [MissingOverride] subtract overrides method in AbstractRealVector; expected @Override
    public RealVector subtract(RealVector v)
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector subtract(RealVector v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:324: warning: [MissingOverride] subtract overrides method in AbstractRealVector; expected @Override
    public RealVector subtract(double[] v)
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector subtract(double[] v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:346: warning: [MissingOverride] mapAddToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapAddToSelf(double d) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapAddToSelf(double d) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:354: warning: [MissingOverride] mapSubtractToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapSubtractToSelf(double d) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapSubtractToSelf(double d) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:362: warning: [MissingOverride] mapMultiplyToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapMultiplyToSelf(double d) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapMultiplyToSelf(double d) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:370: warning: [MissingOverride] mapDivideToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapDivideToSelf(double d) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapDivideToSelf(double d) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:378: warning: [MissingOverride] mapPowToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapPowToSelf(double d) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapPowToSelf(double d) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:386: warning: [MissingOverride] mapExpToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapExpToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapExpToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:394: warning: [MissingOverride] mapExpm1ToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapExpm1ToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapExpm1ToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:402: warning: [MissingOverride] mapLogToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapLogToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapLogToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:410: warning: [MissingOverride] mapLog10ToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapLog10ToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapLog10ToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:418: warning: [MissingOverride] mapLog1pToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapLog1pToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapLog1pToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:426: warning: [MissingOverride] mapCoshToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapCoshToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapCoshToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:434: warning: [MissingOverride] mapSinhToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapSinhToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapSinhToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:442: warning: [MissingOverride] mapTanhToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapTanhToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapTanhToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:450: warning: [MissingOverride] mapCosToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapCosToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapCosToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:458: warning: [MissingOverride] mapSinToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapSinToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapSinToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:466: warning: [MissingOverride] mapTanToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapTanToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapTanToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:474: warning: [MissingOverride] mapAcosToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapAcosToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapAcosToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:482: warning: [MissingOverride] mapAsinToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapAsinToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapAsinToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:490: warning: [MissingOverride] mapAtanToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapAtanToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapAtanToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:498: warning: [MissingOverride] mapInvToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapInvToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapInvToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:506: warning: [MissingOverride] mapAbsToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapAbsToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapAbsToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:514: warning: [MissingOverride] mapSqrtToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapSqrtToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapSqrtToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:522: warning: [MissingOverride] mapCbrtToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapCbrtToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapCbrtToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:530: warning: [MissingOverride] mapCeilToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapCeilToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapCeilToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:538: warning: [MissingOverride] mapFloorToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapFloorToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapFloorToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:546: warning: [MissingOverride] mapRintToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapRintToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapRintToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:554: warning: [MissingOverride] mapSignumToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapSignumToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapSignumToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:562: warning: [MissingOverride] mapUlpToSelf overrides method in AbstractRealVector; expected @Override
    public RealVector mapUlpToSelf() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector mapUlpToSelf() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:570: warning: [MissingOverride] ebeMultiply implements method in RealVector; expected @Override
    public RealVector ebeMultiply(RealVector v)
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector ebeMultiply(RealVector v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:585: warning: [MissingOverride] ebeMultiply overrides method in AbstractRealVector; expected @Override
    public RealVector ebeMultiply(double[] v)
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector ebeMultiply(double[] v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:607: warning: [MissingOverride] ebeDivide implements method in RealVector; expected @Override
    public RealVector ebeDivide(RealVector v)
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector ebeDivide(RealVector v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:622: warning: [MissingOverride] ebeDivide overrides method in AbstractRealVector; expected @Override
    public RealVector ebeDivide(double[] v)
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector ebeDivide(double[] v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:644: warning: [MissingOverride] getData overrides method in AbstractRealVector; expected @Override
    public double[] getData() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] getData() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:658: warning: [MissingOverride] dotProduct overrides method in AbstractRealVector; expected @Override
    public double dotProduct(RealVector v)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double dotProduct(RealVector v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:675: warning: [MissingOverride] dotProduct overrides method in AbstractRealVector; expected @Override
    public double dotProduct(double[] v)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double dotProduct(double[] v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:727: warning: [MissingOverride] getDistance overrides method in AbstractRealVector; expected @Override
    public double getDistance(RealVector v)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getDistance(RealVector v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:743: warning: [MissingOverride] getDistance overrides method in AbstractRealVector; expected @Override
    public double getDistance(double[] v)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getDistance(double[] v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:773: warning: [MissingOverride] getL1Distance overrides method in AbstractRealVector; expected @Override
    public double getL1Distance(RealVector v)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getL1Distance(RealVector v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:789: warning: [MissingOverride] getL1Distance overrides method in AbstractRealVector; expected @Override
    public double getL1Distance(double[] v)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getL1Distance(double[] v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:819: warning: [MissingOverride] getLInfDistance overrides method in AbstractRealVector; expected @Override
    public double getLInfDistance(RealVector v)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getLInfDistance(RealVector v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:835: warning: [MissingOverride] getLInfDistance overrides method in AbstractRealVector; expected @Override
    public double getLInfDistance(double[] v)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getLInfDistance(double[] v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:865: warning: [MissingOverride] unitVector overrides method in AbstractRealVector; expected @Override
    public RealVector unitVector() throws ArithmeticException {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector unitVector() throws ArithmeticException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:874: warning: [MissingOverride] unitize overrides method in AbstractRealVector; expected @Override
    public void unitize() throws ArithmeticException {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void unitize() throws ArithmeticException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:883: warning: [MissingOverride] projection implements method in RealVector; expected @Override
    public RealVector projection(RealVector v) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector projection(RealVector v) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:888: warning: [MissingOverride] projection overrides method in AbstractRealVector; expected @Override
    public RealVector projection(double[] v) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector projection(double[] v) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:902: warning: [MissingOverride] outerProduct overrides method in AbstractRealVector; expected @Override
    public RealMatrix outerProduct(RealVector v)
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix outerProduct(RealVector v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:931: warning: [MissingOverride] outerProduct overrides method in AbstractRealVector; expected @Override
    public RealMatrix outerProduct(double[] v)
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix outerProduct(double[] v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:945: warning: [MissingOverride] getEntry implements method in RealVector; expected @Override
    public double getEntry(int index) throws MatrixIndexException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getEntry(int index) throws MatrixIndexException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:950: warning: [MissingOverride] getDimension implements method in RealVector; expected @Override
    public int getDimension() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getDimension() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:955: warning: [MissingOverride] append implements method in RealVector; expected @Override
    public RealVector append(RealVector v) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector append(RealVector v) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:973: warning: [MissingOverride] append implements method in RealVector; expected @Override
    public RealVector append(double in) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector append(double in) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:981: warning: [MissingOverride] append implements method in RealVector; expected @Override
    public RealVector append(double[] in) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector append(double[] in) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:986: warning: [MissingOverride] getSubVector implements method in RealVector; expected @Override
    public RealVector getSubVector(int index, int n) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector getSubVector(int index, int n) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:998: warning: [MissingOverride] setEntry implements method in RealVector; expected @Override
    public void setEntry(int index, double value) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setEntry(int index, double value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:1007: warning: [MissingOverride] setSubVector overrides method in AbstractRealVector; expected @Override
    public void setSubVector(int index, RealVector v) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setSubVector(int index, RealVector v) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:1023: warning: [MissingOverride] setSubVector overrides method in AbstractRealVector; expected @Override
    public void setSubVector(int index, double[] v) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setSubVector(int index, double[] v) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:1046: warning: [MissingOverride] set overrides method in AbstractRealVector; expected @Override
    public void set(double value) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void set(double value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:1051: warning: [MissingOverride] toArray overrides method in AbstractRealVector; expected @Override
    public double[] toArray(){
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] toArray(){'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:1067: warning: [MissingOverride] checkVectorDimensions overrides method in AbstractRealVector; expected @Override
    protected void checkVectorDimensions(RealVector v)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected void checkVectorDimensions(RealVector v)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:1079: warning: [MissingOverride] checkVectorDimensions overrides method in AbstractRealVector; expected @Override
    protected void checkVectorDimensions(int n)
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected void checkVectorDimensions(int n)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:1092: warning: [MissingOverride] isNaN implements method in RealVector; expected @Override
    public boolean isNaN() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isNaN() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java:1107: warning: [MissingOverride] isInfinite implements method in RealVector; expected @Override
    public boolean isInfinite() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isInfinite() {'?
67 warnings

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:209: warning: [MissingOverride] add overrides method in AbstractRealVector; expected @Override
    public RealVector add(RealVector v) throws IllegalArgumentException {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector add(RealVector v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:258: warning: [MissingOverride] append implements method in RealVector; expected @Override
    public OpenMapRealVector append(RealVector v) {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector append(RealVector v) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:266: warning: [MissingOverride] append implements method in RealVector; expected @Override
    public OpenMapRealVector append(double d) {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector append(double d) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:273: warning: [MissingOverride] append implements method in RealVector; expected @Override
    public OpenMapRealVector append(double[] a) {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector append(double[] a) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:282: warning: [MissingOverride] copy overrides method in AbstractRealVector; expected @Override
    public OpenMapRealVector copy() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector copy() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:307: warning: [MissingOverride] dotProduct overrides method in AbstractRealVector; expected @Override
    public double dotProduct(RealVector v) throws IllegalArgumentException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double dotProduct(RealVector v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:316: warning: [MissingOverride] ebeDivide implements method in RealVector; expected @Override
    public OpenMapRealVector ebeDivide(RealVector v) throws IllegalArgumentException {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector ebeDivide(RealVector v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:328: warning: [MissingOverride] ebeDivide overrides method in AbstractRealVector; expected @Override
    public OpenMapRealVector ebeDivide(double[] v) throws IllegalArgumentException {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector ebeDivide(double[] v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:340: warning: [MissingOverride] ebeMultiply implements method in RealVector; expected @Override
    public OpenMapRealVector ebeMultiply(RealVector v) throws IllegalArgumentException {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector ebeMultiply(RealVector v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:352: warning: [MissingOverride] ebeMultiply overrides method in AbstractRealVector; expected @Override
    public OpenMapRealVector ebeMultiply(double[] v) throws IllegalArgumentException {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector ebeMultiply(double[] v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:364: warning: [MissingOverride] getSubVector implements method in RealVector; expected @Override
    public OpenMapRealVector getSubVector(int index, int n) throws MatrixIndexException {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector getSubVector(int index, int n) throws MatrixIndexException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:381: warning: [MissingOverride] getData overrides method in AbstractRealVector; expected @Override
    public double[] getData() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] getData() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:392: warning: [MissingOverride] getDimension implements method in RealVector; expected @Override
    public int getDimension() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getDimension() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:425: warning: [MissingOverride] getDistance overrides method in AbstractRealVector; expected @Override
    public double getDistance(RealVector v) throws IllegalArgumentException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getDistance(RealVector v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:434: warning: [MissingOverride] getDistance overrides method in AbstractRealVector; expected @Override
    public double getDistance(double[] v) throws IllegalArgumentException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getDistance(double[] v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:445: warning: [MissingOverride] getEntry implements method in RealVector; expected @Override
    public double getEntry(int index) throws MatrixIndexException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getEntry(int index) throws MatrixIndexException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:479: warning: [MissingOverride] getL1Distance overrides method in AbstractRealVector; expected @Override
    public double getL1Distance(RealVector v) throws IllegalArgumentException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getL1Distance(RealVector v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:488: warning: [MissingOverride] getL1Distance overrides method in AbstractRealVector; expected @Override
    public double getL1Distance(double[] v) throws IllegalArgumentException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getL1Distance(double[] v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:498: warning: [MissingOverride] getLInfNorm overrides method in AbstractRealVector; expected @Override
    public double getLInfNorm() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getLInfNorm() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:536: warning: [MissingOverride] getLInfDistance overrides method in AbstractRealVector; expected @Override
    public double getLInfDistance(RealVector v) throws IllegalArgumentException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getLInfDistance(RealVector v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:545: warning: [MissingOverride] getLInfDistance overrides method in AbstractRealVector; expected @Override
    public double getLInfDistance(double[] v) throws IllegalArgumentException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getLInfDistance(double[] v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:558: warning: [MissingOverride] isInfinite implements method in RealVector; expected @Override
    public boolean isInfinite() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isInfinite() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:575: warning: [MissingOverride] isNaN implements method in RealVector; expected @Override
    public boolean isNaN() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isNaN() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:587: warning: [MissingOverride] mapAdd overrides method in AbstractRealVector; expected @Override
    public OpenMapRealVector mapAdd(double d) {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector mapAdd(double d) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:592: warning: [MissingOverride] mapAddToSelf overrides method in AbstractRealVector; expected @Override
    public OpenMapRealVector mapAddToSelf(double d) {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector mapAddToSelf(double d) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:600: warning: [MissingOverride] outerProduct overrides method in AbstractRealVector; expected @Override
    public RealMatrix outerProduct(double[] v) throws IllegalArgumentException {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix outerProduct(double[] v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:616: warning: [MissingOverride] projection implements method in RealVector; expected @Override
    public RealVector projection(RealVector v) throws IllegalArgumentException {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector projection(RealVector v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:622: warning: [MissingOverride] projection overrides method in AbstractRealVector; expected @Override
    public OpenMapRealVector projection(double[] v) throws IllegalArgumentException {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector projection(double[] v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:628: warning: [MissingOverride] setEntry implements method in RealVector; expected @Override
    public void setEntry(int index, double value) throws MatrixIndexException {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setEntry(int index, double value) throws MatrixIndexException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:638: warning: [MissingOverride] setSubVector overrides method in AbstractRealVector; expected @Override
    public void setSubVector(int index, RealVector v) throws MatrixIndexException {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setSubVector(int index, RealVector v) throws MatrixIndexException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:645: warning: [MissingOverride] setSubVector overrides method in AbstractRealVector; expected @Override
    public void setSubVector(int index, double[] v) throws MatrixIndexException {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setSubVector(int index, double[] v) throws MatrixIndexException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:654: warning: [MissingOverride] set overrides method in AbstractRealVector; expected @Override
    public void set(double value) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void set(double value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:683: warning: [MissingOverride] subtract overrides method in AbstractRealVector; expected @Override
    public OpenMapRealVector subtract(RealVector v) throws IllegalArgumentException {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector subtract(RealVector v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:692: warning: [MissingOverride] subtract overrides method in AbstractRealVector; expected @Override
    public OpenMapRealVector subtract(double[] v) throws IllegalArgumentException {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector subtract(double[] v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:707: warning: [MissingOverride] unitVector overrides method in AbstractRealVector; expected @Override
    public OpenMapRealVector unitVector() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OpenMapRealVector unitVector() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:714: warning: [MissingOverride] unitize overrides method in AbstractRealVector; expected @Override
    public void unitize() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void unitize() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:729: warning: [MissingOverride] toArray overrides method in AbstractRealVector; expected @Override
    public double[] toArray() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] toArray() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:808: warning: [MissingOverride] sparseIterator overrides method in AbstractRealVector; expected @Override
    public java.util.Iterator<Entry> sparseIterator() {
                                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public java.util.Iterator<Entry> sparseIterator() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:869: warning: [MissingOverride] hasNext implements method in Iterator; expected @Override
        public boolean hasNext() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean hasNext() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:874: warning: [MissingOverride] next implements method in Iterator; expected @Override
        public Entry next() {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Entry next() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java:880: warning: [MissingOverride] remove implements method in Iterator; expected @Override
        public void remove() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void remove() {'?
41 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-79

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-79/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-79/src/main/java/org/apache/commons/math/util/MathUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-79/src/main/java/org/apache/commons/math/util/MathUtils.java:681: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        return new Double(value).hashCode();
               ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return Double.hashCode(value);'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-8

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-8/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java

Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-80

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-80/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:254: warning: [MissingOverride] getV implements method in EigenDecomposition; expected @Override
    public RealMatrix getV()
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getV()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:277: warning: [MissingOverride] getD implements method in EigenDecomposition; expected @Override
    public RealMatrix getD()
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getD()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:287: warning: [MissingOverride] getVT implements method in EigenDecomposition; expected @Override
    public RealMatrix getVT()
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getVT()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:310: warning: [MissingOverride] getRealEigenvalues implements method in EigenDecomposition; expected @Override
    public double[] getRealEigenvalues()
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] getRealEigenvalues()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:316: warning: [MissingOverride] getRealEigenvalue implements method in EigenDecomposition; expected @Override
    public double getRealEigenvalue(final int i)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getRealEigenvalue(final int i)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:322: warning: [MissingOverride] getImagEigenvalues implements method in EigenDecomposition; expected @Override
    public double[] getImagEigenvalues()
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] getImagEigenvalues()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:328: warning: [MissingOverride] getImagEigenvalue implements method in EigenDecomposition; expected @Override
    public double getImagEigenvalue(final int i)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getImagEigenvalue(final int i)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:334: warning: [MissingOverride] getEigenvector implements method in EigenDecomposition; expected @Override
    public RealVector getEigenvector(final int i)
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector getEigenvector(final int i)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:346: warning: [MissingOverride] getDeterminant implements method in EigenDecomposition; expected @Override
    public double getDeterminant() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getDeterminant() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:355: warning: [MissingOverride] getSolver implements method in EigenDecomposition; expected @Override
    public DecompositionSolver getSolver() {
                               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DecompositionSolver getSolver() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:395: warning: [MissingOverride] solve implements method in DecompositionSolver; expected @Override
        public double[] solve(final double[] b)
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] solve(final double[] b)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:431: warning: [MissingOverride] solve implements method in DecompositionSolver; expected @Override
        public RealVector solve(final RealVector b)
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector solve(final RealVector b)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:467: warning: [MissingOverride] solve implements method in DecompositionSolver; expected @Override
        public RealMatrix solve(final RealMatrix b)
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix solve(final RealMatrix b)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:506: warning: [MissingOverride] isNonSingular implements method in DecompositionSolver; expected @Override
        public boolean isNonSingular() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isNonSingular() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:519: warning: [MissingOverride] getInverse implements method in DecompositionSolver; expected @Override
        public RealMatrix getInverse()
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getInverse()'?
15 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-81

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-81/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:254: warning: [MissingOverride] getV implements method in EigenDecomposition; expected @Override
    public RealMatrix getV()
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getV()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:277: warning: [MissingOverride] getD implements method in EigenDecomposition; expected @Override
    public RealMatrix getD()
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getD()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:287: warning: [MissingOverride] getVT implements method in EigenDecomposition; expected @Override
    public RealMatrix getVT()
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getVT()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:310: warning: [MissingOverride] getRealEigenvalues implements method in EigenDecomposition; expected @Override
    public double[] getRealEigenvalues()
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] getRealEigenvalues()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:316: warning: [MissingOverride] getRealEigenvalue implements method in EigenDecomposition; expected @Override
    public double getRealEigenvalue(final int i)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getRealEigenvalue(final int i)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:322: warning: [MissingOverride] getImagEigenvalues implements method in EigenDecomposition; expected @Override
    public double[] getImagEigenvalues()
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] getImagEigenvalues()'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:328: warning: [MissingOverride] getImagEigenvalue implements method in EigenDecomposition; expected @Override
    public double getImagEigenvalue(final int i)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getImagEigenvalue(final int i)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:334: warning: [MissingOverride] getEigenvector implements method in EigenDecomposition; expected @Override
    public RealVector getEigenvector(final int i)
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector getEigenvector(final int i)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:346: warning: [MissingOverride] getDeterminant implements method in EigenDecomposition; expected @Override
    public double getDeterminant() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getDeterminant() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:355: warning: [MissingOverride] getSolver implements method in EigenDecomposition; expected @Override
    public DecompositionSolver getSolver() {
                               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DecompositionSolver getSolver() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:395: warning: [MissingOverride] solve implements method in DecompositionSolver; expected @Override
        public double[] solve(final double[] b)
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] solve(final double[] b)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:431: warning: [MissingOverride] solve implements method in DecompositionSolver; expected @Override
        public RealVector solve(final RealVector b)
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector solve(final RealVector b)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:467: warning: [MissingOverride] solve implements method in DecompositionSolver; expected @Override
        public RealMatrix solve(final RealMatrix b)
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix solve(final RealMatrix b)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:506: warning: [MissingOverride] isNonSingular implements method in DecompositionSolver; expected @Override
        public boolean isNonSingular() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isNonSingular() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-81/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:519: warning: [MissingOverride] getInverse implements method in DecompositionSolver; expected @Override
        public RealMatrix getInverse()
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getInverse()'?
15 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-82

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-82/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-83

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-83/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-84

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-84/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-85

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-85/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-86

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-86/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java:154: warning: [MissingOverride] getL implements method in CholeskyDecomposition; expected @Override
    public RealMatrix getL() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getL() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java:162: warning: [MissingOverride] getLT implements method in CholeskyDecomposition; expected @Override
    public RealMatrix getLT() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getLT() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java:174: warning: [MissingOverride] getDeterminant implements method in CholeskyDecomposition; expected @Override
    public double getDeterminant() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getDeterminant() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java:184: warning: [MissingOverride] getSolver implements method in CholeskyDecomposition; expected @Override
    public DecompositionSolver getSolver() {
                               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DecompositionSolver getSolver() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java:203: warning: [MissingOverride] isNonSingular implements method in DecompositionSolver; expected @Override
        public boolean isNonSingular() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isNonSingular() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java:209: warning: [MissingOverride] solve implements method in DecompositionSolver; expected @Override
        public double[] solve(double[] b)
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] solve(double[] b)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java:245: warning: [MissingOverride] solve implements method in DecompositionSolver; expected @Override
        public RealVector solve(RealVector b)
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealVector solve(RealVector b)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java:297: warning: [MissingOverride] solve implements method in DecompositionSolver; expected @Override
        public RealMatrix solve(RealMatrix b)
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix solve(RealMatrix b)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-86/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java:348: warning: [MissingOverride] getInverse implements method in DecompositionSolver; expected @Override
        public RealMatrix getInverse() throws InvalidMatrixException {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getInverse() throws InvalidMatrixException {'?
9 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-87

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-87/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-87/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-88

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-88/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-89

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-89/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-89/src/java/org/apache/commons/math/stat/Frequency.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-89/src/java/org/apache/commons/math/stat/Frequency.java:486: warning: [MissingOverride] compare implements method in Comparator; expected @Override
        public int compare(Object o1, Object o2) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compare(Object o1, Object o2) {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-89/src/java/org/apache/commons/math/stat/Frequency.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-9

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-9/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java:127: warning: [MissingOverride] toSubSpace implements method in Embedding; expected @Override
    public Vector1D toSubSpace(final Vector<Euclidean3D> point) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Vector1D toSubSpace(final Vector<Euclidean3D> point) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java:134: warning: [MissingOverride] toSpace implements method in Embedding; expected @Override
    public Vector3D toSpace(final Vector<Euclidean1D> point) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Vector3D toSpace(final Vector<Euclidean1D> point) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-90

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-90/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-90/src/java/org/apache/commons/math/stat/Frequency.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-90/src/java/org/apache/commons/math/stat/Frequency.java:483: warning: [MissingOverride] compare implements method in Comparator; expected @Override
        public int compare(Object o1, Object o2) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compare(Object o1, Object o2) {'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-90/src/java/org/apache/commons/math/stat/Frequency.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-91

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-91/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-91/src/java/org/apache/commons/math/fraction/Fraction.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-91/src/java/org/apache/commons/math/fraction/Fraction.java:258: warning: [MissingOverride] compareTo implements method in Comparable; expected @Override
    public int compareTo(Fraction object) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(Fraction object) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-91/src/java/org/apache/commons/math/fraction/Fraction.java:269: warning: [MissingOverride] doubleValue implements method in Number; expected @Override
    public double doubleValue() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double doubleValue() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-91/src/java/org/apache/commons/math/fraction/Fraction.java:282: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object other) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object other) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-91/src/java/org/apache/commons/math/fraction/Fraction.java:310: warning: [MissingOverride] floatValue implements method in Number; expected @Override
    public float floatValue() {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public float floatValue() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-91/src/java/org/apache/commons/math/fraction/Fraction.java:334: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-91/src/java/org/apache/commons/math/fraction/Fraction.java:343: warning: [MissingOverride] intValue implements method in Number; expected @Override
    public int intValue() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int intValue() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-91/src/java/org/apache/commons/math/fraction/Fraction.java:352: warning: [MissingOverride] longValue implements method in Number; expected @Override
    public long longValue() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long longValue() {'?
7 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-92

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-92/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-92/src/java/org/apache/commons/math/util/MathUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-92/src/java/org/apache/commons/math/util/MathUtils.java:517: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        return new Double(value).hashCode();
               ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return Double.hashCode(value);'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-93

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-93/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-93/src/java/org/apache/commons/math/util/MathUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-93/src/java/org/apache/commons/math/util/MathUtils.java:475: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        return new Double(value).hashCode();
               ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return Double.hashCode(value);'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-94

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-94/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-94/src/java/org/apache/commons/math/util/MathUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-94/src/java/org/apache/commons/math/util/MathUtils.java:469: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        return new Double(value).hashCode();
               ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return Double.hashCode(value);'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-95

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-95/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java:70: warning: [MissingOverride] cumulativeProbability implements method in Distribution; expected @Override
    public double cumulativeProbability(double x) throws MathException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double cumulativeProbability(double x) throws MathException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java:98: warning: [MissingOverride] inverseCumulativeProbability overrides method in AbstractContinuousDistribution; expected @Override
    public double inverseCumulativeProbability(final double p) 
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double inverseCumulativeProbability(final double p)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java:118: warning: [MissingOverride] getDomainLowerBound implements method in AbstractContinuousDistribution; expected @Override
    protected double getDomainLowerBound(double p) {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected double getDomainLowerBound(double p) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java:131: warning: [MissingOverride] getDomainUpperBound implements method in AbstractContinuousDistribution; expected @Override
    protected double getDomainUpperBound(double p) {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected double getDomainUpperBound(double p) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java:143: warning: [MissingOverride] getInitialDomain implements method in AbstractContinuousDistribution; expected @Override
    protected double getInitialDomain(double p) {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected double getInitialDomain(double p) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java:157: warning: [MissingOverride] setNumeratorDegreesOfFreedom implements method in FDistribution; expected @Override
    public void setNumeratorDegreesOfFreedom(double degreesOfFreedom) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setNumeratorDegreesOfFreedom(double degreesOfFreedom) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java:169: warning: [MissingOverride] getNumeratorDegreesOfFreedom implements method in FDistribution; expected @Override
    public double getNumeratorDegreesOfFreedom() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getNumeratorDegreesOfFreedom() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java:179: warning: [MissingOverride] setDenominatorDegreesOfFreedom implements method in FDistribution; expected @Override
    public void setDenominatorDegreesOfFreedom(double degreesOfFreedom) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setDenominatorDegreesOfFreedom(double degreesOfFreedom) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java:191: warning: [MissingOverride] getDenominatorDegreesOfFreedom implements method in FDistribution; expected @Override
    public double getDenominatorDegreesOfFreedom() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getDenominatorDegreesOfFreedom() {'?
9 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-96

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-96/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-96/src/java/org/apache/commons/math/complex/Complex.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-96/src/java/org/apache/commons/math/complex/Complex.java:245: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object other) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object other) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-96/src/java/org/apache/commons/math/complex/Complex.java:276: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-97

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-97/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-97/src/java/org/apache/commons/math/analysis/BrentSolver.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-97/src/java/org/apache/commons/math/analysis/BrentSolver.java:64: warning: [MissingOverride] solve implements method in UnivariateRealSolver; expected @Override
    public double solve(double min, double max, double initial)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double solve(double min, double max, double initial)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-97/src/java/org/apache/commons/math/analysis/BrentSolver.java:125: warning: [MissingOverride] solve implements method in UnivariateRealSolver; expected @Override
    public double solve(double min, double max) throws MaxIterationsExceededException, 
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double solve(double min, double max) throws MaxIterationsExceededException,'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-99

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-99/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-99/src/java/org/apache/commons/math/util/MathUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-99/src/java/org/apache/commons/math/util/MathUtils.java:601: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
        return new Double(value).hashCode();
               ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'return Double.hashCode(value);'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-1

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-1/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-1/compileLib/byte-buddy-0.6.8.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-1/src/org/mockito/internal/invocation/InvocationMatcher.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-1/src/org/mockito/internal/invocation/InvocationMatcher.java:55: warning: [MissingOverride] toString implements method in DescribedInvocation; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-1/src/org/mockito/internal/invocation/InvocationMatcher.java:116: warning: [MissingOverride] getLocation implements method in DescribedInvocation; expected @Override
    public Location getLocation() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Location getLocation() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-1/src/org/mockito/internal/invocation/InvocationMatcher.java:120: warning: [MissingOverride] captureArgumentsFrom implements method in CapturesArgumensFromInvocation; expected @Override
    public void captureArgumentsFrom(Invocation invocation) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void captureArgumentsFrom(Invocation invocation) {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Math-98

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:176: warning: [MissingOverride] copy implements method in RealMatrix; expected @Override
    public RealMatrix copy() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix copy() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:187: warning: [MissingOverride] add implements method in RealMatrix; expected @Override
    public RealMatrix add(RealMatrix m) throws IllegalArgumentException {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix add(RealMatrix m) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:240: warning: [MissingOverride] subtract implements method in RealMatrix; expected @Override
    public RealMatrix subtract(RealMatrix m) throws IllegalArgumentException {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix subtract(RealMatrix m) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:292: warning: [MissingOverride] scalarAdd implements method in RealMatrix; expected @Override
    public RealMatrix scalarAdd(double d) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix scalarAdd(double d) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:311: warning: [MissingOverride] scalarMultiply implements method in RealMatrix; expected @Override
    public RealMatrix scalarMultiply(double d) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix scalarMultiply(double d) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:332: warning: [MissingOverride] multiply implements method in RealMatrix; expected @Override
    public RealMatrix multiply(RealMatrix m) throws IllegalArgumentException {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix multiply(RealMatrix m) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:394: warning: [MissingOverride] preMultiply implements method in RealMatrix; expected @Override
    public RealMatrix preMultiply(RealMatrix m) throws IllegalArgumentException {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix preMultiply(RealMatrix m) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:405: warning: [MissingOverride] getData implements method in RealMatrix; expected @Override
    public double[][] getData() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[][] getData() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:424: warning: [MissingOverride] getNorm implements method in RealMatrix; expected @Override
    public double getNorm() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getNorm() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:448: warning: [MissingOverride] getSubMatrix implements method in RealMatrix; expected @Override
    public RealMatrix getSubMatrix(int startRow, int endRow,
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getSubMatrix(int startRow, int endRow,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:478: warning: [MissingOverride] getSubMatrix implements method in RealMatrix; expected @Override
    public RealMatrix getSubMatrix(int[] selectedRows, int[] selectedColumns)
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getSubMatrix(int[] selectedRows, int[] selectedColumns)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:573: warning: [MissingOverride] getRowMatrix implements method in RealMatrix; expected @Override
    public RealMatrix getRowMatrix(int row) throws MatrixIndexException {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getRowMatrix(int row) throws MatrixIndexException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:591: warning: [MissingOverride] getColumnMatrix implements method in RealMatrix; expected @Override
    public RealMatrix getColumnMatrix(int column) throws MatrixIndexException {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix getColumnMatrix(int column) throws MatrixIndexException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:613: warning: [MissingOverride] getRow implements method in RealMatrix; expected @Override
    public double[] getRow(int row) throws MatrixIndexException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] getRow(int row) throws MatrixIndexException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:633: warning: [MissingOverride] getColumn implements method in RealMatrix; expected @Override
    public double[] getColumn(int col) throws MatrixIndexException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] getColumn(int col) throws MatrixIndexException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:660: warning: [MissingOverride] getEntry implements method in RealMatrix; expected @Override
    public double getEntry(int row, int column)
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getEntry(int row, int column)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:674: warning: [MissingOverride] transpose implements method in RealMatrix; expected @Override
    public RealMatrix transpose() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix transpose() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:693: warning: [MissingOverride] inverse implements method in RealMatrix; expected @Override
    public RealMatrix inverse() throws InvalidMatrixException {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix inverse() throws InvalidMatrixException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:701: warning: [MissingOverride] getDeterminant implements method in RealMatrix; expected @Override
    public double getDeterminant() throws InvalidMatrixException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getDeterminant() throws InvalidMatrixException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:719: warning: [MissingOverride] isSquare implements method in RealMatrix; expected @Override
    public boolean isSquare() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isSquare() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:726: warning: [MissingOverride] isSingular implements method in RealMatrix; expected @Override
    public boolean isSingular() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isSingular() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:742: warning: [MissingOverride] getRowDimension implements method in RealMatrix; expected @Override
    public int getRowDimension() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getRowDimension() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:749: warning: [MissingOverride] getColumnDimension implements method in RealMatrix; expected @Override
    public int getColumnDimension() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getColumnDimension() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:757: warning: [MissingOverride] getTrace implements method in RealMatrix; expected @Override
    public double getTrace() throws IllegalArgumentException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getTrace() throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:773: warning: [MissingOverride] operate implements method in RealMatrix; expected @Override
    public double[] operate(double[] v) throws IllegalArgumentException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] operate(double[] v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:796: warning: [MissingOverride] preMultiply implements method in RealMatrix; expected @Override
    public double[] preMultiply(double[] v) throws IllegalArgumentException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] preMultiply(double[] v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:824: warning: [MissingOverride] solve implements method in RealMatrix; expected @Override
    public double[] solve(double[] b) throws IllegalArgumentException, InvalidMatrixException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] solve(double[] b) throws IllegalArgumentException, InvalidMatrixException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:849: warning: [MissingOverride] solve implements method in RealMatrix; expected @Override
    public RealMatrix solve(RealMatrix b) throws IllegalArgumentException, InvalidMatrixException  {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public RealMatrix solve(RealMatrix b) throws IllegalArgumentException, InvalidMatrixException  {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:1003: warning: [MissingOverride] toString overrides method in Object; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:1034: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object object) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object object) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java:1064: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
31 warnings

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/target/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:247: warning: [MissingOverride] copy implements method in BigMatrix; expected @Override
    public BigMatrix copy() {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigMatrix copy() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:258: warning: [MissingOverride] add implements method in BigMatrix; expected @Override
    public BigMatrix add(BigMatrix m) throws IllegalArgumentException {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigMatrix add(BigMatrix m) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:311: warning: [MissingOverride] subtract implements method in BigMatrix; expected @Override
    public BigMatrix subtract(BigMatrix m) throws IllegalArgumentException {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigMatrix subtract(BigMatrix m) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:363: warning: [MissingOverride] scalarAdd implements method in BigMatrix; expected @Override
    public BigMatrix scalarAdd(BigDecimal d) {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigMatrix scalarAdd(BigDecimal d) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:382: warning: [MissingOverride] scalarMultiply implements method in BigMatrix; expected @Override
    public BigMatrix scalarMultiply(BigDecimal d) {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigMatrix scalarMultiply(BigDecimal d) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:403: warning: [MissingOverride] multiply implements method in BigMatrix; expected @Override
    public BigMatrix multiply(BigMatrix m) throws IllegalArgumentException {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigMatrix multiply(BigMatrix m) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:465: warning: [MissingOverride] preMultiply implements method in BigMatrix; expected @Override
    public BigMatrix preMultiply(BigMatrix m) throws IllegalArgumentException {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigMatrix preMultiply(BigMatrix m) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:476: warning: [MissingOverride] getData implements method in BigMatrix; expected @Override
    public BigDecimal[][] getData() {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigDecimal[][] getData() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:488: warning: [MissingOverride] getDataAsDoubleArray implements method in BigMatrix; expected @Override
    public double[][] getDataAsDoubleArray() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[][] getDataAsDoubleArray() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:517: warning: [MissingOverride] getRoundingMode implements method in BigMatrix; expected @Override
    public int getRoundingMode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getRoundingMode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:555: warning: [MissingOverride] getNorm implements method in BigMatrix; expected @Override
    public BigDecimal getNorm() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigDecimal getNorm() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:579: warning: [MissingOverride] getSubMatrix implements method in BigMatrix; expected @Override
    public BigMatrix getSubMatrix(int startRow, int endRow,
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigMatrix getSubMatrix(int startRow, int endRow,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:609: warning: [MissingOverride] getSubMatrix implements method in BigMatrix; expected @Override
    public BigMatrix getSubMatrix(int[] selectedRows, int[] selectedColumns)
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigMatrix getSubMatrix(int[] selectedRows, int[] selectedColumns)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:705: warning: [MissingOverride] getRowMatrix implements method in BigMatrix; expected @Override
    public BigMatrix getRowMatrix(int row) throws MatrixIndexException {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigMatrix getRowMatrix(int row) throws MatrixIndexException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:723: warning: [MissingOverride] getColumnMatrix implements method in BigMatrix; expected @Override
    public BigMatrix getColumnMatrix(int column) throws MatrixIndexException {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigMatrix getColumnMatrix(int column) throws MatrixIndexException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:745: warning: [MissingOverride] getRow implements method in BigMatrix; expected @Override
    public BigDecimal[] getRow(int row) throws MatrixIndexException {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigDecimal[] getRow(int row) throws MatrixIndexException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:766: warning: [MissingOverride] getRowAsDoubleArray implements method in BigMatrix; expected @Override
    public double[] getRowAsDoubleArray(int row) throws MatrixIndexException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] getRowAsDoubleArray(int row) throws MatrixIndexException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:788: warning: [MissingOverride] getColumn implements method in BigMatrix; expected @Override
    public BigDecimal[] getColumn(int col) throws MatrixIndexException {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigDecimal[] getColumn(int col) throws MatrixIndexException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:811: warning: [MissingOverride] getColumnAsDoubleArray implements method in BigMatrix; expected @Override
    public double[] getColumnAsDoubleArray(int col) throws MatrixIndexException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double[] getColumnAsDoubleArray(int col) throws MatrixIndexException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:838: warning: [MissingOverride] getEntry implements method in BigMatrix; expected @Override
    public BigDecimal getEntry(int row, int column)
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigDecimal getEntry(int row, int column)'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:863: warning: [MissingOverride] getEntryAsDouble implements method in BigMatrix; expected @Override
    public double getEntryAsDouble(int row, int column) throws MatrixIndexException {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public double getEntryAsDouble(int row, int column) throws MatrixIndexException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:872: warning: [MissingOverride] transpose implements method in BigMatrix; expected @Override
    public BigMatrix transpose() {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigMatrix transpose() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:891: warning: [MissingOverride] inverse implements method in BigMatrix; expected @Override
    public BigMatrix inverse() throws InvalidMatrixException {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigMatrix inverse() throws InvalidMatrixException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:901: warning: [MissingOverride] getDeterminant implements method in BigMatrix; expected @Override
    public BigDecimal getDeterminant() throws InvalidMatrixException {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigDecimal getDeterminant() throws InvalidMatrixException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:920: warning: [MissingOverride] isSquare implements method in BigMatrix; expected @Override
    public boolean isSquare() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isSquare() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:928: warning: [MissingOverride] isSingular implements method in BigMatrix; expected @Override
    public boolean isSingular() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isSingular() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:946: warning: [MissingOverride] getRowDimension implements method in BigMatrix; expected @Override
    public int getRowDimension() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getRowDimension() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:955: warning: [MissingOverride] getColumnDimension implements method in BigMatrix; expected @Override
    public int getColumnDimension() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getColumnDimension() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:967: warning: [MissingOverride] getTrace implements method in BigMatrix; expected @Override
    public BigDecimal getTrace() throws IllegalArgumentException {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigDecimal getTrace() throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:985: warning: [MissingOverride] operate implements method in BigMatrix; expected @Override
    public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:1024: warning: [MissingOverride] preMultiply implements method in BigMatrix; expected @Override
    public BigDecimal[] preMultiply(BigDecimal[] v) throws IllegalArgumentException {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigDecimal[] preMultiply(BigDecimal[] v) throws IllegalArgumentException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:1052: warning: [MissingOverride] solve implements method in BigMatrix; expected @Override
    public BigDecimal[] solve(BigDecimal[] b) throws IllegalArgumentException, InvalidMatrixException {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigDecimal[] solve(BigDecimal[] b) throws IllegalArgumentException, InvalidMatrixException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:1096: warning: [MissingOverride] solve implements method in BigMatrix; expected @Override
    public BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException  {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException  {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:1253: warning: [MissingOverride] toString overrides method in Object; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:1284: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object object) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object object) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Math-98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java:1313: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
36 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-11

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-11/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-11/src/org/mockito/internal/creation/DelegatingMethod.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-11/src/org/mockito/internal/creation/DelegatingMethod.java:21: warning: [MissingOverride] getExceptionTypes implements method in MockitoMethod; expected @Override
    public Class<?>[] getExceptionTypes() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Class<?>[] getExceptionTypes() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-11/src/org/mockito/internal/creation/DelegatingMethod.java:25: warning: [MissingOverride] getJavaMethod implements method in MockitoMethod; expected @Override
    public Method getJavaMethod() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Method getJavaMethod() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-11/src/org/mockito/internal/creation/DelegatingMethod.java:29: warning: [MissingOverride] getName implements method in MockitoMethod; expected @Override
    public String getName() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getName() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-11/src/org/mockito/internal/creation/DelegatingMethod.java:33: warning: [MissingOverride] getParameterTypes implements method in MockitoMethod; expected @Override
    public Class<?>[] getParameterTypes() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Class<?>[] getParameterTypes() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-11/src/org/mockito/internal/creation/DelegatingMethod.java:37: warning: [MissingOverride] getReturnType implements method in MockitoMethod; expected @Override
    public Class<?> getReturnType() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Class<?> getReturnType() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-11/src/org/mockito/internal/creation/DelegatingMethod.java:41: warning: [MissingOverride] isVarArgs implements method in MockitoMethod; expected @Override
    public boolean isVarArgs() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isVarArgs() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-11/src/org/mockito/internal/creation/DelegatingMethod.java:45: warning: [MissingOverride] isAbstract implements method in AbstractAwareMethod; expected @Override
    public boolean isAbstract() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isAbstract() {'?
7 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-10

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-10/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-10/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-10/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java:46: warning: [MissingOverride] answer implements method in Answer; expected @Override
    public Object answer(InvocationOnMock invocation) throws Throwable {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object answer(InvocationOnMock invocation) throws Throwable {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-10/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java:144: warning: [MissingOverride] answer implements method in Answer; expected @Override
        public Object answer(InvocationOnMock invocation) throws Throwable {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object answer(InvocationOnMock invocation) throws Throwable {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-12

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-12/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-12/src/org/mockito/internal/util/reflection/GenericMaster.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-13

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-13/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-13/src/org/mockito/internal/MockHandler.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-13/src/org/mockito/internal/MockHandler.java:58: warning: [MissingOverride] handle implements method in MockitoInvocationHandler; expected @Override
    public Object handle(Invocation invocation) throws Throwable {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object handle(Invocation invocation) throws Throwable {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-13/src/org/mockito/internal/MockHandler.java:108: warning: [MissingOverride] voidMethodStubbable implements method in MockHandlerInterface; expected @Override
    public VoidMethodStubbable<T> voidMethodStubbable(T mock) {
                                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public VoidMethodStubbable<T> voidMethodStubbable(T mock) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-13/src/org/mockito/internal/MockHandler.java:112: warning: [MissingOverride] getMockSettings implements method in MockHandlerInterface; expected @Override
    public MockSettingsImpl getMockSettings() {
                            ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public MockSettingsImpl getMockSettings() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-13/src/org/mockito/internal/MockHandler.java:117: warning: [MissingOverride] setAnswersForStubbing implements method in MockHandlerInterface; expected @Override
    public void setAnswersForStubbing(List<Answer> answers) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override @SuppressWarnings("unchecked")'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-13/src/org/mockito/internal/MockHandler.java:121: warning: [MissingOverride] getInvocationContainer implements method in MockHandlerInterface; expected @Override
    public InvocationContainer getInvocationContainer() {
                               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public InvocationContainer getInvocationContainer() {'?
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-15

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-15/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-15/src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-15/src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java:18: warning: [MissingOverride] filterCandidate implements method in MockCandidateFilter; expected @Override
    public OngoingInjecter filterCandidate(final Collection<Object> mocks, final Field field, final Object fieldInstance) {
                           ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OngoingInjecter filterCandidate(final Collection<Object> mocks, final Field field, final Object fieldInstance) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-15/src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java:23: warning: [MissingOverride] thenInject implements method in OngoingInjecter; expected @Override
                public boolean thenInject() {
                               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean thenInject() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-15/src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java:35: warning: [MissingOverride] thenInject implements method in OngoingInjecter; expected @Override
            public boolean thenInject() {
                           ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean thenInject() {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-14

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-14/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-14/src/org/mockito/internal/MockitoCore.java


************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-14/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-14/src/org/mockito/internal/MockHandler.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-14/src/org/mockito/internal/MockHandler.java:57: warning: [MissingOverride] handle implements method in MockitoInvocationHandler; expected @Override
    public Object handle(Invocation invocation) throws Throwable {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object handle(Invocation invocation) throws Throwable {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-14/src/org/mockito/internal/MockHandler.java:103: warning: [MissingOverride] voidMethodStubbable implements method in MockHandlerInterface; expected @Override
    public VoidMethodStubbable<T> voidMethodStubbable(T mock) {
                                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public VoidMethodStubbable<T> voidMethodStubbable(T mock) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-14/src/org/mockito/internal/MockHandler.java:107: warning: [MissingOverride] getMockSettings implements method in MockHandlerInterface; expected @Override
    public MockSettingsImpl getMockSettings() {
                            ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public MockSettingsImpl getMockSettings() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-14/src/org/mockito/internal/MockHandler.java:112: warning: [MissingOverride] setAnswersForStubbing implements method in MockHandlerInterface; expected @Override
    public void setAnswersForStubbing(List<Answer> answers) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override @SuppressWarnings("unchecked")'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-14/src/org/mockito/internal/MockHandler.java:116: warning: [MissingOverride] getInvocationContainer implements method in MockHandlerInterface; expected @Override
    public InvocationContainer getInvocationContainer() {
                               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public InvocationContainer getInvocationContainer() {'?
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-16

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-16/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-16/src/org/mockito/Mockito.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-16/src/org/mockito/Mockito.java:776: warning: [FunctionalInterfaceClash] When passing lambda arguments to this function, callers will need a cast to disambiguate with: mock(Class<T>, Answer)
    public static <T> T mock(Class<T> classToMock, ReturnValues returnValues) {
                        ^
    (see http://errorprone.info/bugpattern/FunctionalInterfaceClash)
1 warning

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-16/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-16/src/org/mockito/internal/MockitoCore.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-17

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-17/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-17/src/org/mockito/internal/creation/MockSettingsImpl.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-17/src/org/mockito/internal/creation/MockSettingsImpl.java:21: warning: [MissingOverride] serializable implements method in MockSettings; expected @Override
    public MockSettings serializable() {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public MockSettings serializable() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-17/src/org/mockito/internal/creation/MockSettingsImpl.java:25: warning: [MissingOverride] extraInterfaces implements method in MockSettings; expected @Override
    public MockSettings extraInterfaces(Class<?>... extraInterfaces) {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public MockSettings extraInterfaces(Class<?>... extraInterfaces) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-17/src/org/mockito/internal/creation/MockSettingsImpl.java:53: warning: [MissingOverride] name implements method in MockSettings; expected @Override
    public MockSettings name(String name) {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public MockSettings name(String name) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-17/src/org/mockito/internal/creation/MockSettingsImpl.java:58: warning: [MissingOverride] spiedInstance implements method in MockSettings; expected @Override
    public MockSettings spiedInstance(Object spiedInstance) {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public MockSettings spiedInstance(Object spiedInstance) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-17/src/org/mockito/internal/creation/MockSettingsImpl.java:64: warning: [MissingOverride] defaultAnswer implements method in MockSettings; expected @Override
    public MockSettings defaultAnswer(Answer defaultAnswer) {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override @SuppressWarnings("unchecked")'?
5 warnings

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-17/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-17/src/org/mockito/internal/util/MockUtil.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-18

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-18/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-18/compileLib/byte-buddy-0.6.8.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-18/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-18/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java:62: warning: [MissingOverride] answer implements method in Answer; expected @Override
    public Object answer(InvocationOnMock invocation) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object answer(InvocationOnMock invocation) {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-2

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-2/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-2/src/org/mockito/internal/util/Timer.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-20

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-20/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-20/compileLib/byte-buddy-0.2.1.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-20/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-20/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java:24: warning: [MissingOverride] createMock implements method in MockMaker; expected @Override
    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-20/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java:71: warning: [MissingOverride] getHandler implements method in MockMaker; expected @Override
    public MockHandler getHandler(Object mock) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public MockHandler getHandler(Object mock) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-20/src/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java:78: warning: [MissingOverride] resetMock implements method in MockMaker; expected @Override
    public void resetMock(Object mock, MockHandler newHandler, MockCreationSettings settings) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void resetMock(Object mock, MockHandler newHandler, MockCreationSettings settings) {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-21

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-21/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-21/src/org/mockito/internal/creation/instance/ConstructorInstantiator.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-21/src/org/mockito/internal/creation/instance/ConstructorInstantiator.java:13: warning: [MissingOverride] newInstance implements method in Instantiator; expected @Override
    public <T> T newInstance(Class<T> cls) {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public <T> T newInstance(Class<T> cls) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-21/src/org/mockito/internal/creation/instance/ConstructorInstantiator.java:39: warning: [ClassNewInstance] Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()
            return cls.newInstance();
                                  ^
    (see http://errorprone.info/bugpattern/ClassNewInstance)
  Did you mean 'return cls.getDeclaredConstructor().newInstance();'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-22

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-22/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-22/src/org/mockito/internal/matchers/Equality.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-19

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/compileLib/byte-buddy-0.6.8.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/src/org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/src/org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter.java:22: warning: [MissingOverride] filterCandidate implements method in MockCandidateFilter; expected @Override
	public OngoingInjecter filterCandidate(Collection<Object> mocks,
	                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OngoingInjecter filterCandidate(Collection<Object> mocks,'?
1 warning

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/compileLib/byte-buddy-0.6.8.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/src/org/mockito/internal/configuration/injection/PropertyAndSetterInjection.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/src/org/mockito/internal/configuration/injection/PropertyAndSetterInjection.java:65: warning: [MissingOverride] isOut implements method in Filter; expected @Override
        public boolean isOut(Field object) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isOut(Field object) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/src/org/mockito/internal/configuration/injection/PropertyAndSetterInjection.java:71: warning: [MissingOverride] processInjection implements method in MockInjectionStrategy; expected @Override
    public boolean processInjection(Field injectMocksField, Object injectMocksFieldOwner, Set<Object> mockCandidates) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean processInjection(Field injectMocksField, Object injectMocksFieldOwner, Set<Object> mockCandidates) {'?
2 warnings

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/compileLib/byte-buddy-0.6.8.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/src/org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/src/org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter.java:20: warning: [MissingOverride] filterCandidate implements method in MockCandidateFilter; expected @Override
    public OngoingInjecter filterCandidate(Collection<Object> mocks, Field field, Object fieldInstance) {
                           ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OngoingInjecter filterCandidate(Collection<Object> mocks, Field field, Object fieldInstance) {'?
1 warning

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/compileLib/byte-buddy-0.6.8.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/src/org/mockito/internal/configuration/injection/filter/MockCandidateFilter.java


************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/compileLib/byte-buddy-0.6.8.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/src/org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/src/org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter.java:23: warning: [MissingOverride] filterCandidate implements method in MockCandidateFilter; expected @Override
    public OngoingInjecter filterCandidate(final Collection<Object> mocks, final Field field, final Object fieldInstance) {
                           ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public OngoingInjecter filterCandidate(final Collection<Object> mocks, final Field field, final Object fieldInstance) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/src/org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter.java:28: warning: [MissingOverride] thenInject implements method in OngoingInjecter; expected @Override
                public Object thenInject() {
                              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object thenInject() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-19/src/org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter.java:42: warning: [MissingOverride] thenInject implements method in OngoingInjecter; expected @Override
            public Object thenInject() {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object thenInject() {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-23

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-23/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-23/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-23/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java:47: warning: [MissingOverride] answer implements method in Answer; expected @Override
    public Object answer(InvocationOnMock invocation) throws Throwable {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object answer(InvocationOnMock invocation) throws Throwable {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-23/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java:115: warning: [MissingOverride] answer implements method in Answer; expected @Override
            public Object answer(InvocationOnMock invocation) throws Throwable {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object answer(InvocationOnMock invocation) throws Throwable {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-24

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-24/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-24/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-24/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java:63: warning: [MissingOverride] answer implements method in Answer; expected @Override
    public Object answer(InvocationOnMock invocation) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object answer(InvocationOnMock invocation) {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-25

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-25/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-25/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-25/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java:44: warning: [MissingOverride] answer implements method in Answer; expected @Override
    public Object answer(InvocationOnMock invocation) throws Throwable {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object answer(InvocationOnMock invocation) throws Throwable {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-25/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java:86: warning: [MissingOverride] answer implements method in Answer; expected @Override
            public Object answer(InvocationOnMock invocation) throws Throwable {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object answer(InvocationOnMock invocation) throws Throwable {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-26

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-26/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-26/src/org/mockito/internal/util/Primitives.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-27

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-27/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-27/src/org/mockito/internal/util/MockUtil.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-28

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-28/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-28/src/org/mockito/internal/configuration/DefaultInjectionEngine.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-28/src/org/mockito/internal/configuration/DefaultInjectionEngine.java:30: warning: [MissingOverride] compare implements method in Comparator; expected @Override
        public int compare(Field field1, Field field2) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compare(Field field1, Field field2) {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-29

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-29/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-29/src/org/mockito/internal/matchers/Same.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-29/src/org/mockito/internal/matchers/Same.java:22: warning: [MissingOverride] matches implements method in ArgumentMatcher; expected @Override
    public boolean matches(Object actual) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean matches(Object actual) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-29/src/org/mockito/internal/matchers/Same.java:26: warning: [MissingOverride] describeTo overrides method in ArgumentMatcher; expected @Override
    public void describeTo(Description description) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void describeTo(Description description) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-3

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-3/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-3/compileLib/byte-buddy-0.6.8.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-3/src/org/mockito/internal/invocation/InvocationMatcher.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-3/src/org/mockito/internal/invocation/InvocationMatcher.java:53: warning: [MissingOverride] toString implements method in DescribedInvocation; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-3/src/org/mockito/internal/invocation/InvocationMatcher.java:114: warning: [MissingOverride] getLocation implements method in DescribedInvocation; expected @Override
    public Location getLocation() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Location getLocation() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-3/src/org/mockito/internal/invocation/InvocationMatcher.java:118: warning: [MissingOverride] captureArgumentsFrom implements method in CapturesArgumensFromInvocation; expected @Override
    public void captureArgumentsFrom(Invocation invocation) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void captureArgumentsFrom(Invocation invocation) {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-31

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-31/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-31/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-31/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java:42: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
    private final class ThrowingInterceptor implements MethodInterceptor {
                  ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private static final class ThrowingInterceptor implements MethodInterceptor {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-31/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java:50: warning: [MissingOverride] intercept implements method in MethodInterceptor; expected @Override
        public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy) throws Throwable {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy) throws Throwable {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-31/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java:66: warning: [MissingOverride] answer implements method in Answer; expected @Override
    public Object answer(final InvocationOnMock invocation) throws Throwable {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object answer(final InvocationOnMock invocation) throws Throwable {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-30

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-30/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-30/src/org/mockito/exceptions/Reporter.java


************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-30/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-30/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-30/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java:43: warning: [ClassCanBeStatic] Inner class is non-static but does not reference enclosing class
    private final class ThrowingInterceptor implements MethodInterceptor {
                  ^
    (see http://errorprone.info/bugpattern/ClassCanBeStatic)
  Did you mean 'private static final class ThrowingInterceptor implements MethodInterceptor {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-30/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java:51: warning: [MissingOverride] intercept implements method in MethodInterceptor; expected @Override
        public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy) throws Throwable {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy) throws Throwable {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-30/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java:68: warning: [MissingOverride] answer implements method in Answer; expected @Override
    public Object answer(final InvocationOnMock invocation) throws Throwable {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object answer(final InvocationOnMock invocation) throws Throwable {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-32

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-32/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-32/src/org/mockito/internal/configuration/SpyAnnotationEngine.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-32/src/org/mockito/internal/configuration/SpyAnnotationEngine.java:28: warning: [MissingOverride] process implements method in AnnotationEngine; expected @Override
    public void process(Class<?> context, Object testClass) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override @SuppressWarnings("deprecation")'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-32/src/org/mockito/internal/configuration/SpyAnnotationEngine.java:64: error: [GetClassOnClass] Calling getClass() on an object of type Class returns the Class object for java.lang.Class; you probably meant to operate on the object directly
                new Reporter().unsupportedCombinationOfAnnotations(annotation.getSimpleName(), annotation.getClass().getSimpleName());
                                                                                                                  ^
    (see http://errorprone.info/bugpattern/GetClassOnClass)
  Did you mean 'new Reporter().unsupportedCombinationOfAnnotations(annotation.getSimpleName(), annotation.getSimpleName());' or 'new Reporter().unsupportedCombinationOfAnnotations(annotation.getSimpleName(), Class.class.getSimpleName());'?
Note: /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-32/src/org/mockito/internal/configuration/SpyAnnotationEngine.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
1 error
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-33

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-33/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-33/src/org/mockito/internal/invocation/InvocationMatcher.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-33/src/org/mockito/internal/invocation/InvocationMatcher.java:52: warning: [MissingOverride] toString implements method in PrintableInvocation; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-33/src/org/mockito/internal/invocation/InvocationMatcher.java:102: warning: [MissingOverride] getLocation implements method in PrintableInvocation; expected @Override
    public Location getLocation() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Location getLocation() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-33/src/org/mockito/internal/invocation/InvocationMatcher.java:106: warning: [MissingOverride] toString implements method in PrintingFriendlyInvocation; expected @Override
    public String toString(PrintSettings printSettings) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString(PrintSettings printSettings) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-33/src/org/mockito/internal/invocation/InvocationMatcher.java:110: warning: [MissingOverride] captureArgumentsFrom implements method in CapturesArgumensFromInvocation; expected @Override
    public void captureArgumentsFrom(Invocation i) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void captureArgumentsFrom(Invocation i) {'?
4 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-34

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-34/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-34/src/org/mockito/internal/invocation/InvocationMatcher.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-34/src/org/mockito/internal/invocation/InvocationMatcher.java:51: warning: [MissingOverride] toString implements method in PrintableInvocation; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-34/src/org/mockito/internal/invocation/InvocationMatcher.java:95: warning: [MissingOverride] getLocation implements method in PrintableInvocation; expected @Override
    public Location getLocation() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Location getLocation() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-34/src/org/mockito/internal/invocation/InvocationMatcher.java:99: warning: [MissingOverride] toString implements method in PrintingFriendlyInvocation; expected @Override
    public String toString(PrintSettings printSettings) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString(PrintSettings printSettings) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-34/src/org/mockito/internal/invocation/InvocationMatcher.java:103: warning: [MissingOverride] captureArgumentsFrom implements method in CapturesArgumensFromInvocation; expected @Override
    public void captureArgumentsFrom(Invocation i) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void captureArgumentsFrom(Invocation i) {'?
4 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-35

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-35/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-35/src/org/mockito/Matchers.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-35/src/org/mockito/Matchers.java:192: warning: [TypeParameterUnusedInFormals] Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.
    public static <T> T anyObject() {
                        ^
    (see http://errorprone.info/bugpattern/TypeParameterUnusedInFormals)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-35/src/org/mockito/Matchers.java:220: warning: [TypeParameterUnusedInFormals] Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.
    public static <T> T anyVararg() {
                        ^
    (see http://errorprone.info/bugpattern/TypeParameterUnusedInFormals)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-35/src/org/mockito/Matchers.java:249: warning: [TypeParameterUnusedInFormals] Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.
    public static <T> T any() {
                        ^
    (see http://errorprone.info/bugpattern/TypeParameterUnusedInFormals)
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-36

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-36/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-36/src/org/mockito/internal/invocation/Invocation.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-36/src/org/mockito/internal/invocation/Invocation.java:57: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (!isVarArgs || args[args.length - 1] != null && !args[args.length - 1].getClass().isArray()) {
                                                        ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if (!isVarArgs || (args[args.length - 1] != null && !args[args.length - 1].getClass().isArray())) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-36/src/org/mockito/internal/invocation/Invocation.java:76: warning: [MissingOverride] getMock implements method in InvocationOnMock; expected @Override
    public Object getMock() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object getMock() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-36/src/org/mockito/internal/invocation/Invocation.java:80: warning: [MissingOverride] getMethod implements method in InvocationOnMock; expected @Override
    public MockitoMethod getMethod() {
                         ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public MockitoMethod getMethod() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-36/src/org/mockito/internal/invocation/Invocation.java:84: warning: [MissingOverride] getArguments implements method in InvocationOnMock; expected @Override
    public Object[] getArguments() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object[] getArguments() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-36/src/org/mockito/internal/invocation/Invocation.java:100: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object o) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object o) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-36/src/org/mockito/internal/invocation/Invocation.java:114: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-36/src/org/mockito/internal/invocation/Invocation.java:118: warning: [MissingOverride] toString implements method in PrintableInvocation; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-36/src/org/mockito/internal/invocation/Invocation.java:189: warning: [MissingOverride] getLocation implements method in PrintableInvocation; expected @Override
    public Location getLocation() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Location getLocation() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-36/src/org/mockito/internal/invocation/Invocation.java:201: warning: [MissingOverride] callRealMethod implements method in InvocationOnMock; expected @Override
    public Object callRealMethod() throws Throwable {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object callRealMethod() throws Throwable {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-36/src/org/mockito/internal/invocation/Invocation.java:205: warning: [MissingOverride] toString implements method in PrintingFriendlyInvocation; expected @Override
    public String toString(PrintSettings printSettings) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString(PrintSettings printSettings) {'?
10 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-37

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-37/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-37/src/org/mockito/internal/stubbing/answers/AnswersValidator.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-38

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-38/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-38/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-4

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-4/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-4/src/org/mockito/exceptions/Reporter.java


************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-5

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-5/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-5/src/org/mockito/internal/verification/VerificationOverTimeImpl.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-5/src/org/mockito/internal/verification/VerificationOverTimeImpl.java:80: error: cannot access ComparisonFailure
            try {
            ^
  class file for junit.framework.ComparisonFailure not found
1 error

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-6

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-6/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-6/src/org/mockito/Matchers.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-6/src/org/mockito/Matchers.java:243: warning: [TypeParameterUnusedInFormals] Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.
    public static <T> T anyObject() {
                        ^
    (see http://errorprone.info/bugpattern/TypeParameterUnusedInFormals)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-6/src/org/mockito/Matchers.java:270: warning: [TypeParameterUnusedInFormals] Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.
    public static <T> T anyVararg() {
                        ^
    (see http://errorprone.info/bugpattern/TypeParameterUnusedInFormals)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-6/src/org/mockito/Matchers.java:308: warning: [TypeParameterUnusedInFormals] Declaring a type parameter that is only used in the return type is a misuse of generics: operations on the type parameter are unchecked, it hides unsafe casts at invocations of the method, and it interacts badly with method overload resolution.
    public static <T> T any() {
                        ^
    (see http://errorprone.info/bugpattern/TypeParameterUnusedInFormals)
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-7

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-7/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-7/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-7/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java:429: warning: [MissingOverride] rawExtraInterfaces overrides method in GenericMetadataSupport; expected @Override
        public Class<?>[] rawExtraInterfaces() {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Class<?>[] rawExtraInterfaces() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-7/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java:526: warning: [MissingOverride] firstBound implements method in BoundedType; expected @Override
        public Type firstBound() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Type firstBound() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-7/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java:537: warning: [MissingOverride] interfaceBounds implements method in BoundedType; expected @Override
        public Type[] interfaceBounds() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Type[] interfaceBounds() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-7/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java:586: warning: [MissingOverride] firstBound implements method in BoundedType; expected @Override
        public Type firstBound() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Type firstBound() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-7/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java:596: warning: [MissingOverride] interfaceBounds implements method in BoundedType; expected @Override
        public Type[] interfaceBounds() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Type[] interfaceBounds() {'?
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-9

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-9/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-9/src/org/mockito/internal/stubbing/answers/CallsRealMethods.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-9/src/org/mockito/internal/stubbing/answers/CallsRealMethods.java:35: warning: [MissingOverride] answer implements method in Answer; expected @Override
    public Object answer(InvocationOnMock invocation) throws Throwable {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object answer(InvocationOnMock invocation) throws Throwable {'?
1 warning

************************

####################################################################################################################################################################################################################

Running Errorprone on: Mockito-8

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-8/build/classes/main:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-8/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-8/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java:429: warning: [MissingOverride] rawExtraInterfaces overrides method in GenericMetadataSupport; expected @Override
        public Class<?>[] rawExtraInterfaces() {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Class<?>[] rawExtraInterfaces() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-8/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java:526: warning: [MissingOverride] firstBound implements method in BoundedType; expected @Override
        public Type firstBound() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Type firstBound() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-8/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java:537: warning: [MissingOverride] interfaceBounds implements method in BoundedType; expected @Override
        public Type[] interfaceBounds() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Type[] interfaceBounds() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-8/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java:586: warning: [MissingOverride] firstBound implements method in BoundedType; expected @Override
        public Type firstBound() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Type firstBound() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Mockito-8/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java:596: warning: [MissingOverride] interfaceBounds implements method in BoundedType; expected @Override
        public Type[] interfaceBounds() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Type[] interfaceBounds() {'?
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-10

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-10/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-10/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-10/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java:193: warning: [MissingOverride] getPeriodType implements method in ReadablePeriod; expected @Override
    public abstract PeriodType getPeriodType();
                               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public abstract PeriodType getPeriodType();'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-10/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java:201: warning: [MissingOverride] size implements method in ReadablePeriod; expected @Override
    public int size() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int size() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-10/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java:215: warning: [MissingOverride] getFieldType implements method in ReadablePeriod; expected @Override
    public DurationFieldType getFieldType(int index) {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DurationFieldType getFieldType(int index) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-10/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java:231: warning: [MissingOverride] getValue implements method in ReadablePeriod; expected @Override
    public int getValue(int index) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getValue(int index) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-10/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java:247: warning: [MissingOverride] get implements method in ReadablePeriod; expected @Override
    public int get(DurationFieldType type) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int get(DurationFieldType type) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-10/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java:260: warning: [MissingOverride] isSupported implements method in ReadablePeriod; expected @Override
    public boolean isSupported(DurationFieldType type) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isSupported(DurationFieldType type) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-10/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java:271: warning: [MissingOverride] toPeriod implements method in ReadablePeriod; expected @Override
    public Period toPeriod() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Period toPeriod() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-10/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java:283: warning: [MissingOverride] toMutablePeriod implements method in ReadablePeriod; expected @Override
    public MutablePeriod toMutablePeriod() {
                         ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public MutablePeriod toMutablePeriod() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-10/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java:299: warning: [MissingOverride] equals implements method in ReadablePeriod; expected @Override
    public boolean equals(Object period) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object period) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-10/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java:307: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        return (other.getPeriodType() == getPeriodType() && other.getValue(0) == getValue());
                                      ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'return (Objects.equals(other.getPeriodType(), getPeriodType()) && other.getValue(0) == getValue());' or 'return (other.getPeriodType().equals(getPeriodType()) && other.getValue(0) == getValue());'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-10/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java:315: warning: [MissingOverride] hashCode implements method in ReadablePeriod; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-10/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java:330: warning: [MissingOverride] compareTo implements method in Comparable; expected @Override
    public int compareTo(BaseSingleFieldPeriod other) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(BaseSingleFieldPeriod other) {'?
12 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-1

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:78: warning: [MissingOverride] getType implements method in DurationField; expected @Override
    public final DurationFieldType getType() {
                                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final DurationFieldType getType() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:82: warning: [MissingOverride] getName implements method in DurationField; expected @Override
    public String getName() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getName() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:91: warning: [MissingOverride] isSupported implements method in DurationField; expected @Override
    public boolean isSupported() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isSupported() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:100: warning: [MissingOverride] isPrecise implements method in DurationField; expected @Override
    public boolean isPrecise() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isPrecise() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:109: warning: [MissingOverride] getValue implements method in DurationField; expected @Override
    public int getValue(long duration) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getValue(long duration) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:118: warning: [MissingOverride] getValueAsLong implements method in DurationField; expected @Override
    public long getValueAsLong(long duration) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getValueAsLong(long duration) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:127: warning: [MissingOverride] getValue implements method in DurationField; expected @Override
    public int getValue(long duration, long instant) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getValue(long duration, long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:136: warning: [MissingOverride] getValueAsLong implements method in DurationField; expected @Override
    public long getValueAsLong(long duration, long instant) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getValueAsLong(long duration, long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:145: warning: [MissingOverride] getMillis implements method in DurationField; expected @Override
    public long getMillis(int value) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getMillis(int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:154: warning: [MissingOverride] getMillis implements method in DurationField; expected @Override
    public long getMillis(long value) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getMillis(long value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:163: warning: [MissingOverride] getMillis implements method in DurationField; expected @Override
    public long getMillis(int value, long instant) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getMillis(int value, long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:172: warning: [MissingOverride] getMillis implements method in DurationField; expected @Override
    public long getMillis(long value, long instant) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getMillis(long value, long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:181: warning: [MissingOverride] add implements method in DurationField; expected @Override
    public long add(long instant, int value) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:190: warning: [MissingOverride] add implements method in DurationField; expected @Override
    public long add(long instant, long value) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, long value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:199: warning: [MissingOverride] getDifference implements method in DurationField; expected @Override
    public int getDifference(long minuendInstant, long subtrahendInstant) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getDifference(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:208: warning: [MissingOverride] getDifferenceAsLong implements method in DurationField; expected @Override
    public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:217: warning: [MissingOverride] getUnitMillis implements method in DurationField; expected @Override
    public long getUnitMillis() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getUnitMillis() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:226: warning: [MissingOverride] compareTo implements method in Comparable; expected @Override
    public int compareTo(DurationField durationField) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(DurationField durationField) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:240: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:258: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/field/UnsupportedDurationField.java:267: warning: [MissingOverride] toString implements method in DurationField; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
21 warnings

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/Partial.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/Partial.java:310: warning: [MissingOverride] size implements method in ReadablePartial; expected @Override
    public int size() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int size() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/Partial.java:322: warning: [MissingOverride] getChronology implements method in ReadablePartial; expected @Override
    public Chronology getChronology() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology getChronology() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/Partial.java:334: warning: [MissingOverride] getField implements method in AbstractPartial; expected @Override
    protected DateTimeField getField(int index, Chronology chrono) {
                            ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected DateTimeField getField(int index, Chronology chrono) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/Partial.java:345: warning: [MissingOverride] getFieldType overrides method in AbstractPartial; expected @Override
    public DateTimeFieldType getFieldType(int index) {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeFieldType getFieldType(int index) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/Partial.java:357: warning: [MissingOverride] getFieldTypes overrides method in AbstractPartial; expected @Override
    public DateTimeFieldType[] getFieldTypes() {
                               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeFieldType[] getFieldTypes() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/Partial.java:369: warning: [MissingOverride] getValue implements method in ReadablePartial; expected @Override
    public int getValue(int index) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getValue(int index) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/Partial.java:382: warning: [MissingOverride] getValues overrides method in AbstractPartial; expected @Override
    public int[] getValues() {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int[] getValues() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/Partial.java:742: warning: [MissingOverride] toString implements method in ReadablePartial; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/Partial.java:848: warning: [MissingOverride] getField implements method in AbstractPartialFieldProperty; expected @Override
        public DateTimeField getField() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeField getField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/Partial.java:857: warning: [MissingOverride] getReadablePartial implements method in AbstractPartialFieldProperty; expected @Override
        protected ReadablePartial getReadablePartial() {
                                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected ReadablePartial getReadablePartial() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-1/src/main/java/org/joda/time/Partial.java:875: warning: [MissingOverride] get implements method in AbstractPartialFieldProperty; expected @Override
        public int get() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int get() {'?
11 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-11

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-11/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java:369: warning: [DefaultCharset] Implicit use of the platform default charset, which can result in e.g. non-ASCII characters being silently replaced with '?' in many environments
                BufferedReader in = new BufferedReader(new FileReader(sources[i]));
                                                       ^
    (see http://errorprone.info/bugpattern/DefaultCharset)
  Did you mean 'BufferedReader in = Files.newBufferedReader(sources[i].toPath(), UTF_8);' or 'BufferedReader in = Files.newBufferedReader(sources[i].toPath(), Charset.defaultCharset());'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java:634: warning: [MissingOverride] toString overrides method in Object; expected @Override
        public String toString() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java:701: warning: [MissingOverride] toString overrides method in Object; expected @Override
        public String toString() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java:793: warning: [AmbiguousMethodReference] This method's reference is ambiguous, its name and functional interface type are the same as: addToBuilder(Zone, DateTimeZoneBuilder, Map<String, RuleSet>)
        public void addToBuilder(DateTimeZoneBuilder builder, Map<String, RuleSet> ruleSets) {
                    ^
    (see http://errorprone.info/bugpattern/AmbiguousMethodReference)
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-11/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java:830: warning: [MissingOverride] toString overrides method in Object; expected @Override
        public String toString() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
5 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-13

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:863: warning: [MissingOverride] calculatePrintedLength implements method in PeriodFieldAffix; expected @Override
        public int calculatePrintedLength(int value) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int calculatePrintedLength(int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:867: warning: [MissingOverride] printTo implements method in PeriodFieldAffix; expected @Override
        public void printTo(StringBuffer buf, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:871: warning: [MissingOverride] printTo implements method in PeriodFieldAffix; expected @Override
        public void printTo(Writer out, int value) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, int value) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:875: warning: [MissingOverride] parse implements method in PeriodFieldAffix; expected @Override
        public int parse(String periodStr, int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parse(String periodStr, int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:884: warning: [MissingOverride] scan implements method in PeriodFieldAffix; expected @Override
        public int scan(String periodStr, final int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int scan(String periodStr, final int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:921: warning: [MissingOverride] calculatePrintedLength implements method in PeriodFieldAffix; expected @Override
        public int calculatePrintedLength(int value) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int calculatePrintedLength(int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:925: warning: [MissingOverride] printTo implements method in PeriodFieldAffix; expected @Override
        public void printTo(StringBuffer buf, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:929: warning: [MissingOverride] printTo implements method in PeriodFieldAffix; expected @Override
        public void printTo(Writer out, int value) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, int value) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:933: warning: [MissingOverride] parse implements method in PeriodFieldAffix; expected @Override
        public int parse(String periodStr, int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parse(String periodStr, int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:956: warning: [MissingOverride] scan implements method in PeriodFieldAffix; expected @Override
        public int scan(String periodStr, final int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int scan(String periodStr, final int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:996: warning: [MissingOverride] calculatePrintedLength implements method in PeriodFieldAffix; expected @Override
        public int calculatePrintedLength(int value) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int calculatePrintedLength(int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1001: warning: [MissingOverride] printTo implements method in PeriodFieldAffix; expected @Override
        public void printTo(StringBuffer buf, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1006: warning: [MissingOverride] printTo implements method in PeriodFieldAffix; expected @Override
        public void printTo(Writer out, int value) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, int value) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1011: warning: [MissingOverride] parse implements method in PeriodFieldAffix; expected @Override
        public int parse(String periodStr, int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parse(String periodStr, int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1019: warning: [MissingOverride] scan implements method in PeriodFieldAffix; expected @Override
        public int scan(String periodStr, final int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int scan(String periodStr, final int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1078: warning: [MissingOverride] countFieldsToPrint implements method in PeriodPrinter; expected @Override
        public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1088: warning: [MissingOverride] calculatePrintedLength implements method in PeriodPrinter; expected @Override
        public int calculatePrintedLength(ReadablePeriod period, Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int calculatePrintedLength(ReadablePeriod period, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1120: warning: [MissingOverride] printTo implements method in PeriodPrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1151: warning: [MissingOverride] printTo implements method in PeriodPrinter; expected @Override
        public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1182: warning: [MissingOverride] parseInto implements method in PeriodParser; expected @Override
        public int parseInto(
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1548: warning: [MissingOverride] countFieldsToPrint implements method in PeriodPrinter; expected @Override
        public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1552: warning: [MissingOverride] calculatePrintedLength implements method in PeriodPrinter; expected @Override
        public int calculatePrintedLength(ReadablePeriod period, Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int calculatePrintedLength(ReadablePeriod period, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1556: warning: [MissingOverride] printTo implements method in PeriodPrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1560: warning: [MissingOverride] printTo implements method in PeriodPrinter; expected @Override
        public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1564: warning: [MissingOverride] parseInto implements method in PeriodParser; expected @Override
        public int parseInto(
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1624: warning: [MissingOverride] countFieldsToPrint implements method in PeriodPrinter; expected @Override
        public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1632: warning: [MissingOverride] calculatePrintedLength implements method in PeriodPrinter; expected @Override
        public int calculatePrintedLength(ReadablePeriod period, Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int calculatePrintedLength(ReadablePeriod period, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1657: warning: [MissingOverride] printTo implements method in PeriodPrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1679: warning: [MissingOverride] printTo implements method in PeriodPrinter; expected @Override
        public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1701: warning: [MissingOverride] parseInto implements method in PeriodParser; expected @Override
        public int parseInto(
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1787: warning: [MissingOverride] countFieldsToPrint implements method in PeriodPrinter; expected @Override
        public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1796: warning: [MissingOverride] calculatePrintedLength implements method in PeriodPrinter; expected @Override
        public int calculatePrintedLength(ReadablePeriod period, Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int calculatePrintedLength(ReadablePeriod period, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1805: warning: [MissingOverride] printTo implements method in PeriodPrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1813: warning: [MissingOverride] printTo implements method in PeriodPrinter; expected @Override
        public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-13/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1821: warning: [MissingOverride] parseInto implements method in PeriodParser; expected @Override
        public int parseInto(
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto('?
35 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-12

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDate.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDate.java:475: warning: [MissingOverride] size implements method in ReadablePartial; expected @Override
    public int size() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int size() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDate.java:488: warning: [MissingOverride] getField implements method in AbstractPartial; expected @Override
    protected DateTimeField getField(int index, Chronology chrono) {
                            ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected DateTimeField getField(int index, Chronology chrono) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDate.java:513: warning: [MissingOverride] getValue implements method in ReadablePartial; expected @Override
    public int getValue(int index) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getValue(int index) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDate.java:541: warning: [MissingOverride] get overrides method in AbstractPartial; expected @Override
    public int get(DateTimeFieldType fieldType) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int get(DateTimeFieldType fieldType) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDate.java:559: warning: [MissingOverride] isSupported overrides method in AbstractPartial; expected @Override
    public boolean isSupported(DateTimeFieldType type) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isSupported(DateTimeFieldType type) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDate.java:599: warning: [MissingOverride] getLocalMillis implements method in BaseLocal; expected @Override
    protected long getLocalMillis() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected long getLocalMillis() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDate.java:608: warning: [MissingOverride] getChronology implements method in ReadablePartial; expected @Override
    public Chronology getChronology() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology getChronology() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDate.java:620: warning: [MissingOverride] equals overrides method in AbstractPartial; expected @Override
    public boolean equals(Object partial) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object partial) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDate.java:639: warning: [MissingOverride] hashCode overrides method in AbstractPartial; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDate.java:664: warning: [MissingOverride] compareTo overrides method in AbstractPartial; expected @Override
    public int compareTo(ReadablePartial partial) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(ReadablePartial partial) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDate.java:1804: warning: [MissingOverride] toString implements method in ReadablePartial; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override @ToString'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDate.java:1908: warning: [MissingOverride] getField implements method in AbstractReadableInstantFieldProperty; expected @Override
        public DateTimeField getField() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeField getField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDate.java:1917: warning: [MissingOverride] getMillis implements method in AbstractReadableInstantFieldProperty; expected @Override
        protected long getMillis() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected long getMillis() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDate.java:1927: warning: [MissingOverride] getChronology overrides method in AbstractReadableInstantFieldProperty; expected @Override
        protected Chronology getChronology() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected Chronology getChronology() {'?
14 warnings

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDateTime.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDateTime.java:528: warning: [MissingOverride] size implements method in ReadablePartial; expected @Override
    public int size() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int size() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDateTime.java:541: warning: [MissingOverride] getField implements method in AbstractPartial; expected @Override
    protected DateTimeField getField(int index, Chronology chrono) {
                            ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected DateTimeField getField(int index, Chronology chrono) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDateTime.java:566: warning: [MissingOverride] getValue implements method in ReadablePartial; expected @Override
    public int getValue(int index) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getValue(int index) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDateTime.java:596: warning: [MissingOverride] get overrides method in AbstractPartial; expected @Override
    public int get(DateTimeFieldType type) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int get(DateTimeFieldType type) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDateTime.java:611: warning: [MissingOverride] isSupported overrides method in AbstractPartial; expected @Override
    public boolean isSupported(DateTimeFieldType type) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isSupported(DateTimeFieldType type) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDateTime.java:640: warning: [MissingOverride] getLocalMillis implements method in BaseLocal; expected @Override
    protected long getLocalMillis() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected long getLocalMillis() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDateTime.java:649: warning: [MissingOverride] getChronology implements method in ReadablePartial; expected @Override
    public Chronology getChronology() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology getChronology() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDateTime.java:661: warning: [MissingOverride] equals overrides method in AbstractPartial; expected @Override
    public boolean equals(Object partial) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object partial) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDateTime.java:691: warning: [MissingOverride] compareTo overrides method in AbstractPartial; expected @Override
    public int compareTo(ReadablePartial partial) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(ReadablePartial partial) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDateTime.java:2015: warning: [MissingOverride] toString implements method in ReadablePartial; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override @ToString'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDateTime.java:2120: warning: [MissingOverride] getField implements method in AbstractReadableInstantFieldProperty; expected @Override
        public DateTimeField getField() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeField getField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDateTime.java:2129: warning: [MissingOverride] getMillis implements method in AbstractReadableInstantFieldProperty; expected @Override
        protected long getMillis() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected long getMillis() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-12/src/main/java/org/joda/time/LocalDateTime.java:2139: warning: [MissingOverride] getChronology overrides method in AbstractReadableInstantFieldProperty; expected @Override
        protected Chronology getChronology() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected Chronology getChronology() {'?
13 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-14

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java:58: warning: [MissingOverride] isLenient implements method in DateTimeField; expected @Override
    public boolean isLenient() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isLenient() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java:71: warning: [MissingOverride] get implements method in ImpreciseDateTimeField; expected @Override
    public int get(long instant) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int get(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java:91: warning: [MissingOverride] add implements method in ImpreciseDateTimeField; expected @Override
    public long add(long instant, int months) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, int months) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java:150: warning: [MissingOverride] add implements method in ImpreciseDateTimeField; expected @Override
    public long add(long instant, long months) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, long months) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java:175: warning: [IntLongMath] Expression of type int may overflow before being assigned to a long
            monthToUse = iMax - remMonthToUse + 1;
                                              ^
    (see http://errorprone.info/bugpattern/IntLongMath)
  Did you mean 'monthToUse = (long) iMax - remMonthToUse + 1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java:203: warning: [MissingOverride] add overrides method in BaseDateTimeField; expected @Override
    public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java:232: warning: [MissingOverride] addWrapField overrides method in BaseDateTimeField; expected @Override
    public long addWrapField(long instant, int months) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long addWrapField(long instant, int months) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java:237: warning: [MissingOverride] getDifferenceAsLong overrides method in ImpreciseDateTimeField; expected @Override
    public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java:292: warning: [MissingOverride] set implements method in ImpreciseDateTimeField; expected @Override
    public long set(long instant, int month) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long set(long instant, int month) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java:309: warning: [MissingOverride] getRangeDurationField implements method in ImpreciseDateTimeField; expected @Override
    public DurationField getRangeDurationField() {
                         ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DurationField getRangeDurationField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java:314: warning: [MissingOverride] isLeap overrides method in BaseDateTimeField; expected @Override
    public boolean isLeap(long instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isLeap(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java:323: warning: [MissingOverride] getLeapAmount overrides method in BaseDateTimeField; expected @Override
    public int getLeapAmount(long instant) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getLeapAmount(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java:328: warning: [MissingOverride] getLeapDurationField overrides method in BaseDateTimeField; expected @Override
    public DurationField getLeapDurationField() {
                         ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DurationField getLeapDurationField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java:333: warning: [MissingOverride] getMinimumValue implements method in BaseDateTimeField; expected @Override
    public int getMinimumValue() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMinimumValue() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java:338: warning: [MissingOverride] getMaximumValue implements method in BaseDateTimeField; expected @Override
    public int getMaximumValue() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumValue() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java:343: warning: [MissingOverride] roundFloor implements method in ImpreciseDateTimeField; expected @Override
    public long roundFloor(long instant) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long roundFloor(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java:350: warning: [MissingOverride] remainder overrides method in BaseDateTimeField; expected @Override
    public long remainder(long instant) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long remainder(long instant) {'?
17 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-15

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-15/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-15/src/main/java/org/joda/time/field/FieldUtils.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-15/src/main/java/org/joda/time/field/FieldUtils.java:170: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (total / val2 != val1 || val1 == Long.MIN_VALUE && val2 == -1 || val2 == Long.MIN_VALUE && val1 == -1) {
                                                           ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if (total / val2 != val1 || (val1 == Long.MIN_VALUE && val2 == -1) || val2 == Long.MIN_VALUE && val1 == -1) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-15/src/main/java/org/joda/time/field/FieldUtils.java:170: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
        if (total / val2 != val1 || val1 == Long.MIN_VALUE && val2 == -1 || val2 == Long.MIN_VALUE && val1 == -1) {
                                                                                                   ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'if (total / val2 != val1 || val1 == Long.MIN_VALUE && val2 == -1 || (val2 == Long.MIN_VALUE && val1 == -1)) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-16

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-16/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-16/src/main/java/org/joda/time/format/DateTimeFormatter.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-16/src/main/java/org/joda/time/format/DateTimeFormatter.java:188: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (locale == getLocale() || (locale != null && locale.equals(getLocale()))) {
                   ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(locale, getLocale()) || (locale != null && locale.equals(getLocale()))) {' or 'if (locale.equals(getLocale()) || (locale != null && locale.equals(getLocale()))) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-16/src/main/java/org/joda/time/format/DateTimeFormatter.java:320: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (iZone == zone) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(iZone, zone)) {' or 'if (iZone.equals(zone)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-16/src/main/java/org/joda/time/format/DateTimeFormatter.java:367: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (iPivotYear == pivotYear || (iPivotYear != null && iPivotYear.equals(pivotYear))) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(iPivotYear, pivotYear) || (iPivotYear != null && iPivotYear.equals(pivotYear))) {' or 'if (iPivotYear.equals(pivotYear) || (iPivotYear != null && iPivotYear.equals(pivotYear))) {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-17

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-17/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-17/src/main/java/org/joda/time/DateTimeZone.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-17/src/main/java/org/joda/time/DateTimeZone.java:450: warning: [ClassNewInstance] Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()
                    provider = (Provider) Class.forName(providerClass).newInstance();
                                                                                  ^
    (see http://errorprone.info/bugpattern/ClassNewInstance)
  Did you mean 'provider = (Provider) Class.forName(providerClass).getDeclaredConstructor().newInstance();'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-17/src/main/java/org/joda/time/DateTimeZone.java:534: warning: [ClassNewInstance] Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()
                    nameProvider = (NameProvider) Class.forName(providerClass).newInstance();
                                                                                          ^
    (see http://errorprone.info/bugpattern/ClassNewInstance)
  Did you mean 'nameProvider = (NameProvider) Class.forName(providerClass).getDeclaredConstructor().newInstance();'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-17/src/main/java/org/joda/time/DateTimeZone.java:605: warning: [MissingOverride] getZone implements method in BaseChronology; expected @Override
            public DateTimeZone getZone() {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeZone getZone() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-17/src/main/java/org/joda/time/DateTimeZone.java:608: warning: [MissingOverride] withUTC implements method in BaseChronology; expected @Override
            public Chronology withUTC() {
                              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology withUTC() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-17/src/main/java/org/joda/time/DateTimeZone.java:611: warning: [MissingOverride] withZone implements method in BaseChronology; expected @Override
            public Chronology withZone(DateTimeZone zone) {
                              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology withZone(DateTimeZone zone) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-17/src/main/java/org/joda/time/DateTimeZone.java:614: warning: [MissingOverride] toString implements method in BaseChronology; expected @Override
            public String toString() {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-17/src/main/java/org/joda/time/DateTimeZone.java:1031: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (newZone == this) {
                    ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(newZone, this)) {' or 'if (newZone.equals(this)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-17/src/main/java/org/joda/time/DateTimeZone.java:1229: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public abstract boolean equals(Object object);
                            ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public abstract boolean equals(Object object);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-17/src/main/java/org/joda/time/DateTimeZone.java:1236: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-17/src/main/java/org/joda/time/DateTimeZone.java:1244: warning: [MissingOverride] toString overrides method in Object; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
10 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-18

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:214: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (zone == DateTimeZone.UTC) {
                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(zone, DateTimeZone.UTC)) {' or 'if (zone.equals(DateTimeZone.UTC)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:291: warning: [MissingOverride] getZone overrides method in AssembledChronology; expected @Override
    public DateTimeZone getZone() {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeZone getZone() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:306: warning: [MissingOverride] withUTC implements method in BaseChronology; expected @Override
    public Chronology withUTC() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology withUTC() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:316: warning: [MissingOverride] withZone implements method in BaseChronology; expected @Override
    public Chronology withZone(DateTimeZone zone) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology withZone(DateTimeZone zone) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:320: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (zone == getZone()) {
                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(zone, getZone())) {' or 'if (zone.equals(getZone())) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:326: warning: [MissingOverride] getDateTimeMillis overrides method in AssembledChronology; expected @Override
    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:350: warning: [MissingOverride] getDateTimeMillis overrides method in AssembledChronology; expected @Override
    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:404: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:414: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:426: warning: [MissingOverride] toString implements method in BaseChronology; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:452: warning: [MissingOverride] assemble implements method in AssembledChronology; expected @Override
    protected void assemble(Fields fields) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected void assemble(Fields fields) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:627: warning: [MissingOverride] isLenient implements method in DateTimeField; expected @Override
        public boolean isLenient() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isLenient() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:631: warning: [MissingOverride] get implements method in BaseDateTimeField; expected @Override
        public int get(long instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int get(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:639: warning: [MissingOverride] getAsText overrides method in BaseDateTimeField; expected @Override
        public String getAsText(long instant, Locale locale) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getAsText(long instant, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:647: warning: [MissingOverride] getAsText overrides method in BaseDateTimeField; expected @Override
        public String getAsText(int fieldValue, Locale locale) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getAsText(int fieldValue, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:651: warning: [MissingOverride] getAsShortText overrides method in BaseDateTimeField; expected @Override
        public String getAsShortText(long instant, Locale locale) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getAsShortText(long instant, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:659: warning: [MissingOverride] getAsShortText overrides method in BaseDateTimeField; expected @Override
        public String getAsShortText(int fieldValue, Locale locale) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getAsShortText(int fieldValue, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:663: warning: [MissingOverride] add overrides method in BaseDateTimeField; expected @Override
        public long add(long instant, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:667: warning: [MissingOverride] add overrides method in BaseDateTimeField; expected @Override
        public long add(long instant, long value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, long value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:671: warning: [MissingOverride] add overrides method in BaseDateTimeField; expected @Override
        public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:689: warning: [MissingOverride] getDifference overrides method in BaseDateTimeField; expected @Override
        public int getDifference(long minuendInstant, long subtrahendInstant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getDifference(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:693: warning: [MissingOverride] getDifferenceAsLong overrides method in BaseDateTimeField; expected @Override
        public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:697: warning: [MissingOverride] set implements method in BaseDateTimeField; expected @Override
        public long set(long instant, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long set(long instant, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:728: warning: [MissingOverride] set overrides method in BaseDateTimeField; expected @Override
        public long set(long instant, String text, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long set(long instant, String text, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:751: warning: [MissingOverride] getDurationField implements method in BaseDateTimeField; expected @Override
        public DurationField getDurationField() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DurationField getDurationField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:755: warning: [MissingOverride] getRangeDurationField implements method in BaseDateTimeField; expected @Override
        public DurationField getRangeDurationField() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DurationField getRangeDurationField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:759: warning: [MissingOverride] isLeap overrides method in BaseDateTimeField; expected @Override
        public boolean isLeap(long instant) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isLeap(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:767: warning: [MissingOverride] getLeapAmount overrides method in BaseDateTimeField; expected @Override
        public int getLeapAmount(long instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getLeapAmount(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:775: warning: [MissingOverride] getLeapDurationField overrides method in BaseDateTimeField; expected @Override
        public DurationField getLeapDurationField() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DurationField getLeapDurationField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:780: warning: [MissingOverride] getMinimumValue implements method in BaseDateTimeField; expected @Override
        public int getMinimumValue() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMinimumValue() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:786: warning: [MissingOverride] getMinimumValue overrides method in BaseDateTimeField; expected @Override
        public int getMinimumValue(ReadablePartial partial) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMinimumValue(ReadablePartial partial) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:790: warning: [MissingOverride] getMinimumValue overrides method in BaseDateTimeField; expected @Override
        public int getMinimumValue(ReadablePartial partial, int[] values) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMinimumValue(ReadablePartial partial, int[] values) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:794: warning: [MissingOverride] getMinimumValue overrides method in BaseDateTimeField; expected @Override
        public int getMinimumValue(long instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMinimumValue(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:811: warning: [MissingOverride] getMaximumValue implements method in BaseDateTimeField; expected @Override
        public int getMaximumValue() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumValue() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:817: warning: [MissingOverride] getMaximumValue overrides method in BaseDateTimeField; expected @Override
        public int getMaximumValue(long instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumValue(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:834: warning: [MissingOverride] getMaximumValue overrides method in BaseDateTimeField; expected @Override
        public int getMaximumValue(ReadablePartial partial) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumValue(ReadablePartial partial) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:839: warning: [MissingOverride] getMaximumValue overrides method in BaseDateTimeField; expected @Override
        public int getMaximumValue(ReadablePartial partial, int[] values) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumValue(ReadablePartial partial, int[] values) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:851: warning: [MissingOverride] roundFloor implements method in BaseDateTimeField; expected @Override
        public long roundFloor(long instant) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long roundFloor(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:866: warning: [MissingOverride] roundCeiling overrides method in BaseDateTimeField; expected @Override
        public long roundCeiling(long instant) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long roundCeiling(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:881: warning: [MissingOverride] getMaximumTextLength overrides method in BaseDateTimeField; expected @Override
        public int getMaximumTextLength(Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumTextLength(Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:886: warning: [MissingOverride] getMaximumShortTextLength overrides method in BaseDateTimeField; expected @Override
        public int getMaximumShortTextLength(Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumShortTextLength(Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:952: warning: [MissingOverride] add overrides method in CutoverField; expected @Override
        public long add(long instant, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:973: warning: [MissingOverride] add overrides method in CutoverField; expected @Override
        public long add(long instant, long value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, long value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:994: warning: [MissingOverride] getDifference overrides method in CutoverField; expected @Override
        public int getDifference(long minuendInstant, long subtrahendInstant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getDifference(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:1014: warning: [MissingOverride] getDifferenceAsLong overrides method in CutoverField; expected @Override
        public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:1044: warning: [MissingOverride] getMinimumValue overrides method in CutoverField; expected @Override
        public int getMinimumValue(long instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMinimumValue(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:1052: warning: [MissingOverride] getMaximumValue overrides method in CutoverField; expected @Override
        public int getMaximumValue(long instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumValue(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:1075: warning: [MissingOverride] add overrides method in DecoratedDurationField; expected @Override
        public long add(long instant, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:1079: warning: [MissingOverride] add overrides method in DecoratedDurationField; expected @Override
        public long add(long instant, long value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, long value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:1083: warning: [MissingOverride] getDifference overrides method in BaseDurationField; expected @Override
        public int getDifference(long minuendInstant, long subtrahendInstant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getDifference(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-18/src/main/java/org/joda/time/chrono/GJChronology.java:1087: warning: [MissingOverride] getDifferenceAsLong overrides method in DecoratedDurationField; expected @Override
        public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {'?
51 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-19

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-19/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-19/src/main/java/org/joda/time/DateTimeZone.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-19/src/main/java/org/joda/time/DateTimeZone.java:450: warning: [ClassNewInstance] Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()
                    provider = (Provider) Class.forName(providerClass).newInstance();
                                                                                  ^
    (see http://errorprone.info/bugpattern/ClassNewInstance)
  Did you mean 'provider = (Provider) Class.forName(providerClass).getDeclaredConstructor().newInstance();'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-19/src/main/java/org/joda/time/DateTimeZone.java:534: warning: [ClassNewInstance] Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()
                    nameProvider = (NameProvider) Class.forName(providerClass).newInstance();
                                                                                          ^
    (see http://errorprone.info/bugpattern/ClassNewInstance)
  Did you mean 'nameProvider = (NameProvider) Class.forName(providerClass).getDeclaredConstructor().newInstance();'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-19/src/main/java/org/joda/time/DateTimeZone.java:605: warning: [MissingOverride] getZone implements method in BaseChronology; expected @Override
            public DateTimeZone getZone() {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeZone getZone() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-19/src/main/java/org/joda/time/DateTimeZone.java:608: warning: [MissingOverride] withUTC implements method in BaseChronology; expected @Override
            public Chronology withUTC() {
                              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology withUTC() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-19/src/main/java/org/joda/time/DateTimeZone.java:611: warning: [MissingOverride] withZone implements method in BaseChronology; expected @Override
            public Chronology withZone(DateTimeZone zone) {
                              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology withZone(DateTimeZone zone) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-19/src/main/java/org/joda/time/DateTimeZone.java:614: warning: [MissingOverride] toString implements method in BaseChronology; expected @Override
            public String toString() {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-19/src/main/java/org/joda/time/DateTimeZone.java:1031: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (newZone == this) {
                    ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(newZone, this)) {' or 'if (newZone.equals(this)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-19/src/main/java/org/joda/time/DateTimeZone.java:1219: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public abstract boolean equals(Object object);
                            ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public abstract boolean equals(Object object);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-19/src/main/java/org/joda/time/DateTimeZone.java:1226: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-19/src/main/java/org/joda/time/DateTimeZone.java:1234: warning: [MissingOverride] toString overrides method in Object; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
10 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-2

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/Partial.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/Partial.java:310: warning: [MissingOverride] size implements method in ReadablePartial; expected @Override
    public int size() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int size() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/Partial.java:322: warning: [MissingOverride] getChronology implements method in ReadablePartial; expected @Override
    public Chronology getChronology() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology getChronology() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/Partial.java:334: warning: [MissingOverride] getField implements method in AbstractPartial; expected @Override
    protected DateTimeField getField(int index, Chronology chrono) {
                            ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected DateTimeField getField(int index, Chronology chrono) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/Partial.java:345: warning: [MissingOverride] getFieldType overrides method in AbstractPartial; expected @Override
    public DateTimeFieldType getFieldType(int index) {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeFieldType getFieldType(int index) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/Partial.java:357: warning: [MissingOverride] getFieldTypes overrides method in AbstractPartial; expected @Override
    public DateTimeFieldType[] getFieldTypes() {
                               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeFieldType[] getFieldTypes() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/Partial.java:369: warning: [MissingOverride] getValue implements method in ReadablePartial; expected @Override
    public int getValue(int index) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getValue(int index) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/Partial.java:382: warning: [MissingOverride] getValues overrides method in AbstractPartial; expected @Override
    public int[] getValues() {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int[] getValues() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/Partial.java:739: warning: [MissingOverride] toString implements method in ReadablePartial; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/Partial.java:845: warning: [MissingOverride] getField implements method in AbstractPartialFieldProperty; expected @Override
        public DateTimeField getField() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeField getField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/Partial.java:854: warning: [MissingOverride] getReadablePartial implements method in AbstractPartialFieldProperty; expected @Override
        protected ReadablePartial getReadablePartial() {
                                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected ReadablePartial getReadablePartial() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/Partial.java:872: warning: [MissingOverride] get implements method in AbstractPartialFieldProperty; expected @Override
        public int get() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int get() {'?
11 warnings

************************

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:78: warning: [MissingOverride] getType implements method in DurationField; expected @Override
    public final DurationFieldType getType() {
                                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final DurationFieldType getType() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:82: warning: [MissingOverride] getName implements method in DurationField; expected @Override
    public String getName() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getName() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:91: warning: [MissingOverride] isSupported implements method in DurationField; expected @Override
    public boolean isSupported() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isSupported() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:100: warning: [MissingOverride] isPrecise implements method in DurationField; expected @Override
    public boolean isPrecise() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isPrecise() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:109: warning: [MissingOverride] getValue implements method in DurationField; expected @Override
    public int getValue(long duration) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getValue(long duration) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:118: warning: [MissingOverride] getValueAsLong implements method in DurationField; expected @Override
    public long getValueAsLong(long duration) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getValueAsLong(long duration) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:127: warning: [MissingOverride] getValue implements method in DurationField; expected @Override
    public int getValue(long duration, long instant) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getValue(long duration, long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:136: warning: [MissingOverride] getValueAsLong implements method in DurationField; expected @Override
    public long getValueAsLong(long duration, long instant) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getValueAsLong(long duration, long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:145: warning: [MissingOverride] getMillis implements method in DurationField; expected @Override
    public long getMillis(int value) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getMillis(int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:154: warning: [MissingOverride] getMillis implements method in DurationField; expected @Override
    public long getMillis(long value) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getMillis(long value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:163: warning: [MissingOverride] getMillis implements method in DurationField; expected @Override
    public long getMillis(int value, long instant) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getMillis(int value, long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:172: warning: [MissingOverride] getMillis implements method in DurationField; expected @Override
    public long getMillis(long value, long instant) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getMillis(long value, long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:181: warning: [MissingOverride] add implements method in DurationField; expected @Override
    public long add(long instant, int value) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:190: warning: [MissingOverride] add implements method in DurationField; expected @Override
    public long add(long instant, long value) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, long value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:199: warning: [MissingOverride] getDifference implements method in DurationField; expected @Override
    public int getDifference(long minuendInstant, long subtrahendInstant) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getDifference(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:208: warning: [MissingOverride] getDifferenceAsLong implements method in DurationField; expected @Override
    public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:217: warning: [MissingOverride] getUnitMillis implements method in DurationField; expected @Override
    public long getUnitMillis() {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getUnitMillis() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:226: warning: [MissingOverride] compareTo implements method in Comparable; expected @Override
    public int compareTo(DurationField durationField) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(DurationField durationField) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:237: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:255: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-2/src/main/java/org/joda/time/field/UnsupportedDurationField.java:264: warning: [MissingOverride] toString implements method in DurationField; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
21 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-20

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1173: warning: [MissingOverride] estimatePrintedLength implements method in DateTimePrinter; expected @Override
        public int estimatePrintedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimatePrintedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1177: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1183: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1189: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1193: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1197: warning: [MissingOverride] estimateParsedLength implements method in DateTimeParser; expected @Override
        public int estimateParsedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateParsedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1201: warning: [MissingOverride] parseInto implements method in DateTimeParser; expected @Override
        public int parseInto(DateTimeParserBucket bucket, String text, int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto(DateTimeParserBucket bucket, String text, int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1236: warning: [MissingOverride] estimatePrintedLength implements method in DateTimePrinter; expected @Override
        public int estimatePrintedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimatePrintedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1240: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1246: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1252: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1256: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1260: warning: [MissingOverride] estimateParsedLength implements method in DateTimeParser; expected @Override
        public int estimateParsedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateParsedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1264: warning: [MissingOverride] parseInto implements method in DateTimeParser; expected @Override
        public int parseInto(DateTimeParserBucket bucket, String text, int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto(DateTimeParserBucket bucket, String text, int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1287: warning: [MissingOverride] estimateParsedLength implements method in DateTimeParser; expected @Override
        public int estimateParsedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateParsedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1291: warning: [MissingOverride] parseInto implements method in DateTimeParser; expected @Override
        public int parseInto(DateTimeParserBucket bucket, String text, int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto(DateTimeParserBucket bucket, String text, int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1366: warning: [MissingOverride] estimatePrintedLength implements method in DateTimePrinter; expected @Override
        public int estimatePrintedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimatePrintedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1370: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1381: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1392: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1404: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1429: warning: [MissingOverride] estimatePrintedLength implements method in DateTimePrinter; expected @Override
        public int estimatePrintedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimatePrintedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1433: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1444: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1455: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1467: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1487: warning: [MissingOverride] parseInto overrides method in NumberFormatter; expected @Override
        public int parseInto(DateTimeParserBucket bucket, String text, int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto(DateTimeParserBucket bucket, String text, int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1529: warning: [MissingOverride] estimateParsedLength implements method in DateTimeParser; expected @Override
        public int estimateParsedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateParsedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1533: warning: [MissingOverride] parseInto implements method in DateTimeParser; expected @Override
        public int parseInto(DateTimeParserBucket bucket, String text, int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto(DateTimeParserBucket bucket, String text, int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1632: warning: [MissingOverride] estimatePrintedLength implements method in DateTimePrinter; expected @Override
        public int estimatePrintedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimatePrintedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1636: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1648: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1672: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1682: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1721: warning: [MissingOverride] estimatePrintedLength implements method in DateTimePrinter; expected @Override
        public int estimatePrintedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimatePrintedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1725: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1735: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1745: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1753: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1783: warning: [MissingOverride] estimateParsedLength implements method in DateTimeParser; expected @Override
        public int estimateParsedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateParsedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1788: warning: [MissingOverride] parseInto implements method in DateTimeParser; expected @Override
        public int parseInto(DateTimeParserBucket bucket, String text, int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override @SuppressWarnings("unchecked")'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1867: warning: [MissingOverride] estimatePrintedLength implements method in DateTimePrinter; expected @Override
        public int estimatePrintedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimatePrintedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1871: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1881: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1887: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:1898: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2025: warning: [MissingOverride] estimateParsedLength implements method in DateTimeParser; expected @Override
        public int estimateParsedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateParsedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2029: warning: [MissingOverride] parseInto implements method in DateTimeParser; expected @Override
        public int parseInto(DateTimeParserBucket bucket, String text, int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto(DateTimeParserBucket bucket, String text, int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2098: warning: [MissingOverride] estimatePrintedLength implements method in DateTimePrinter; expected @Override
        public int estimatePrintedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimatePrintedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2099: warning: [OperatorPrecedence] Use grouping parenthesis to make the operator precedence explicit
            int est = 1 + iMinFields << 1;
                        ^
    (see http://errorprone.info/bugpattern/OperatorPrecedence)
  Did you mean 'int est = (1 + iMinFields) << 1;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2109: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2168: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2227: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2231: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2235: warning: [MissingOverride] estimateParsedLength implements method in DateTimeParser; expected @Override
        public int estimateParsedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateParsedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2239: warning: [MissingOverride] parseInto implements method in DateTimeParser; expected @Override
        public int parseInto(DateTimeParserBucket bucket, String text, int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto(DateTimeParserBucket bucket, String text, int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2444: warning: [MissingOverride] estimatePrintedLength implements method in DateTimePrinter; expected @Override
        public int estimatePrintedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimatePrintedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2448: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2454: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2473: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2477: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2481: warning: [MissingOverride] estimateParsedLength implements method in DateTimeParser; expected @Override
        public int estimateParsedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateParsedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2485: warning: [MissingOverride] parseInto implements method in DateTimeParser; expected @Override
        public int parseInto(DateTimeParserBucket bucket, String text, int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto(DateTimeParserBucket bucket, String text, int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2512: warning: [MissingOverride] estimatePrintedLength implements method in DateTimePrinter; expected @Override
        public int estimatePrintedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimatePrintedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2516: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2522: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2528: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2532: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2536: warning: [MissingOverride] estimateParsedLength implements method in DateTimeParser; expected @Override
        public int estimateParsedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateParsedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2540: warning: [MissingOverride] parseInto implements method in DateTimeParser; expected @Override
        public int parseInto(DateTimeParserBucket bucket, String text, int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto(DateTimeParserBucket bucket, String text, int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2601: warning: [MissingOverride] estimatePrintedLength implements method in DateTimePrinter; expected @Override
        public int estimatePrintedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimatePrintedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2605: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2624: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2643: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePartial partial, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2660: warning: [MissingOverride] printTo implements method in DateTimePrinter; expected @Override
        public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePartial partial, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2677: warning: [MissingOverride] estimateParsedLength implements method in DateTimeParser; expected @Override
        public int estimateParsedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateParsedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2681: warning: [MissingOverride] parseInto implements method in DateTimeParser; expected @Override
        public int parseInto(DateTimeParserBucket bucket, String text, int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto(DateTimeParserBucket bucket, String text, int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2761: warning: [MissingOverride] estimateParsedLength implements method in DateTimeParser; expected @Override
        public int estimateParsedLength() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int estimateParsedLength() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-20/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java:2765: warning: [MissingOverride] parseInto implements method in DateTimeParser; expected @Override
        public int parseInto(DateTimeParserBucket bucket, String text, int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto(DateTimeParserBucket bucket, String text, int position) {'?
79 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-21

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-21/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-21/src/main/java/org/joda/time/tz/DefaultNameProvider.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-21/src/main/java/org/joda/time/tz/DefaultNameProvider.java:42: warning: [MissingOverride] getShortName implements method in NameProvider; expected @Override
    public String getShortName(Locale locale, String id, String nameKey) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getShortName(Locale locale, String id, String nameKey) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-21/src/main/java/org/joda/time/tz/DefaultNameProvider.java:47: warning: [MissingOverride] getName implements method in NameProvider; expected @Override
    public String getName(Locale locale, String id, String nameKey) {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getName(Locale locale, String id, String nameKey) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-22

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-22/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-22/src/main/java/org/joda/time/base/BasePeriod.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-22/src/main/java/org/joda/time/base/BasePeriod.java:302: warning: [MissingOverride] getPeriodType implements method in ReadablePeriod; expected @Override
    public PeriodType getPeriodType() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public PeriodType getPeriodType() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-22/src/main/java/org/joda/time/base/BasePeriod.java:312: warning: [MissingOverride] size implements method in ReadablePeriod; expected @Override
    public int size() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int size() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-22/src/main/java/org/joda/time/base/BasePeriod.java:323: warning: [MissingOverride] getFieldType implements method in ReadablePeriod; expected @Override
    public DurationFieldType getFieldType(int index) {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DurationFieldType getFieldType(int index) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-22/src/main/java/org/joda/time/base/BasePeriod.java:334: warning: [MissingOverride] getValue implements method in ReadablePeriod; expected @Override
    public int getValue(int index) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getValue(int index) {'?
4 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-23

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-23/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-23/src/main/java/org/joda/time/DateTimeZone.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-23/src/main/java/org/joda/time/DateTimeZone.java:450: warning: [ClassNewInstance] Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()
                    provider = (Provider) Class.forName(providerClass).newInstance();
                                                                                  ^
    (see http://errorprone.info/bugpattern/ClassNewInstance)
  Did you mean 'provider = (Provider) Class.forName(providerClass).getDeclaredConstructor().newInstance();'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-23/src/main/java/org/joda/time/DateTimeZone.java:534: warning: [ClassNewInstance] Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()
                    nameProvider = (NameProvider) Class.forName(providerClass).newInstance();
                                                                                          ^
    (see http://errorprone.info/bugpattern/ClassNewInstance)
  Did you mean 'nameProvider = (NameProvider) Class.forName(providerClass).getDeclaredConstructor().newInstance();'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-23/src/main/java/org/joda/time/DateTimeZone.java:604: warning: [MissingOverride] getZone implements method in BaseChronology; expected @Override
            public DateTimeZone getZone() {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeZone getZone() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-23/src/main/java/org/joda/time/DateTimeZone.java:607: warning: [MissingOverride] withUTC implements method in BaseChronology; expected @Override
            public Chronology withUTC() {
                              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology withUTC() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-23/src/main/java/org/joda/time/DateTimeZone.java:610: warning: [MissingOverride] withZone implements method in BaseChronology; expected @Override
            public Chronology withZone(DateTimeZone zone) {
                              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology withZone(DateTimeZone zone) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-23/src/main/java/org/joda/time/DateTimeZone.java:613: warning: [MissingOverride] toString implements method in BaseChronology; expected @Override
            public String toString() {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-23/src/main/java/org/joda/time/DateTimeZone.java:1030: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (newZone == this) {
                    ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(newZone, this)) {' or 'if (newZone.equals(this)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-23/src/main/java/org/joda/time/DateTimeZone.java:1218: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public abstract boolean equals(Object object);
                            ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public abstract boolean equals(Object object);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-23/src/main/java/org/joda/time/DateTimeZone.java:1225: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-23/src/main/java/org/joda/time/DateTimeZone.java:1233: warning: [MissingOverride] toString overrides method in Object; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
10 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-24

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-24/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-24/src/main/java/org/joda/time/format/DateTimeParserBucket.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-24/src/main/java/org/joda/time/format/DateTimeParserBucket.java:163: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        iZone = zone == DateTimeZone.UTC ? null : zone;
                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'iZone = Objects.equals(zone, DateTimeZone.UTC) ? null : zone;' or 'iZone = zone.equals(DateTimeZone.UTC) ? null : zone;'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-24/src/main/java/org/joda/time/format/DateTimeParserBucket.java:481: warning: [MissingOverride] compareTo implements method in Comparable; expected @Override
        public int compareTo(SavedField obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int compareTo(SavedField obj) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-25

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-25/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-25/src/main/java/org/joda/time/DateTimeZone.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-25/src/main/java/org/joda/time/DateTimeZone.java:450: warning: [ClassNewInstance] Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()
                    provider = (Provider) Class.forName(providerClass).newInstance();
                                                                                  ^
    (see http://errorprone.info/bugpattern/ClassNewInstance)
  Did you mean 'provider = (Provider) Class.forName(providerClass).getDeclaredConstructor().newInstance();'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-25/src/main/java/org/joda/time/DateTimeZone.java:534: warning: [ClassNewInstance] Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()
                    nameProvider = (NameProvider) Class.forName(providerClass).newInstance();
                                                                                          ^
    (see http://errorprone.info/bugpattern/ClassNewInstance)
  Did you mean 'nameProvider = (NameProvider) Class.forName(providerClass).getDeclaredConstructor().newInstance();'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-25/src/main/java/org/joda/time/DateTimeZone.java:604: warning: [MissingOverride] getZone implements method in BaseChronology; expected @Override
            public DateTimeZone getZone() {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeZone getZone() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-25/src/main/java/org/joda/time/DateTimeZone.java:607: warning: [MissingOverride] withUTC implements method in BaseChronology; expected @Override
            public Chronology withUTC() {
                              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology withUTC() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-25/src/main/java/org/joda/time/DateTimeZone.java:610: warning: [MissingOverride] withZone implements method in BaseChronology; expected @Override
            public Chronology withZone(DateTimeZone zone) {
                              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology withZone(DateTimeZone zone) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-25/src/main/java/org/joda/time/DateTimeZone.java:613: warning: [MissingOverride] toString implements method in BaseChronology; expected @Override
            public String toString() {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-25/src/main/java/org/joda/time/DateTimeZone.java:1021: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (newZone == this) {
                    ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(newZone, this)) {' or 'if (newZone.equals(this)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-25/src/main/java/org/joda/time/DateTimeZone.java:1192: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public abstract boolean equals(Object object);
                            ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public abstract boolean equals(Object object);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-25/src/main/java/org/joda/time/DateTimeZone.java:1199: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-25/src/main/java/org/joda/time/DateTimeZone.java:1207: warning: [MissingOverride] toString overrides method in Object; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
10 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-26

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/build/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:85: warning: [MissingOverride] getZone overrides method in AssembledChronology; expected @Override
    public DateTimeZone getZone() {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeZone getZone() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:89: warning: [MissingOverride] withUTC implements method in BaseChronology; expected @Override
    public Chronology withUTC() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology withUTC() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:93: warning: [MissingOverride] withZone implements method in BaseChronology; expected @Override
    public Chronology withZone(DateTimeZone zone) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology withZone(DateTimeZone zone) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:100: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (zone == DateTimeZone.UTC) {
                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(zone, DateTimeZone.UTC)) {' or 'if (zone.equals(DateTimeZone.UTC)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:106: warning: [MissingOverride] getDateTimeMillis overrides method in AssembledChronology; expected @Override
    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:114: warning: [MissingOverride] getDateTimeMillis overrides method in AssembledChronology; expected @Override
    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:124: warning: [MissingOverride] getDateTimeMillis overrides method in AssembledChronology; expected @Override
    public long getDateTimeMillis(long instant,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getDateTimeMillis(long instant,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:150: warning: [MissingOverride] assemble implements method in AssembledChronology; expected @Override
    protected void assemble(Fields fields) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected void assemble(Fields fields) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:236: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:255: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:264: warning: [MissingOverride] toString implements method in BaseChronology; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:293: warning: [MissingOverride] isPrecise implements method in DurationField; expected @Override
        public boolean isPrecise() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isPrecise() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:297: warning: [MissingOverride] getUnitMillis implements method in DurationField; expected @Override
        public long getUnitMillis() {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getUnitMillis() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:301: warning: [MissingOverride] getValue overrides method in BaseDurationField; expected @Override
        public int getValue(long duration, long instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getValue(long duration, long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:305: warning: [MissingOverride] getValueAsLong implements method in DurationField; expected @Override
        public long getValueAsLong(long duration, long instant) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getValueAsLong(long duration, long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:309: warning: [MissingOverride] getMillis implements method in DurationField; expected @Override
        public long getMillis(int value, long instant) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getMillis(int value, long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:313: warning: [MissingOverride] getMillis implements method in DurationField; expected @Override
        public long getMillis(long value, long instant) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getMillis(long value, long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:317: warning: [MissingOverride] add implements method in DurationField; expected @Override
        public long add(long instant, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:323: warning: [MissingOverride] add implements method in DurationField; expected @Override
        public long add(long instant, long value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, long value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:329: warning: [MissingOverride] getDifference overrides method in BaseDurationField; expected @Override
        public int getDifference(long minuendInstant, long subtrahendInstant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getDifference(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:336: warning: [MissingOverride] getDifferenceAsLong implements method in DurationField; expected @Override
        public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:401: warning: [MissingOverride] isLenient implements method in DateTimeField; expected @Override
        public boolean isLenient() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isLenient() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:405: warning: [MissingOverride] get implements method in BaseDateTimeField; expected @Override
        public int get(long instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int get(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:410: warning: [MissingOverride] getAsText overrides method in BaseDateTimeField; expected @Override
        public String getAsText(long instant, Locale locale) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getAsText(long instant, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:415: warning: [MissingOverride] getAsShortText overrides method in BaseDateTimeField; expected @Override
        public String getAsShortText(long instant, Locale locale) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getAsShortText(long instant, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:420: warning: [MissingOverride] getAsText overrides method in BaseDateTimeField; expected @Override
        public String getAsText(int fieldValue, Locale locale) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getAsText(int fieldValue, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:424: warning: [MissingOverride] getAsShortText overrides method in BaseDateTimeField; expected @Override
        public String getAsShortText(int fieldValue, Locale locale) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getAsShortText(int fieldValue, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:428: warning: [MissingOverride] add overrides method in BaseDateTimeField; expected @Override
        public long add(long instant, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:440: warning: [MissingOverride] add overrides method in BaseDateTimeField; expected @Override
        public long add(long instant, long value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, long value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:452: warning: [MissingOverride] addWrapField overrides method in BaseDateTimeField; expected @Override
        public long addWrapField(long instant, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long addWrapField(long instant, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:464: warning: [MissingOverride] set implements method in BaseDateTimeField; expected @Override
        public long set(long instant, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long set(long instant, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:469: warning: [BoxedPrimitiveConstructor] valueOf or autoboxing provides better time and space performance
                throw new IllegalFieldValueException(iField.getType(), new Integer(value),
                                                                       ^
    (see http://errorprone.info/bugpattern/BoxedPrimitiveConstructor)
  Did you mean 'throw new IllegalFieldValueException(iField.getType(), value,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:477: warning: [MissingOverride] set overrides method in BaseDateTimeField; expected @Override
        public long set(long instant, String text, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long set(long instant, String text, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:484: warning: [MissingOverride] getDifference overrides method in BaseDateTimeField; expected @Override
        public int getDifference(long minuendInstant, long subtrahendInstant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getDifference(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:491: warning: [MissingOverride] getDifferenceAsLong overrides method in BaseDateTimeField; expected @Override
        public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:498: warning: [MissingOverride] getDurationField implements method in BaseDateTimeField; expected @Override
        public final DurationField getDurationField() {
                                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final DurationField getDurationField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:502: warning: [MissingOverride] getRangeDurationField implements method in BaseDateTimeField; expected @Override
        public final DurationField getRangeDurationField() {
                                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final DurationField getRangeDurationField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:506: warning: [MissingOverride] isLeap overrides method in BaseDateTimeField; expected @Override
        public boolean isLeap(long instant) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isLeap(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:511: warning: [MissingOverride] getLeapAmount overrides method in BaseDateTimeField; expected @Override
        public int getLeapAmount(long instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getLeapAmount(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:516: warning: [MissingOverride] getLeapDurationField overrides method in BaseDateTimeField; expected @Override
        public final DurationField getLeapDurationField() {
                                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public final DurationField getLeapDurationField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:520: warning: [MissingOverride] roundFloor implements method in BaseDateTimeField; expected @Override
        public long roundFloor(long instant) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long roundFloor(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:532: warning: [MissingOverride] roundCeiling overrides method in BaseDateTimeField; expected @Override
        public long roundCeiling(long instant) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long roundCeiling(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:544: warning: [MissingOverride] remainder overrides method in BaseDateTimeField; expected @Override
        public long remainder(long instant) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long remainder(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:549: warning: [MissingOverride] getMinimumValue implements method in BaseDateTimeField; expected @Override
        public int getMinimumValue() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMinimumValue() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:553: warning: [MissingOverride] getMinimumValue overrides method in BaseDateTimeField; expected @Override
        public int getMinimumValue(long instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMinimumValue(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:558: warning: [MissingOverride] getMinimumValue overrides method in BaseDateTimeField; expected @Override
        public int getMinimumValue(ReadablePartial instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMinimumValue(ReadablePartial instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:562: warning: [MissingOverride] getMinimumValue overrides method in BaseDateTimeField; expected @Override
        public int getMinimumValue(ReadablePartial instant, int[] values) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMinimumValue(ReadablePartial instant, int[] values) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:566: warning: [MissingOverride] getMaximumValue implements method in BaseDateTimeField; expected @Override
        public int getMaximumValue() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumValue() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:570: warning: [MissingOverride] getMaximumValue overrides method in BaseDateTimeField; expected @Override
        public int getMaximumValue(long instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumValue(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:575: warning: [MissingOverride] getMaximumValue overrides method in BaseDateTimeField; expected @Override
        public int getMaximumValue(ReadablePartial instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumValue(ReadablePartial instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:579: warning: [MissingOverride] getMaximumValue overrides method in BaseDateTimeField; expected @Override
        public int getMaximumValue(ReadablePartial instant, int[] values) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumValue(ReadablePartial instant, int[] values) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:583: warning: [MissingOverride] getMaximumTextLength overrides method in BaseDateTimeField; expected @Override
        public int getMaximumTextLength(Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumTextLength(Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-26/src/main/java/org/joda/time/chrono/ZonedChronology.java:587: warning: [MissingOverride] getMaximumShortTextLength overrides method in BaseDateTimeField; expected @Override
        public int getMaximumShortTextLength(Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumShortTextLength(Locale locale) {'?
53 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-27

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/build/classes /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:861: warning: [MissingOverride] calculatePrintedLength implements method in PeriodFieldAffix; expected @Override
        public int calculatePrintedLength(int value) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int calculatePrintedLength(int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:865: warning: [MissingOverride] printTo implements method in PeriodFieldAffix; expected @Override
        public void printTo(StringBuffer buf, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:869: warning: [MissingOverride] printTo implements method in PeriodFieldAffix; expected @Override
        public void printTo(Writer out, int value) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, int value) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:873: warning: [MissingOverride] parse implements method in PeriodFieldAffix; expected @Override
        public int parse(String periodStr, int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parse(String periodStr, int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:882: warning: [MissingOverride] scan implements method in PeriodFieldAffix; expected @Override
        public int scan(String periodStr, final int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int scan(String periodStr, final int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:919: warning: [MissingOverride] calculatePrintedLength implements method in PeriodFieldAffix; expected @Override
        public int calculatePrintedLength(int value) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int calculatePrintedLength(int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:923: warning: [MissingOverride] printTo implements method in PeriodFieldAffix; expected @Override
        public void printTo(StringBuffer buf, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:927: warning: [MissingOverride] printTo implements method in PeriodFieldAffix; expected @Override
        public void printTo(Writer out, int value) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, int value) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:931: warning: [MissingOverride] parse implements method in PeriodFieldAffix; expected @Override
        public int parse(String periodStr, int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parse(String periodStr, int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:954: warning: [MissingOverride] scan implements method in PeriodFieldAffix; expected @Override
        public int scan(String periodStr, final int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int scan(String periodStr, final int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:994: warning: [MissingOverride] calculatePrintedLength implements method in PeriodFieldAffix; expected @Override
        public int calculatePrintedLength(int value) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int calculatePrintedLength(int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:999: warning: [MissingOverride] printTo implements method in PeriodFieldAffix; expected @Override
        public void printTo(StringBuffer buf, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1004: warning: [MissingOverride] printTo implements method in PeriodFieldAffix; expected @Override
        public void printTo(Writer out, int value) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, int value) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1009: warning: [MissingOverride] parse implements method in PeriodFieldAffix; expected @Override
        public int parse(String periodStr, int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parse(String periodStr, int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1017: warning: [MissingOverride] scan implements method in PeriodFieldAffix; expected @Override
        public int scan(String periodStr, final int position) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int scan(String periodStr, final int position) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1076: warning: [MissingOverride] countFieldsToPrint implements method in PeriodPrinter; expected @Override
        public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1086: warning: [MissingOverride] calculatePrintedLength implements method in PeriodPrinter; expected @Override
        public int calculatePrintedLength(ReadablePeriod period, Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int calculatePrintedLength(ReadablePeriod period, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1118: warning: [MissingOverride] printTo implements method in PeriodPrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1149: warning: [MissingOverride] printTo implements method in PeriodPrinter; expected @Override
        public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1180: warning: [MissingOverride] parseInto implements method in PeriodParser; expected @Override
        public int parseInto(
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1546: warning: [MissingOverride] countFieldsToPrint implements method in PeriodPrinter; expected @Override
        public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1550: warning: [MissingOverride] calculatePrintedLength implements method in PeriodPrinter; expected @Override
        public int calculatePrintedLength(ReadablePeriod period, Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int calculatePrintedLength(ReadablePeriod period, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1554: warning: [MissingOverride] printTo implements method in PeriodPrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1558: warning: [MissingOverride] printTo implements method in PeriodPrinter; expected @Override
        public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1562: warning: [MissingOverride] parseInto implements method in PeriodParser; expected @Override
        public int parseInto(
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1622: warning: [MissingOverride] countFieldsToPrint implements method in PeriodPrinter; expected @Override
        public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1630: warning: [MissingOverride] calculatePrintedLength implements method in PeriodPrinter; expected @Override
        public int calculatePrintedLength(ReadablePeriod period, Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int calculatePrintedLength(ReadablePeriod period, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1655: warning: [MissingOverride] printTo implements method in PeriodPrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1677: warning: [MissingOverride] printTo implements method in PeriodPrinter; expected @Override
        public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1699: warning: [MissingOverride] parseInto implements method in PeriodParser; expected @Override
        public int parseInto(
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1785: warning: [MissingOverride] countFieldsToPrint implements method in PeriodPrinter; expected @Override
        public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1794: warning: [MissingOverride] calculatePrintedLength implements method in PeriodPrinter; expected @Override
        public int calculatePrintedLength(ReadablePeriod period, Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int calculatePrintedLength(ReadablePeriod period, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1803: warning: [MissingOverride] printTo implements method in PeriodPrinter; expected @Override
        public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1811: warning: [MissingOverride] printTo implements method in PeriodPrinter; expected @Override
        public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java:1819: warning: [MissingOverride] parseInto implements method in PeriodParser; expected @Override
        public int parseInto(
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int parseInto('?
35 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-3

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:453: warning: [MissingOverride] setMillis overrides method in BaseDateTime; expected @Override
    public void setMillis(long instant) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setMillis(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:484: warning: [MissingOverride] setMillis implements method in ReadWritableInstant; expected @Override
    public void setMillis(ReadableInstant instant) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setMillis(ReadableInstant instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:496: warning: [MissingOverride] add implements method in ReadWritableInstant; expected @Override
    public void add(long duration) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void add(long duration) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:508: warning: [MissingOverride] add implements method in ReadWritableInstant; expected @Override
    public void add(ReadableDuration duration) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void add(ReadableDuration duration) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:521: warning: [MissingOverride] add implements method in ReadWritableInstant; expected @Override
    public void add(ReadableDuration duration, int scalar) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void add(ReadableDuration duration, int scalar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:535: warning: [MissingOverride] add implements method in ReadWritableInstant; expected @Override
    public void add(ReadablePeriod period) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void add(ReadablePeriod period) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:548: warning: [MissingOverride] add implements method in ReadWritableInstant; expected @Override
    public void add(ReadablePeriod period, int scalar) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void add(ReadablePeriod period, int scalar) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:562: warning: [MissingOverride] setChronology overrides method in BaseDateTime; expected @Override
    public void setChronology(Chronology chronology) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setChronology(Chronology chronology) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:581: warning: [MissingOverride] setZone implements method in ReadWritableInstant; expected @Override
    public void setZone(DateTimeZone newZone) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setZone(DateTimeZone newZone) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:584: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (chrono.getZone() != newZone) {
                             ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (!Objects.equals(chrono.getZone(), newZone)) {' or 'if (!chrono.getZone().equals(newZone)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:600: warning: [MissingOverride] setZoneRetainFields implements method in ReadWritableInstant; expected @Override
    public void setZoneRetainFields(DateTimeZone newZone) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setZoneRetainFields(DateTimeZone newZone) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:603: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (newZone == originalZone) {
                    ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(newZone, originalZone)) {' or 'if (newZone.equals(originalZone)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:620: warning: [MissingOverride] set implements method in ReadWritableInstant; expected @Override
    public void set(DateTimeFieldType type, int value) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void set(DateTimeFieldType type, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:635: warning: [MissingOverride] add implements method in ReadWritableInstant; expected @Override
    public void add(DurationFieldType type, int amount) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void add(DurationFieldType type, int amount) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:649: warning: [MissingOverride] setYear implements method in ReadWritableDateTime; expected @Override
    public void setYear(final int year) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setYear(final int year) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:659: warning: [MissingOverride] addYears implements method in ReadWritableDateTime; expected @Override
    public void addYears(final int years) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void addYears(final int years) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:670: warning: [MissingOverride] setWeekyear implements method in ReadWritableDateTime; expected @Override
    public void setWeekyear(final int weekyear) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setWeekyear(final int weekyear) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:680: warning: [MissingOverride] addWeekyears implements method in ReadWritableDateTime; expected @Override
    public void addWeekyears(final int weekyears) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void addWeekyears(final int weekyears) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:691: warning: [MissingOverride] setMonthOfYear implements method in ReadWritableDateTime; expected @Override
    public void setMonthOfYear(final int monthOfYear) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setMonthOfYear(final int monthOfYear) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:701: warning: [MissingOverride] addMonths implements method in ReadWritableDateTime; expected @Override
    public void addMonths(final int months) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void addMonths(final int months) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:712: warning: [MissingOverride] setWeekOfWeekyear implements method in ReadWritableDateTime; expected @Override
    public void setWeekOfWeekyear(final int weekOfWeekyear) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setWeekOfWeekyear(final int weekOfWeekyear) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:722: warning: [MissingOverride] addWeeks implements method in ReadWritableDateTime; expected @Override
    public void addWeeks(final int weeks) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void addWeeks(final int weeks) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:733: warning: [MissingOverride] setDayOfYear implements method in ReadWritableDateTime; expected @Override
    public void setDayOfYear(final int dayOfYear) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setDayOfYear(final int dayOfYear) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:743: warning: [MissingOverride] setDayOfMonth implements method in ReadWritableDateTime; expected @Override
    public void setDayOfMonth(final int dayOfMonth) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setDayOfMonth(final int dayOfMonth) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:753: warning: [MissingOverride] setDayOfWeek implements method in ReadWritableDateTime; expected @Override
    public void setDayOfWeek(final int dayOfWeek) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setDayOfWeek(final int dayOfWeek) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:763: warning: [MissingOverride] addDays implements method in ReadWritableDateTime; expected @Override
    public void addDays(final int days) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void addDays(final int days) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:774: warning: [MissingOverride] setHourOfDay implements method in ReadWritableDateTime; expected @Override
    public void setHourOfDay(final int hourOfDay) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setHourOfDay(final int hourOfDay) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:784: warning: [MissingOverride] addHours implements method in ReadWritableDateTime; expected @Override
    public void addHours(final int hours) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void addHours(final int hours) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:795: warning: [MissingOverride] setMinuteOfDay implements method in ReadWritableDateTime; expected @Override
    public void setMinuteOfDay(final int minuteOfDay) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setMinuteOfDay(final int minuteOfDay) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:805: warning: [MissingOverride] setMinuteOfHour implements method in ReadWritableDateTime; expected @Override
    public void setMinuteOfHour(final int minuteOfHour) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setMinuteOfHour(final int minuteOfHour) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:815: warning: [MissingOverride] addMinutes implements method in ReadWritableDateTime; expected @Override
    public void addMinutes(final int minutes) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void addMinutes(final int minutes) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:826: warning: [MissingOverride] setSecondOfDay implements method in ReadWritableDateTime; expected @Override
    public void setSecondOfDay(final int secondOfDay) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setSecondOfDay(final int secondOfDay) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:836: warning: [MissingOverride] setSecondOfMinute implements method in ReadWritableDateTime; expected @Override
    public void setSecondOfMinute(final int secondOfMinute) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setSecondOfMinute(final int secondOfMinute) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:846: warning: [MissingOverride] addSeconds implements method in ReadWritableDateTime; expected @Override
    public void addSeconds(final int seconds) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void addSeconds(final int seconds) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:857: warning: [MissingOverride] setMillisOfDay implements method in ReadWritableDateTime; expected @Override
    public void setMillisOfDay(final int millisOfDay) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setMillisOfDay(final int millisOfDay) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:867: warning: [MissingOverride] setMillisOfSecond implements method in ReadWritableDateTime; expected @Override
    public void setMillisOfSecond(final int millisOfSecond) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setMillisOfSecond(final int millisOfSecond) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:879: warning: [MissingOverride] addMillis implements method in ReadWritableDateTime; expected @Override
    public void addMillis(final int millis) {
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void addMillis(final int millis) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:927: warning: [MissingOverride] setDate implements method in ReadWritableDateTime; expected @Override
    public void setDate(
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setDate('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:976: warning: [MissingOverride] setTime implements method in ReadWritableDateTime; expected @Override
    public void setTime(
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setTime('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:998: warning: [MissingOverride] setDateTime implements method in ReadWritableDateTime; expected @Override
    public void setDateTime(
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public void setDateTime('?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:1214: warning: [MissingOverride] clone overrides method in Object; expected @Override
    public Object clone() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Object clone() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:1228: warning: [MissingOverride] toString overrides method in AbstractInstant; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override @ToString'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:1297: warning: [MissingOverride] getField implements method in AbstractReadableInstantFieldProperty; expected @Override
        public DateTimeField getField() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeField getField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:1306: warning: [MissingOverride] getMillis implements method in AbstractReadableInstantFieldProperty; expected @Override
        protected long getMillis() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected long getMillis() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-3/src/main/java/org/joda/time/MutableDateTime.java:1316: warning: [MissingOverride] getChronology overrides method in AbstractReadableInstantFieldProperty; expected @Override
        protected Chronology getChronology() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected Chronology getChronology() {'?
45 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-4

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-4/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-4/src/main/java/org/joda/time/Partial.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-4/src/main/java/org/joda/time/Partial.java:308: warning: [MissingOverride] size implements method in ReadablePartial; expected @Override
    public int size() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int size() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-4/src/main/java/org/joda/time/Partial.java:320: warning: [MissingOverride] getChronology implements method in ReadablePartial; expected @Override
    public Chronology getChronology() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology getChronology() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-4/src/main/java/org/joda/time/Partial.java:332: warning: [MissingOverride] getField implements method in AbstractPartial; expected @Override
    protected DateTimeField getField(int index, Chronology chrono) {
                            ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected DateTimeField getField(int index, Chronology chrono) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-4/src/main/java/org/joda/time/Partial.java:343: warning: [MissingOverride] getFieldType overrides method in AbstractPartial; expected @Override
    public DateTimeFieldType getFieldType(int index) {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeFieldType getFieldType(int index) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-4/src/main/java/org/joda/time/Partial.java:355: warning: [MissingOverride] getFieldTypes overrides method in AbstractPartial; expected @Override
    public DateTimeFieldType[] getFieldTypes() {
                               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeFieldType[] getFieldTypes() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-4/src/main/java/org/joda/time/Partial.java:367: warning: [MissingOverride] getValue implements method in ReadablePartial; expected @Override
    public int getValue(int index) {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getValue(int index) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-4/src/main/java/org/joda/time/Partial.java:380: warning: [MissingOverride] getValues overrides method in AbstractPartial; expected @Override
    public int[] getValues() {
                 ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int[] getValues() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-4/src/main/java/org/joda/time/Partial.java:737: warning: [MissingOverride] toString implements method in ReadablePartial; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-4/src/main/java/org/joda/time/Partial.java:843: warning: [MissingOverride] getField implements method in AbstractPartialFieldProperty; expected @Override
        public DateTimeField getField() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeField getField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-4/src/main/java/org/joda/time/Partial.java:852: warning: [MissingOverride] getReadablePartial implements method in AbstractPartialFieldProperty; expected @Override
        protected ReadablePartial getReadablePartial() {
                                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected ReadablePartial getReadablePartial() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-4/src/main/java/org/joda/time/Partial.java:870: warning: [MissingOverride] get implements method in AbstractPartialFieldProperty; expected @Override
        public int get() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int get() {'?
11 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-5

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-5/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-5/src/main/java/org/joda/time/Period.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-5/src/main/java/org/joda/time/Period.java:726: warning: [MissingOverride] toPeriod overrides method in AbstractPeriod; expected @Override
    public Period toPeriod() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Period toPeriod() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-5/src/main/java/org/joda/time/Period.java:1334: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (this == ZERO || scalar == 1) {
                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (this.equals(ZERO) || scalar == 1) {'?
2 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-6

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:214: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
            if (zone == DateTimeZone.UTC) {
                     ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(zone, DateTimeZone.UTC)) {' or 'if (zone.equals(DateTimeZone.UTC)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:290: warning: [MissingOverride] getZone overrides method in AssembledChronology; expected @Override
    public DateTimeZone getZone() {
                        ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeZone getZone() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:305: warning: [MissingOverride] withUTC implements method in BaseChronology; expected @Override
    public Chronology withUTC() {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology withUTC() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:315: warning: [MissingOverride] withZone implements method in BaseChronology; expected @Override
    public Chronology withZone(DateTimeZone zone) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology withZone(DateTimeZone zone) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:319: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (zone == getZone()) {
                 ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(zone, getZone())) {' or 'if (zone.equals(getZone())) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:325: warning: [MissingOverride] getDateTimeMillis overrides method in AssembledChronology; expected @Override
    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:349: warning: [MissingOverride] getDateTimeMillis overrides method in AssembledChronology; expected @Override
    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:416: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public boolean equals(Object obj) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean equals(Object obj) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:435: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:447: warning: [MissingOverride] toString implements method in BaseChronology; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:473: warning: [MissingOverride] assemble implements method in AssembledChronology; expected @Override
    protected void assemble(Fields fields) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override protected void assemble(Fields fields) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:648: warning: [MissingOverride] isLenient implements method in DateTimeField; expected @Override
        public boolean isLenient() {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isLenient() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:652: warning: [MissingOverride] get implements method in BaseDateTimeField; expected @Override
        public int get(long instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int get(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:660: warning: [MissingOverride] getAsText overrides method in BaseDateTimeField; expected @Override
        public String getAsText(long instant, Locale locale) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getAsText(long instant, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:668: warning: [MissingOverride] getAsText overrides method in BaseDateTimeField; expected @Override
        public String getAsText(int fieldValue, Locale locale) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getAsText(int fieldValue, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:672: warning: [MissingOverride] getAsShortText overrides method in BaseDateTimeField; expected @Override
        public String getAsShortText(long instant, Locale locale) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getAsShortText(long instant, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:680: warning: [MissingOverride] getAsShortText overrides method in BaseDateTimeField; expected @Override
        public String getAsShortText(int fieldValue, Locale locale) {
                      ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String getAsShortText(int fieldValue, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:684: warning: [MissingOverride] add overrides method in BaseDateTimeField; expected @Override
        public long add(long instant, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:688: warning: [MissingOverride] add overrides method in BaseDateTimeField; expected @Override
        public long add(long instant, long value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, long value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:692: warning: [MissingOverride] add overrides method in BaseDateTimeField; expected @Override
        public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
                     ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:710: warning: [MissingOverride] getDifference overrides method in BaseDateTimeField; expected @Override
        public int getDifference(long minuendInstant, long subtrahendInstant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getDifference(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:714: warning: [MissingOverride] getDifferenceAsLong overrides method in BaseDateTimeField; expected @Override
        public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:718: warning: [MissingOverride] set implements method in BaseDateTimeField; expected @Override
        public long set(long instant, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long set(long instant, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:749: warning: [MissingOverride] set overrides method in BaseDateTimeField; expected @Override
        public long set(long instant, String text, Locale locale) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long set(long instant, String text, Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:772: warning: [MissingOverride] getDurationField implements method in BaseDateTimeField; expected @Override
        public DurationField getDurationField() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DurationField getDurationField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:776: warning: [MissingOverride] getRangeDurationField implements method in BaseDateTimeField; expected @Override
        public DurationField getRangeDurationField() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DurationField getRangeDurationField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:780: warning: [MissingOverride] isLeap overrides method in BaseDateTimeField; expected @Override
        public boolean isLeap(long instant) {
                       ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public boolean isLeap(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:788: warning: [MissingOverride] getLeapAmount overrides method in BaseDateTimeField; expected @Override
        public int getLeapAmount(long instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getLeapAmount(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:796: warning: [MissingOverride] getLeapDurationField overrides method in BaseDateTimeField; expected @Override
        public DurationField getLeapDurationField() {
                             ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DurationField getLeapDurationField() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:801: warning: [MissingOverride] getMinimumValue implements method in BaseDateTimeField; expected @Override
        public int getMinimumValue() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMinimumValue() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:807: warning: [MissingOverride] getMinimumValue overrides method in BaseDateTimeField; expected @Override
        public int getMinimumValue(ReadablePartial partial) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMinimumValue(ReadablePartial partial) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:811: warning: [MissingOverride] getMinimumValue overrides method in BaseDateTimeField; expected @Override
        public int getMinimumValue(ReadablePartial partial, int[] values) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMinimumValue(ReadablePartial partial, int[] values) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:815: warning: [MissingOverride] getMinimumValue overrides method in BaseDateTimeField; expected @Override
        public int getMinimumValue(long instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMinimumValue(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:832: warning: [MissingOverride] getMaximumValue implements method in BaseDateTimeField; expected @Override
        public int getMaximumValue() {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumValue() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:838: warning: [MissingOverride] getMaximumValue overrides method in BaseDateTimeField; expected @Override
        public int getMaximumValue(long instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumValue(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:855: warning: [MissingOverride] getMaximumValue overrides method in BaseDateTimeField; expected @Override
        public int getMaximumValue(ReadablePartial partial) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumValue(ReadablePartial partial) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:860: warning: [MissingOverride] getMaximumValue overrides method in BaseDateTimeField; expected @Override
        public int getMaximumValue(ReadablePartial partial, int[] values) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumValue(ReadablePartial partial, int[] values) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:872: warning: [MissingOverride] roundFloor implements method in BaseDateTimeField; expected @Override
        public long roundFloor(long instant) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long roundFloor(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:887: warning: [MissingOverride] roundCeiling overrides method in BaseDateTimeField; expected @Override
        public long roundCeiling(long instant) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long roundCeiling(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:902: warning: [MissingOverride] getMaximumTextLength overrides method in BaseDateTimeField; expected @Override
        public int getMaximumTextLength(Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumTextLength(Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:907: warning: [MissingOverride] getMaximumShortTextLength overrides method in BaseDateTimeField; expected @Override
        public int getMaximumShortTextLength(Locale locale) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumShortTextLength(Locale locale) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:973: warning: [MissingOverride] add overrides method in CutoverField; expected @Override
        public long add(long instant, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:995: warning: [MissingOverride] add overrides method in CutoverField; expected @Override
        public long add(long instant, long value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, long value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:1017: warning: [MissingOverride] getDifference overrides method in CutoverField; expected @Override
        public int getDifference(long minuendInstant, long subtrahendInstant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getDifference(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:1037: warning: [MissingOverride] getDifferenceAsLong overrides method in CutoverField; expected @Override
        public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:1067: warning: [MissingOverride] getMinimumValue overrides method in CutoverField; expected @Override
        public int getMinimumValue(long instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMinimumValue(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:1075: warning: [MissingOverride] getMaximumValue overrides method in CutoverField; expected @Override
        public int getMaximumValue(long instant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getMaximumValue(long instant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:1098: warning: [MissingOverride] add overrides method in DecoratedDurationField; expected @Override
        public long add(long instant, int value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, int value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:1102: warning: [MissingOverride] add overrides method in DecoratedDurationField; expected @Override
        public long add(long instant, long value) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long add(long instant, long value) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:1106: warning: [MissingOverride] getDifference overrides method in BaseDurationField; expected @Override
        public int getDifference(long minuendInstant, long subtrahendInstant) {
                   ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int getDifference(long minuendInstant, long subtrahendInstant) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-6/src/main/java/org/joda/time/chrono/GJChronology.java:1110: warning: [MissingOverride] getDifferenceAsLong overrides method in DecoratedDurationField; expected @Override
        public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {
                    ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {'?
51 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-7

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-7/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-7/src/main/java/org/joda/time/format/DateTimeFormatter.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-7/src/main/java/org/joda/time/format/DateTimeFormatter.java:190: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (locale == getLocale() || (locale != null && locale.equals(getLocale()))) {
                   ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(locale, getLocale()) || (locale != null && locale.equals(getLocale()))) {' or 'if (locale.equals(getLocale()) || (locale != null && locale.equals(getLocale()))) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-7/src/main/java/org/joda/time/format/DateTimeFormatter.java:322: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (iZone == zone) {
                  ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(iZone, zone)) {' or 'if (iZone.equals(zone)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-7/src/main/java/org/joda/time/format/DateTimeFormatter.java:369: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (iPivotYear == pivotYear || (iPivotYear != null && iPivotYear.equals(pivotYear))) {
                       ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(iPivotYear, pivotYear) || (iPivotYear != null && iPivotYear.equals(pivotYear))) {' or 'if (iPivotYear.equals(pivotYear) || (iPivotYear != null && iPivotYear.equals(pivotYear))) {'?
3 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-8

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-8/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-8/src/main/java/org/joda/time/DateTimeZone.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-8/src/main/java/org/joda/time/DateTimeZone.java:475: warning: [ClassNewInstance] Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()
                    provider = (Provider) Class.forName(providerClass).newInstance();
                                                                                  ^
    (see http://errorprone.info/bugpattern/ClassNewInstance)
  Did you mean 'provider = (Provider) Class.forName(providerClass).getDeclaredConstructor().newInstance();'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-8/src/main/java/org/joda/time/DateTimeZone.java:559: warning: [ClassNewInstance] Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()
                    nameProvider = (NameProvider) Class.forName(providerClass).newInstance();
                                                                                          ^
    (see http://errorprone.info/bugpattern/ClassNewInstance)
  Did you mean 'nameProvider = (NameProvider) Class.forName(providerClass).getDeclaredConstructor().newInstance();'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-8/src/main/java/org/joda/time/DateTimeZone.java:630: warning: [MissingOverride] getZone implements method in BaseChronology; expected @Override
            public DateTimeZone getZone() {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeZone getZone() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-8/src/main/java/org/joda/time/DateTimeZone.java:633: warning: [MissingOverride] withUTC implements method in BaseChronology; expected @Override
            public Chronology withUTC() {
                              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology withUTC() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-8/src/main/java/org/joda/time/DateTimeZone.java:636: warning: [MissingOverride] withZone implements method in BaseChronology; expected @Override
            public Chronology withZone(DateTimeZone zone) {
                              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology withZone(DateTimeZone zone) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-8/src/main/java/org/joda/time/DateTimeZone.java:639: warning: [MissingOverride] toString implements method in BaseChronology; expected @Override
            public String toString() {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-8/src/main/java/org/joda/time/DateTimeZone.java:1054: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (newZone == this) {
                    ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(newZone, this)) {' or 'if (newZone.equals(this)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-8/src/main/java/org/joda/time/DateTimeZone.java:1265: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public abstract boolean equals(Object object);
                            ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public abstract boolean equals(Object object);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-8/src/main/java/org/joda/time/DateTimeZone.java:1272: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-8/src/main/java/org/joda/time/DateTimeZone.java:1280: warning: [MissingOverride] toString overrides method in Object; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
10 warnings

************************

####################################################################################################################################################################################################################

Running Errorprone on: Time-9

java -Xbootclasspath/p:/Users/stylethinking/Documents/StaticBugCheckers/static-checkers/error_prone_ant-2.1.1.jar com.google.errorprone.ErrorProneCompiler -implicit:none -cp /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-9/target/classes:/Users/stylethinking/Documents/StaticBugCheckers/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar /Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-9/src/main/java/org/joda/time/DateTimeZone.java

/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-9/src/main/java/org/joda/time/DateTimeZone.java:451: warning: [ClassNewInstance] Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()
                    provider = (Provider) Class.forName(providerClass).newInstance();
                                                                                  ^
    (see http://errorprone.info/bugpattern/ClassNewInstance)
  Did you mean 'provider = (Provider) Class.forName(providerClass).getDeclaredConstructor().newInstance();'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-9/src/main/java/org/joda/time/DateTimeZone.java:535: warning: [ClassNewInstance] Class.newInstance() bypasses exception checking; prefer getDeclaredConstructor().newInstance()
                    nameProvider = (NameProvider) Class.forName(providerClass).newInstance();
                                                                                          ^
    (see http://errorprone.info/bugpattern/ClassNewInstance)
  Did you mean 'nameProvider = (NameProvider) Class.forName(providerClass).getDeclaredConstructor().newInstance();'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-9/src/main/java/org/joda/time/DateTimeZone.java:606: warning: [MissingOverride] getZone implements method in BaseChronology; expected @Override
            public DateTimeZone getZone() {
                                ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public DateTimeZone getZone() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-9/src/main/java/org/joda/time/DateTimeZone.java:609: warning: [MissingOverride] withUTC implements method in BaseChronology; expected @Override
            public Chronology withUTC() {
                              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology withUTC() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-9/src/main/java/org/joda/time/DateTimeZone.java:612: warning: [MissingOverride] withZone implements method in BaseChronology; expected @Override
            public Chronology withZone(DateTimeZone zone) {
                              ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public Chronology withZone(DateTimeZone zone) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-9/src/main/java/org/joda/time/DateTimeZone.java:615: warning: [MissingOverride] toString implements method in BaseChronology; expected @Override
            public String toString() {
                          ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-9/src/main/java/org/joda/time/DateTimeZone.java:1030: warning: [ReferenceEquality] Comparison using reference equality instead of value equality
        if (newZone == this) {
                    ^
    (see http://errorprone.info/bugpattern/ReferenceEquality)
  Did you mean 'if (Objects.equals(newZone, this)) {' or 'if (newZone.equals(this)) {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-9/src/main/java/org/joda/time/DateTimeZone.java:1241: warning: [MissingOverride] equals overrides method in Object; expected @Override
    public abstract boolean equals(Object object);
                            ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public abstract boolean equals(Object object);'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-9/src/main/java/org/joda/time/DateTimeZone.java:1248: warning: [MissingOverride] hashCode overrides method in Object; expected @Override
    public int hashCode() {
               ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public int hashCode() {'?
/Users/stylethinking/Documents/StaticBugCheckers/defects4j/projects/b/Time-9/src/main/java/org/joda/time/DateTimeZone.java:1256: warning: [MissingOverride] toString overrides method in Object; expected @Override
    public String toString() {
                  ^
    (see http://errorprone.info/bugpattern/MissingOverride)
  Did you mean '@Override public String toString() {'?
10 warnings

************************

####################################################################################################################################################################################################################

